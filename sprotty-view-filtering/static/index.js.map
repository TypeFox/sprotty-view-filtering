{
  "version": 3,
  "sources": ["../node_modules/sprotty-protocol/src/utils/object.ts", "../node_modules/sprotty-protocol/src/actions.ts", "../node_modules/sprotty/src/base/actions/action.ts", "../node_modules/inversify/src/constants/metadata_keys.ts", "../node_modules/inversify/src/constants/literal_types.ts", "../node_modules/inversify/src/utils/id.ts", "../node_modules/inversify/src/bindings/binding.ts", "../node_modules/inversify/src/constants/error_msgs.ts", "../node_modules/inversify/src/planning/metadata_reader.ts", "../node_modules/inversify/src/bindings/binding_count.ts", "../node_modules/inversify/src/utils/exceptions.ts", "../node_modules/inversify/src/utils/serialization.ts", "../node_modules/inversify/src/planning/context.ts", "../node_modules/inversify/src/planning/metadata.ts", "../node_modules/inversify/src/planning/plan.ts", "../node_modules/inversify/src/annotation/lazy_service_identifier.ts", "../node_modules/inversify/src/planning/queryable_string.ts", "../node_modules/inversify/src/planning/target.ts", "../node_modules/inversify/src/planning/reflection_utils.ts", "../node_modules/inversify/src/planning/request.ts", "../node_modules/inversify/src/planning/planner.ts", "../node_modules/inversify/src/utils/async.ts", "../node_modules/inversify/src/scope/scope.ts", "../node_modules/inversify/src/utils/factory_type.ts", "../node_modules/inversify/src/utils/binding_utils.ts", "../node_modules/inversify/src/resolution/instantiation.ts", "../node_modules/inversify/src/resolution/resolver.ts", "../node_modules/inversify/src/syntax/constraint_helpers.ts", "../node_modules/inversify/src/syntax/binding_when_syntax.ts", "../node_modules/inversify/src/syntax/binding_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_when_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_in_syntax.ts", "../node_modules/inversify/src/syntax/binding_in_when_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_to_syntax.ts", "../node_modules/inversify/src/container/container_snapshot.ts", "../node_modules/inversify/src/utils/clonable.ts", "../node_modules/inversify/src/container/lookup.ts", "../node_modules/inversify/src/container/module_activation_store.ts", "../node_modules/inversify/src/container/container.ts", "../node_modules/inversify/src/container/container_module.ts", "../node_modules/inversify/src/utils/js.ts", "../node_modules/inversify/src/annotation/decorator_utils.ts", "../node_modules/inversify/src/annotation/injectable.ts", "../node_modules/inversify/src/annotation/tagged.ts", "../node_modules/inversify/src/annotation/named.ts", "../node_modules/inversify/src/annotation/inject_base.ts", "../node_modules/inversify/src/annotation/inject.ts", "../node_modules/inversify/src/annotation/optional.ts", "../node_modules/inversify/src/annotation/unmanaged.ts", "../node_modules/inversify/src/annotation/multi_inject.ts", "../node_modules/inversify/src/annotation/target_name.ts", "../node_modules/inversify/src/annotation/property_event_decorator.ts", "../node_modules/inversify/src/annotation/post_construct.ts", "../node_modules/inversify/src/annotation/pre_destroy.ts", "../node_modules/inversify/src/interfaces/interfaces.ts", "../node_modules/inversify/src/inversify.ts", "../node_modules/sprotty-protocol/src/utils/async.ts", "../node_modules/sprotty/src/base/types.ts", "../node_modules/sprotty/src/utils/registry.ts", "../node_modules/sprotty-protocol/src/utils/geometry.ts", "../node_modules/sprotty/src/utils/iterable.ts", "../node_modules/sprotty/src/base/model/smodel.ts", "../node_modules/sprotty/src/base/model/smodel-factory.ts", "../node_modules/sprotty/src/base/animations/animation-frame-syncer.ts", "../node_modules/sprotty/src/base/actions/action-dispatcher.ts", "../node_modules/sprotty/src/utils/inversify.ts", "../node_modules/sprotty/src/base/actions/action-handler.ts", "../node_modules/sprotty/src/base/actions/diagram-locker.ts", "../node_modules/sprotty/src/base/animations/easing.ts", "../node_modules/sprotty/src/base/animations/animation.ts", "../node_modules/sprotty/src/base/commands/command.ts", "../node_modules/sprotty/src/base/commands/command-registration.ts", "../node_modules/sprotty/src/base/commands/command-stack-options.ts", "../node_modules/sprotty/src/base/commands/command-stack.ts", "../node_modules/sprotty-protocol/src/action-handler.ts", "../node_modules/sprotty-protocol/src/utils/model-utils.ts", "../node_modules/sprotty-protocol/src/diagram-server.ts", "../node_modules/sprotty-protocol/src/model.ts", "../node_modules/sprotty-protocol/src/index.ts", "../node_modules/sprotty/src/utils/browser.ts", "../node_modules/sprotty/src/base/features/initialize-canvas.ts", "../node_modules/sprotty/src/base/features/set-model.ts", "../node_modules/sprotty/src/base/model/smodel-utils.ts", "../node_modules/sprotty/src/base/tool-manager/tool.ts", "../node_modules/sprotty/src/base/views/vnode-utils.ts", "../node_modules/sprotty/src/base/views/key-tool.ts", "../node_modules/sprotty/src/utils/keyboard.ts", "../node_modules/sprotty/src/base/tool-manager/tool-manager.ts", "../node_modules/sprotty/src/base/ui-extensions/ui-extension-registry.ts", "../node_modules/sprotty/src/base/ui-extensions/ui-extension.ts", "../node_modules/sprotty/src/base/views/dom-helper.ts", "../node_modules/sprotty/src/base/views/mouse-tool.ts", "../node_modules/snabbdom/build/snabbdom.cjs.js", "../node_modules/sprotty/src/base/views/thunk-view.ts", "../node_modules/sprotty/src/lib/jsx.ts", "../node_modules/sprotty/src/base/views/view.tsx", "../node_modules/sprotty/src/base/views/viewer-cache.ts", "../node_modules/sprotty/src/base/views/viewer-options.ts", "../node_modules/sprotty/src/base/views/viewer.tsx", "../node_modules/sprotty/src/base/views/vnode-postprocessor.ts", "../node_modules/sprotty/src/utils/logging.ts", "../node_modules/sprotty/src/base/views/id-postprocessor.ts", "../node_modules/sprotty/src/base/views/css-class-postprocessor.ts", "../node_modules/sprotty/src/base/di.config.ts", "../node_modules/sprotty/src/features/bounds/model.ts", "../node_modules/sprotty/src/features/bounds/bounds-manipulation.ts", "../node_modules/sprotty/src/features/bounds/layout.ts", "../node_modules/sprotty/src/features/bounds/hidden-bounds-updater.ts", "../node_modules/sprotty/src/features/bounds/abstract-layout.ts", "../node_modules/sprotty/src/features/bounds/vbox-layout.ts", "../node_modules/sprotty/src/features/bounds/hbox-layout.ts", "../node_modules/sprotty/src/features/bounds/stack-layout.ts", "../node_modules/sprotty/src/features/bounds/views.ts", "../node_modules/sprotty/src/features/button/button-handler.ts", "../node_modules/sprotty/src/features/fade/model.ts", "../node_modules/sprotty/src/features/button/model.ts", "../node_modules/sprotty/src/features/nameable/model.ts", "../node_modules/sprotty/src/features/command-palette/action-providers.ts", "../node_modules/sprotty/src/utils/codicon.ts", "../node_modules/sprotty/src/features/select/model.ts", "../node_modules/autocompleter/autocomplete.ts", "../node_modules/sprotty/src/features/command-palette/command-palette.ts", "../node_modules/sprotty/src/features/context-menu/context-menu-service.ts", "../node_modules/sprotty/src/features/edit/delete.ts", "../node_modules/sprotty/src/features/context-menu/menu-providers.ts", "../node_modules/sprotty/src/features/context-menu/mouse-listener.ts", "../node_modules/sprotty/src/features/hover/model.ts", "../node_modules/sprotty/src/features/move/model.ts", "../node_modules/sprotty/src/features/routing/model.ts", "../node_modules/sprotty/src/features/edge-layout/model.ts", "../node_modules/sprotty/src/features/edit/model.ts", "../node_modules/sprotty/src/utils/geometry.ts", "../node_modules/sprotty/src/features/viewport/model.ts", "../node_modules/sprotty/src/features/export/model.ts", "../node_modules/sprotty/src/features/viewport/viewport-root.ts", "../node_modules/sprotty/src/graph/sgraph.ts", "../node_modules/sprotty/src/features/routing/anchor.ts", "../node_modules/sprotty/src/features/routing/abstract-edge-router.ts", "../node_modules/sprotty/src/features/routing/polyline-edge-router.ts", "../node_modules/sprotty/src/features/routing/routing.ts", "../node_modules/sprotty/src/features/edge-layout/edge-layout.ts", "../node_modules/sprotty/src/features/edge-layout/di.config.ts", "../node_modules/sprotty/src/features/edit/create.ts", "../node_modules/sprotty/src/features/edit/create-on-drag.ts", "../node_modules/sprotty/src/lib/svg-views.tsx", "../node_modules/sprotty/src/features/edit/edit-label.ts", "../node_modules/sprotty/src/features/export/svg-exporter.ts", "../node_modules/sprotty/src/model-source/model-source.ts", "../node_modules/sprotty/src/model-source/commit-model.ts", "../node_modules/sprotty/src/features/viewport/zoom.ts", "../node_modules/sprotty/src/features/edit/edit-label-ui.ts", "../node_modules/sprotty/src/features/edit/edit-routing.ts", "../node_modules/sprotty/src/features/edit/reconnect.ts", "../node_modules/sprotty/src/features/edit/di.config.ts", "../node_modules/sprotty/src/features/expand/model.ts", "../node_modules/sprotty/src/features/expand/expand.ts", "../node_modules/sprotty/src/features/expand/views.tsx", "../node_modules/sprotty/src/features/export/export.ts", "../node_modules/sprotty/src/features/fade/fade.ts", "../node_modules/sprotty/src/features/hover/hover.ts", "../node_modules/sprotty/src/features/decoration/model.ts", "../node_modules/sprotty/src/features/decoration/views.tsx", "../node_modules/sprotty/src/features/decoration/decoration-placer.ts", "../node_modules/tinyqueue/tinyqueue.js", "../node_modules/sprotty/src/features/edge-intersection/sweepline.ts", "../node_modules/sprotty/src/features/edge-intersection/intersection-finder.ts", "../node_modules/sprotty/src/features/move/move.ts", "../node_modules/sprotty/src/features/move/snap.ts", "../node_modules/sprotty/src/features/open/model.ts", "../node_modules/sprotty/src/features/open/open.ts", "../node_modules/sprotty/src/features/projection/model.ts", "../node_modules/sprotty/src/features/projection/views.tsx", "../node_modules/sprotty/src/features/routing/polyline-anchors.ts", "../node_modules/sprotty/src/features/routing/bezier-edge-router.ts", "../node_modules/sprotty/src/features/routing/bezier-anchors.ts", "../node_modules/sprotty/src/features/routing/manhattan-edge-router.ts", "../node_modules/sprotty/src/features/routing/manhattan-anchors.ts", "../node_modules/sprotty/src/features/routing/views.ts", "../node_modules/sprotty/src/base/commands/request-command.ts", "../node_modules/sprotty/src/features/viewport/scroll.ts", "../node_modules/sprotty/src/features/select/select.ts", "../node_modules/sprotty/src/features/undo-redo/undo-redo.ts", "../node_modules/sprotty/src/features/update/model-matching.ts", "../node_modules/sprotty/src/features/bounds/resize.ts", "../node_modules/sprotty/src/features/update/update-model.ts", "../node_modules/sprotty/src/features/viewport/viewport.ts", "../node_modules/sprotty/src/features/viewport/center-fit.ts", "../node_modules/sprotty/src/features/zorder/zorder.ts", "../node_modules/sprotty/src/graph/sgraph-factory.ts", "../node_modules/sprotty/src/graph/di.config.ts", "../node_modules/sprotty/src/features/bounds/di.config.ts", "../node_modules/sprotty/src/features/button/di.config.ts", "../node_modules/sprotty/src/features/command-palette/di.config.ts", "../node_modules/sprotty/src/features/context-menu/di.config.ts", "../node_modules/sprotty/src/features/decoration/di.config.ts", "../node_modules/sprotty/src/features/edge-intersection/di.config.ts", "../node_modules/sprotty/src/features/expand/di.config.ts", "../node_modules/sprotty/src/features/export/di.config.ts", "../node_modules/sprotty/src/features/fade/di.config.ts", "../node_modules/sprotty/src/features/hover/popup-position-updater.ts", "../node_modules/sprotty/src/features/hover/di.config.ts", "../node_modules/sprotty/src/features/move/di.config.ts", "../node_modules/sprotty/src/features/open/di.config.ts", "../node_modules/sprotty/src/features/routing/di.config.ts", "../node_modules/sprotty/src/features/select/di.config.ts", "../node_modules/sprotty/src/features/undo-redo/di.config.ts", "../node_modules/sprotty/src/features/update/di.config.ts", "../node_modules/sprotty/src/features/viewport/di.config.ts", "../node_modules/sprotty/src/features/zorder/di.config.ts", "../node_modules/sprotty/src/graph/views.tsx", "../node_modules/sprotty/src/model-source/di.config.ts", "../node_modules/sprotty/src/lib/modules.ts", "../node_modules/sprotty/src/lib/virtualize.ts", "../node_modules/sprotty/src/lib/model.ts", "../node_modules/sprotty/src/lib/generic-views.tsx", "../node_modules/sprotty/src/lib/html-views.tsx", "../node_modules/file-saver/src/FileSaver.js", "../node_modules/sprotty/src/model-source/diagram-server.ts", "../node_modules/sprotty/src/model-source/local-model-source.ts", "../node_modules/sprotty/src/model-source/logging.ts", "../node_modules/sprotty/src/model-source/websocket.ts", "../node_modules/sprotty/src/utils/color.ts", "../node_modules/sprotty/src/index.ts", "../node_modules/reflect-metadata/Reflect.js", "../src/index.ts", "../src/di.config.ts", "../src/views.tsx", "../src/model-source.ts"],
  "sourcesContent": ["/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport function isObject(data: unknown): data is Record<PropertyKey, unknown> {\n    return typeof data === 'object' && data !== null;\n}\n\nexport type TypeOf<T> =\n    T extends number ? 'number'\n    : T extends string ? 'string'\n    : T extends boolean ? 'boolean'\n    : T extends bigint ? 'bigint'\n    : T extends symbol ? 'symbol'\n    : T extends Function ? 'function'\n    : T extends object ? 'object'\n    : 'undefined';\n\nexport function hasOwnProperty<K extends PropertyKey, T>(arg: unknown, key: K | K[], type?: TypeOf<T> | ((v: unknown) => v is T)): arg is Record<K, T> {\n    if (!isObject(arg)) {\n        return false;\n    }\n    if (Array.isArray(key)) {\n        for (const k of key) {\n            if (!Object.prototype.hasOwnProperty.call(arg, k)) {\n                return false;\n            }\n            if (typeof type === 'string' && typeof arg[k] !== type) {\n                return false;\n            } else if (typeof type === 'function' && !type(arg[k])) {\n                return false;\n            }\n        }\n    } else {\n        if (!Object.prototype.hasOwnProperty.call(arg, key)) {\n            return false;\n        }\n        if (typeof type === 'string') {\n            return typeof arg[key] === type;\n        }\n        if (typeof type === 'function') {\n            return type(arg[key]);\n        }\n    }\n    return true;\n}\n\nexport function safeAssign<T extends {}>(target: T, partial: Partial<T>): T {\n    return Object.assign(target, partial);\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelRoot, SModelElement, Viewport } from './model';\nimport { Bounds, Point, Dimension } from './utils/geometry';\nimport { JsonAny, JsonMap } from './utils/json';\nimport { hasOwnProperty } from './utils/object';\n\n/**\n * Wrapper for actions when transferring them between client and server.\n * The `clientId` is used to identify the specific diagram instance in the client.\n */\nexport interface ActionMessage {\n    clientId: string\n    action: Action\n}\n\nexport function isActionMessage(object: unknown): object is ActionMessage {\n    return hasOwnProperty(object, 'action');\n}\n\n/**\n * An action describes a change to the model declaratively.\n * It is a plain data structure, and as such transferable between server and client.\n */\nexport interface Action {\n    kind: string;\n}\n\nexport function isAction(object?: unknown): object is Action {\n    return hasOwnProperty<string, string>(object, 'kind', 'string');\n}\n\n/**\n * A request action is tied to the expectation of receiving a corresponding response action.\n * The `requestId` property is used to match the received response with the original request.\n */\nexport interface RequestAction<Res extends ResponseAction> extends Action {\n    requestId: string\n}\n\nexport function isRequestAction(object?: Action): object is RequestAction<ResponseAction> {\n    return hasOwnProperty<string, string>(object, 'requestId', 'string');\n}\n\nlet nextRequestId = 1;\n/**\n * Generate a unique `requestId` for a request action.\n */\nexport function generateRequestId(): string {\n    return (nextRequestId++).toString();\n}\n\n/**\n * A response action is sent to respond to a request action. The `responseId` must match\n * the `requestId` of the preceding request. In case the `responseId` is empty or undefined,\n * the action is handled as standalone, i.e. it was fired without a preceding request.\n */\nexport interface ResponseAction extends Action {\n    responseId: string;\n}\n\n/**\n * A response action is sent to respond to a request action. The `responseId` must match\n * the `requestId` of the preceding request. In case the `responseId` is empty or undefined,\n * the action is handled as standalone, i.e. it was fired without a preceding request.\n */\n\nexport function isResponseAction(object?: Action): object is ResponseAction {\n    return hasOwnProperty<string, string>(object, 'responseId', 'string') && object.responseId !== '';\n}\n\n/**\n * A reject action is fired to indicate that a request must be rejected.\n */\nexport interface RejectAction extends ResponseAction {\n    kind: typeof RejectAction.KIND\n    message: string\n    detail?: JsonAny\n}\nexport namespace RejectAction {\n    export const KIND = 'rejectRequest';\n\n    export function create(options: { message: string, detail?: JsonAny, requestId: string }): RejectAction {\n        return {\n            kind: KIND,\n            message: options.message,\n            detail: options.detail,\n            responseId: options.requestId\n        };\n    }\n}\n\n/**\n * Sent from the client to the model source (e.g. a DiagramServer) in order to request a model. Usually this\n * is the first message that is sent to the source, so it is also used to initiate the communication.\n * The response is a SetModelAction or an UpdateModelAction.\n */\nexport interface RequestModelAction extends RequestAction<SetModelAction> {\n    kind: typeof RequestModelAction.KIND\n    options?: JsonMap\n}\nexport namespace RequestModelAction {\n    export const KIND = 'requestModel';\n\n    export function create(options?: JsonMap): RequestModelAction {\n        return {\n            kind: KIND,\n            options,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * Sent from the model source to the client in order to set the model. If a model is already present, it is replaced.\n */\nexport interface SetModelAction extends ResponseAction {\n    kind: typeof SetModelAction.KIND\n    newRoot: SModelRoot\n}\nexport namespace SetModelAction {\n    export const KIND = 'setModel';\n\n    export function create(newRoot: SModelRoot, requestId: string = ''): SetModelAction {\n        return {\n            kind: KIND,\n            newRoot,\n            responseId: requestId\n        };\n    }\n}\n\n/**\n * Sent from the model source to the client in order to update the model. If no model is present yet,\n * this behaves the same as a SetModelAction. The transition from the old model to the new one can be animated.\n */\nexport interface UpdateModelAction {\n    kind: typeof UpdateModelAction.KIND\n    newRoot?: SModelRoot\n    matches?: Match[]\n    animate?: boolean\n    cause?: Action\n}\nexport namespace UpdateModelAction {\n    export const KIND = 'updateModel';\n\n    export function create(input: SModelRoot | Match[], options: { animate?: boolean, cause?: Action } = {}): UpdateModelAction {\n        if (Array.isArray(input)) {\n            return {\n                kind: KIND,\n                matches: input,\n                animate: options.animate,\n                cause: options.cause\n            };\n        } else {\n            return {\n                kind: KIND,\n                newRoot: input,\n                animate: options.animate,\n                cause: options.cause\n            };\n        }\n    }\n}\n\nexport interface Match {\n    left?: SModelElement\n    right?: SModelElement\n    leftParentId?: string\n    rightParentId?: string\n}\n\n/**\n * Triggered when the user hovers the mouse pointer over an element to get a popup with details on\n * that element. This action is sent from the client to the model source, e.g. a DiagramServer.\n * The response is a SetPopupModelAction.\n */\nexport interface RequestPopupModelAction extends RequestAction<SetPopupModelAction> {\n    kind: typeof RequestPopupModelAction.KIND\n    elementId: string\n    bounds: Bounds\n}\nexport namespace RequestPopupModelAction {\n    export const KIND = 'requestPopupModel';\n\n    export function create(options: { elementId: string, bounds: Bounds }): RequestPopupModelAction {\n        return {\n            kind: KIND,\n            elementId: options.elementId,\n            bounds: options.bounds,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * Sent from the model source to the client to display a popup in response to a RequestPopupModelAction.\n * This action can also be used to remove any existing popup by choosing EMPTY_ROOT as root element.\n */\nexport interface SetPopupModelAction extends ResponseAction {\n    kind: typeof SetPopupModelAction.KIND\n    newRoot: SModelRoot\n}\nexport namespace SetPopupModelAction {\n    export const KIND = 'setPopupModel';\n\n    export function create(newRoot: SModelRoot, requestId: string = ''): SetPopupModelAction {\n        return {\n            kind: KIND,\n            newRoot,\n            responseId: requestId\n        };\n    }\n}\n\n/**\n * Sent from the model source (e.g. a DiagramServer) to the client to update the bounds of some\n * (or all) model elements.\n */\nexport interface SetBoundsAction extends Action {\n    kind: typeof SetBoundsAction.KIND\n    bounds: ElementAndBounds[]\n}\nexport namespace SetBoundsAction {\n    export const KIND = 'setBounds';\n\n    export function create(bounds: ElementAndBounds[]): SetBoundsAction {\n        return {\n            kind: KIND,\n            bounds\n        };\n    }\n}\n\n/**\n * Sent from the model source to the client to request bounds for the given model. The model is\n * rendered invisibly so the bounds can derived from the DOM. The response is a ComputedBoundsAction.\n * This hidden rendering round-trip is necessary if the client is responsible for parts of the layout\n * (see `needsClientLayout` viewer option).\n */\nexport interface RequestBoundsAction extends RequestAction<ComputedBoundsAction> {\n    kind: typeof RequestBoundsAction.KIND\n    newRoot: SModelRoot\n}\nexport namespace RequestBoundsAction {\n    export const KIND = 'requestBounds';\n\n    export function create(newRoot: SModelRoot): RequestBoundsAction {\n        return {\n            kind: KIND,\n            newRoot,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * Sent from the client to the model source (e.g. a DiagramServer) to transmit the result of bounds\n * computation as a response to a RequestBoundsAction. If the server is responsible for parts of\n * the layout (see `needsServerLayout` viewer option), it can do so after applying the computed bounds\n * received with this action. Otherwise there is no need to send the computed bounds to the server,\n * so they can be processed locally by the client.\n */\nexport interface ComputedBoundsAction extends ResponseAction {\n    kind: typeof ComputedBoundsAction.KIND\n    bounds: ElementAndBounds[]\n    revision?: number\n    alignments?: ElementAndAlignment[]\n}\nexport namespace ComputedBoundsAction {\n    export const KIND = 'computedBounds';\n\n    export function create(bounds: ElementAndBounds[], options: { revision?: number, alignments?: ElementAndAlignment[], requestId?: string } = {}): ComputedBoundsAction {\n        return {\n            kind: KIND,\n            bounds,\n            revision: options.revision,\n            alignments: options.alignments,\n            responseId: options.requestId ?? ''\n        };\n    }\n}\n\n/**\n * Associates new bounds with a model element, which is referenced via its id.\n */\nexport interface ElementAndBounds {\n    elementId: string\n    newPosition?: Point\n    newSize: Dimension\n}\n\n/**\n * Associates a new alignment with a model element, which is referenced via its id.\n */\nexport interface ElementAndAlignment {\n    elementId: string\n    newAlignment: Point\n}\n\n/**\n * Transport logging data to be stored elsewhere.\n */\nexport interface LoggingAction extends Action {\n    kind: typeof LoggingAction.KIND;\n    severity: string\n    time: string\n    caller: string\n    message: string\n    params: string[]\n}\nexport namespace LoggingAction {\n    export const KIND = 'logging';\n\n    export function create(options: { severity: string, time: string, caller: string, message: string, params: string[] }): LoggingAction {\n        return {\n            kind: KIND,\n            ...options\n        };\n    }\n}\n\n/**\n * Triggered when the user changes the selection, e.g. by clicking on a selectable element. The resulting\n * SelectCommand changes the `selected` state accordingly, so the elements can be rendered differently.\n * This action is also forwarded to the diagram server, if present, so it may react on the selection change.\n * Furthermore, the server can send such an action to the client in order to change the selection programmatically.\n */\nexport interface SelectAction {\n    kind: typeof SelectAction.KIND\n    selectedElementsIDs: string[]\n    deselectedElementsIDs: string[]\n}\nexport namespace SelectAction {\n    export const KIND = 'elementSelected';\n\n    export function create(options: { selectedElementsIDs?: string[], deselectedElementsIDs?: string[] }): SelectAction {\n        return {\n            kind: KIND,\n            selectedElementsIDs: options.selectedElementsIDs ?? [],\n            deselectedElementsIDs: options.deselectedElementsIDs ?? []\n        };\n    }\n}\n\n/**\n * Programmatic action for selecting or deselecting all elements.\n * If `select` is true, all elements are selected, otherwise they are deselected.\n */\nexport interface SelectAllAction {\n    kind: typeof SelectAllAction.KIND\n    select: boolean\n}\nexport namespace SelectAllAction {\n    export const KIND = 'allSelected';\n\n    export function create(options: { select?: boolean } = {}): SelectAllAction {\n        return {\n            kind: KIND,\n            select: options.select ?? true\n        };\n    }\n}\n\n/**\n * Request action for retrieving the current selection.\n */\nexport interface GetSelectionAction extends RequestAction<SelectionResult> {\n    kind: typeof GetSelectionAction.KIND\n}\nexport namespace GetSelectionAction {\n    export const KIND = 'getSelection';\n\n    export function create(): GetSelectionAction {\n        return {\n            kind: KIND,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * Result for a `GetSelectionAction`.\n */\nexport interface SelectionResult extends ResponseAction {\n    kind: typeof SelectionResult.KIND\n    selectedElementsIDs: string[]\n}\nexport namespace SelectionResult {\n    export const KIND = 'selectionResult';\n\n    export function create(selectedElementsIDs: string[], requestId: string): SelectionResult {\n        return {\n            kind: KIND,\n            selectedElementsIDs,\n            responseId: requestId\n        };\n    }\n}\n\n/**\n * Sent from the client to the model source to recalculate a diagram when elements\n * are collapsed/expanded by the client.\n */\nexport interface CollapseExpandAction {\n    kind: typeof CollapseExpandAction.KIND\n    expandIds: string[]\n    collapseIds: string[]\n}\nexport namespace CollapseExpandAction {\n    export const KIND = 'collapseExpand';\n\n    export function create(options: { expandIds?: string[], collapseIds?: string[] }): CollapseExpandAction {\n        return {\n            kind: KIND,\n            expandIds: options.expandIds ?? [],\n            collapseIds: options.collapseIds ?? []\n        };\n    }\n}\n\n/**\n * Programmatic action for expanding or collapsing all elements.\n * If `expand` is true, all elements are expanded, otherwise they are collapsed.\n */\nexport interface CollapseExpandAllAction {\n    kind: typeof CollapseExpandAllAction.KIND\n    expand: boolean\n}\nexport namespace CollapseExpandAllAction {\n    export const KIND = 'collapseExpandAll';\n\n    export function create(options: { expand?: boolean } = {}): CollapseExpandAllAction {\n        return {\n            kind: KIND,\n            expand: options.expand ?? true\n        };\n    }\n}\n\nexport interface OpenAction {\n    kind: typeof OpenAction.KIND\n    elementId: string\n}\nexport namespace OpenAction {\n    export const KIND = 'open';\n\n    export function create(elementId: string): OpenAction {\n        return {\n            kind: KIND,\n            elementId\n        };\n    }\n}\n\n/**\n * Request a layout of the diagram or the selected elements only.\n */\nexport interface LayoutAction {\n    kind: typeof LayoutAction.KIND\n    layoutType?: string\n    elementIds?: string[]\n}\nexport namespace LayoutAction {\n    export const KIND = 'layout';\n\n    export function create(options: { layoutType?: string, elementIds?: string[] } = {}): LayoutAction {\n        return {\n            kind: KIND,\n            layoutType: options.layoutType,\n            elementIds: options.elementIds\n        };\n    }\n}\n\n/**\n * Triggered when the user requests the viewer to center on the current model. The resulting\n * CenterCommand changes the scroll setting of the viewport accordingly.\n * It also resets the zoom to its default if retainZoom is false.\n * This action can also be sent from the model source to the client in order to perform such a\n * viewport change programmatically.\n */\nexport interface CenterAction extends Action {\n    kind: typeof CenterAction.KIND\n    elementIds: string[]\n    animate: boolean\n    retainZoom: boolean\n    zoomScale?: number\n}\nexport namespace CenterAction {\n    export const KIND = 'center';\n\n    export function create(elementIds: string[], options: { animate?: boolean, retainZoom?: boolean, zoomScale?: number } = {}): CenterAction {\n        return {\n            kind: KIND,\n            elementIds,\n            animate: options.animate ?? true,\n            retainZoom: options.retainZoom ?? false,\n            zoomScale: options.zoomScale\n        };\n    }\n}\n\n/**\n * Triggered when the user requests the viewer to fit its content to the available drawing area.\n * The resulting FitToScreenCommand changes the zoom and scroll settings of the viewport so the model\n * can be shown completely. This action can also be sent from the model source to the client in order\n * to perform such a viewport change programmatically.\n */\nexport interface FitToScreenAction extends Action {\n    kind: typeof FitToScreenAction.KIND;\n    elementIds: string[]\n    padding?: number\n    maxZoom?: number\n    animate: boolean\n}\nexport namespace FitToScreenAction {\n    export const KIND = 'fit';\n\n    export function create(elementIds: string[], options: { padding?: number, maxZoom?: number, animate?: boolean } = {}): FitToScreenAction {\n        return {\n            kind: KIND,\n            elementIds,\n            padding: options.padding,\n            maxZoom: options.maxZoom,\n            animate: options.animate ?? true\n        };\n    }\n}\n\n/**\n * Directly set the diagram viewport to the given scroll and zoom values.\n * The ID of the viewport element to manipulate must be given with the action\n * (usually it is the root element's ID).\n */\nexport interface SetViewportAction extends Action {\n    kind: typeof SetViewportAction.KIND;\n    elementId: string\n    newViewport: Viewport\n    animate: boolean\n}\nexport namespace SetViewportAction {\n    export const KIND = 'viewport';\n\n    export function create(elementId: string, newViewport: Viewport, options: { animate?: boolean } = {}): SetViewportAction {\n        return {\n            kind: KIND,\n            elementId,\n            newViewport,\n            animate: options.animate ?? true\n        };\n    }\n}\n\n/**\n * Request action for retrieving the current viewport and canvas bounds.\n */\nexport interface GetViewportAction extends RequestAction<ViewportResult> {\n    kind: typeof GetViewportAction.KIND;\n}\nexport namespace GetViewportAction {\n    export const KIND = 'getViewport';\n\n    export function create(): GetViewportAction {\n        return {\n            kind: KIND,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * Response to a `GetViewportAction`.\n */\nexport interface ViewportResult extends ResponseAction {\n    kind: typeof ViewportResult.KIND;\n    viewport: Viewport\n    canvasBounds: Bounds\n}\nexport namespace ViewportResult {\n    export const KIND = 'viewportResult';\n\n    export function create(viewport: Viewport, canvasBounds: Bounds, requestId: string): ViewportResult {\n        return {\n            kind: KIND,\n            viewport,\n            canvasBounds,\n            responseId: requestId\n        };\n    }\n}\n\n/**\n * Action to render the selected elements in front of others by manipulating the z-order.\n */\n export interface BringToFrontAction extends Action {\n    kind: typeof BringToFrontAction.KIND;\n    elementIDs: string[]\n}\nexport namespace BringToFrontAction {\n    export const KIND = 'bringToFront';\n\n    export function create(elementIDs: string[]): BringToFrontAction {\n        return {\n            kind: KIND,\n            elementIDs\n        };\n    }\n}\n\n/**\n * Undo the previous operation on the stack of operations.\n */\nexport interface UndoAction extends Action {\n    kind: typeof UndoAction.KIND;\n}\nexport namespace UndoAction {\n    export const KIND = 'undo';\n\n    export function create(): UndoAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n/**\n * Redo a previously undone operation.\n */\nexport interface RedoAction extends Action {\n    kind: typeof RedoAction.KIND;\n}\nexport namespace RedoAction {\n    export const KIND = 'redo';\n\n    export function create(): RedoAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n/**\n * Move an arbitrary set of elements to new positions.\n */\nexport interface MoveAction extends Action {\n    kind: typeof MoveAction.KIND\n    moves: ElementMove[]\n    animate: boolean\n    finished: boolean\n}\nexport namespace MoveAction {\n    export const KIND = 'move';\n\n    export function create(moves: ElementMove[], options: { animate?: boolean, finished?: boolean } = {}): MoveAction {\n        return {\n            kind: KIND,\n            moves,\n            animate: options.animate ?? true,\n            finished: options.finished ?? false\n        };\n    }\n}\n\nexport interface ElementMove {\n    elementId: string\n    elementType?: string\n    fromPosition?: Point\n    toPosition: Point\n}\n\n/**\n * Triggered when the user puts the mouse pointer over an element.\n */\nexport interface HoverFeedbackAction extends Action {\n    kind: typeof HoverFeedbackAction.KIND\n    mouseoverElement: string\n    mouseIsOver: boolean\n}\nexport namespace HoverFeedbackAction {\n    export const KIND = 'hoverFeedback';\n\n    export function create(options: { mouseoverElement: string, mouseIsOver: boolean }): HoverFeedbackAction {\n        return {\n            kind: KIND,\n            mouseoverElement: options.mouseoverElement,\n            mouseIsOver: options.mouseIsOver\n        };\n    }\n}\n\n/**\n * Create an element with the given schema and add it to the diagram.\n */\nexport interface CreateElementAction extends Action {\n    kind: typeof CreateElementAction.KIND\n    containerId: string\n    elementSchema: SModelElement\n}\nexport namespace CreateElementAction {\n    export const KIND = 'createElement';\n\n    export function create(elementSchema: SModelElement, options: { containerId: string }): CreateElementAction {\n        return {\n            kind: KIND,\n            elementSchema,\n            containerId: options.containerId\n        };\n    }\n}\n\n/**\n * Delete a set of elements identified by their IDs.\n */\nexport interface DeleteElementAction extends Action {\n    kind: typeof DeleteElementAction.KIND\n    elementIds: string[]\n}\nexport namespace DeleteElementAction {\n    export const KIND = 'delete';\n\n    export function create(elementIds: string[]): DeleteElementAction {\n        return {\n            kind: KIND,\n            elementIds\n        };\n    }\n}\n\n/**\n * Apply a text change to a label element.\n */\nexport interface ApplyLabelEditAction extends Action {\n    kind: typeof ApplyLabelEditAction.KIND;\n    labelId: string,\n    text: string\n}\nexport namespace ApplyLabelEditAction {\n    export const KIND = 'applyLabelEdit';\n\n    export function create(labelId: string, text: string): ApplyLabelEditAction {\n        return {\n            kind: KIND,\n            labelId,\n            text\n        };\n    }\n}\n\n/**\n * Change the source or target node of a routable element (edge of a graph).\n */\nexport interface ReconnectAction extends Action {\n    kind: typeof ReconnectAction.KIND\n    routableId: string\n    newSourceId?: string\n    newTargetId?: string\n}\nexport namespace ReconnectAction {\n    export const KIND = 'reconnect';\n\n    export function create(options: { routableId: string, newSourceId?: string, newTargetId?: string }): ReconnectAction {\n        return {\n            kind: KIND,\n            routableId: options.routableId,\n            newSourceId: options.newSourceId,\n            newTargetId: options.newTargetId\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { generateRequestId as generateRequestId2, Action as ProtocolAction} from 'sprotty-protocol/lib/actions';\nimport { JsonAny } from 'sprotty-protocol/lib/utils/json';\nimport { hasOwnProperty } from 'sprotty-protocol/lib/utils/object';\n\n/**\n * A list of actions with a label.\n * Labeled actions are used to denote a group of actions in a user-interface context, e.g.,\n * to define an entry in the command palette or in the context menu.\n */\nexport class LabeledAction {\n    constructor(readonly label: string, readonly actions: ProtocolAction[], readonly icon?: string) { }\n}\n\nexport function isLabeledAction(element: unknown): element is LabeledAction {\n    return element !== undefined\n        && (<LabeledAction>element).label !== undefined\n        && (<LabeledAction>element).actions !== undefined;\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * An action describes a change to the model declaratively.\n * It is a plain data structure, and as such transferable between server and client. An action must never contain actual\n * SModelElement instances, but either refer to them via their ids or contain serializable schema for model elements.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Action {\n    readonly kind: string\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isAction(object?: unknown): object is Action {\n    return hasOwnProperty<string, string>(object, 'kind', 'string');\n}\n\n/**\n * A request action is tied to the expectation of receiving a corresponding response action.\n * The `requestId` property is used to match the received response with the original request.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface RequestAction<Res extends ResponseAction> extends Action {\n    readonly requestId: string\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isRequestAction(object?: unknown): object is RequestAction<ResponseAction> {\n    return isAction(object) && hasOwnProperty<string, string>(object, 'requestId', 'string');\n}\n\n/**\n * Generate a unique `requestId` for a request action.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport const generateRequestId: () => string = generateRequestId2;\n\n/**\n * A response action is sent to respond to a request action. The `responseId` must match\n * the `requestId` of the preceding request. In case the `responseId` is empty or undefined,\n * the action is handled as standalone, i.e. it was fired without a preceding request.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ResponseAction extends Action {\n    readonly responseId: string\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isResponseAction(object?: unknown): object is ResponseAction {\n    return isAction(object) && hasOwnProperty<string, string>(object, 'responseId', 'string')\n            && object.responseId !== '';\n}\n\n/**\n * A reject action is fired to indicate that a request must be rejected.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class RejectAction implements ResponseAction {\n    static readonly KIND = 'rejectRequest';\n    readonly kind = RejectAction.KIND;\n\n    constructor(public readonly message: string,\n                public readonly responseId: string,\n                public readonly detail?: JsonAny) {}\n}\n\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred<T> {\n    resolve: (value?: T | PromiseLike<T>) => void;\n    reject: (reason?: any) => void;\n    readonly promise: Promise<T>;\n    private _state: DeferredState = 'unresolved';\n\n\n    constructor() {\n        this.promise = new Promise<T>((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        this.promise.then(\n            res => this._state = 'resolved',\n            rej => this._state = 'rejected'\n        );\n    }\n\n    private set state(state: DeferredState) {\n        if (this._state === 'unresolved') {\n            this._state = state;\n        }\n    }\n\n    get state(): DeferredState {\n        return this._state;\n    }\n}\n\nexport type DeferredState = 'resolved' | 'rejected' | 'unresolved';\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n /* eslint-disable @typescript-eslint/naming-convention */\nexport const TYPES = {\n    Action: Symbol('Action'),\n    IActionDispatcher: Symbol('IActionDispatcher'),\n    IActionDispatcherProvider: Symbol('IActionDispatcherProvider'),\n    IActionHandlerInitializer: Symbol('IActionHandlerInitializer'),\n    ActionHandlerRegistration: Symbol('ActionHandlerRegistration'),\n    ActionHandlerRegistryProvider: Symbol('ActionHandlerRegistryProvider'),\n    IAnchorComputer: Symbol('IAnchor'),\n    AnimationFrameSyncer: Symbol('AnimationFrameSyncer'),\n    /** @deprecated deprecated since 0.12.0 - please use `configureButtonHandler` */\n    IButtonHandler: Symbol('IButtonHandler'),\n    IButtonHandlerRegistration: Symbol('IButtonHandlerRegistration'),\n    ICommandPaletteActionProvider: Symbol('ICommandPaletteActionProvider'),\n    ICommandPaletteActionProviderRegistry: Symbol('ICommandPaletteActionProviderRegistry'),\n    CommandRegistration: Symbol('CommandRegistration'),\n    ICommandStack: Symbol('ICommandStack'),\n    CommandStackOptions: Symbol('CommandStackOptions'),\n    ICommandStackProvider: Symbol('ICommandStackProvider'),\n    IContextMenuItemProvider: Symbol.for(\"IContextMenuProvider\"),\n    IContextMenuProviderRegistry: Symbol.for(\"IContextMenuProviderRegistry\"),\n    IContextMenuService: Symbol.for(\"IContextMenuService\"),\n    IContextMenuServiceProvider: Symbol.for(\"IContextMenuServiceProvider\"),\n    DOMHelper: Symbol('DOMHelper'),\n    IDiagramLocker: Symbol('IDiagramLocker'),\n    IEdgeRouter: Symbol('IEdgeRouter'),\n    IEdgeRoutePostprocessor: Symbol('IEdgeRoutePostprocessor'),\n    IEditLabelValidationDecorator: Symbol('IEditLabelValidationDecorator'),\n    IEditLabelValidator: Symbol('IEditLabelValidator'),\n    HiddenModelViewer: Symbol('HiddenModelViewer'),\n    HiddenVNodePostprocessor: Symbol('HiddenVNodeDecorator'),\n    HoverState: Symbol('HoverState'),\n    KeyListener: Symbol('KeyListener'),\n    LayoutRegistration: Symbol('LayoutRegistration'),\n    LayoutRegistry: Symbol('LayoutRegistry'),\n    Layouter: Symbol('Layouter'),\n    LogLevel: Symbol('LogLevel'),\n    ILogger: Symbol('ILogger'),\n    IModelFactory: Symbol('IModelFactory'),\n    IModelLayoutEngine: Symbol('IModelLayoutEngine'),\n    ModelRendererFactory: Symbol('ModelRendererFactory'),\n    ModelSource: Symbol('ModelSource'),\n    ModelSourceProvider: Symbol('ModelSourceProvider'),\n    ModelViewer: Symbol('ModelViewer'),\n    MouseListener: Symbol('MouseListener'),\n    PatcherProvider: Symbol('PatcherProvider'),\n    IPopupModelProvider: Symbol('IPopupModelProvider'),\n    PopupModelViewer: Symbol('PopupModelViewer'),\n    PopupMouseListener: Symbol('PopupMouseListener'),\n    PopupVNodePostprocessor: Symbol('PopupVNodeDecorator'),\n    SModelElementRegistration: Symbol('SModelElementRegistration'),\n    SModelRegistry: Symbol('SModelRegistry'),\n    ISnapper: Symbol('ISnapper'),\n    SvgExporter: Symbol('SvgExporter'),\n    IToolManager: Symbol('IToolManager'),\n    IUIExtension: Symbol('IUIExtension'),\n    UIExtensionRegistry: Symbol('UIExtensionRegistry'),\n    IVNodePostprocessor: Symbol('IVNodePostprocessor'),\n    ViewRegistration: Symbol('ViewRegistration'),\n    ViewRegistry: Symbol('ViewRegistry'),\n    IViewer: Symbol('IViewer'),\n    ViewerOptions: Symbol('ViewerOptions'),\n    IViewerProvider: Symbol('IViewerProvider'),\n};\n/* eslint-enable */\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport class ProviderRegistry<T, U> {\n    protected elements: Map<string, new (u: U) => T> = new Map;\n\n    register(key: string, cstr: new (u: U) => T) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        if (this.hasKey(key))\n            throw new Error('Key is already registered: ' + key);\n        this.elements.set(key, cstr);\n    }\n\n    deregister(key: string) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        this.elements.delete(key);\n    }\n\n    hasKey(key: string): boolean {\n        return this.elements.has(key);\n    }\n\n    get(key: string, arg: U): T {\n        const existingCstr = this.elements.get(key);\n        if (existingCstr)\n            return new existingCstr(arg);\n        else\n            return this.missing(key, arg);\n    }\n\n    protected missing(key: string, arg: U): T | never {\n        throw new Error('Unknown registry key: ' + key);\n    }\n}\n\n@injectable()\nexport class FactoryRegistry<T, U> {\n    protected elements: Map<string, (u: U) => T> = new Map;\n\n    register(key: string, factory: (u: U) => T) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        if (this.hasKey(key))\n            throw new Error('Key is already registered: ' + key);\n        this.elements.set(key, factory);\n    }\n\n    deregister(key: string) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        this.elements.delete(key);\n    }\n\n    hasKey(key: string): boolean {\n        return this.elements.has(key);\n    }\n\n    get(key: string, arg: U): T {\n        const existingFactory = this.elements.get(key);\n        if (existingFactory)\n            return existingFactory(arg);\n        else\n            return this.missing(key, arg);\n    }\n\n    protected missing(key: string, arg: U): T | never {\n        throw new Error('Unknown registry key: ' + key);\n    }\n}\n\n@injectable()\nexport class InstanceRegistry<T> {\n    protected elements: Map<string, T> = new Map;\n\n    register(key: string, instance: T) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        if (this.hasKey(key))\n            throw new Error('Key is already registered: ' + key);\n        this.elements.set(key, instance);\n    }\n\n    deregister(key: string) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        this.elements.delete(key);\n    }\n\n    hasKey(key: string): boolean {\n        return this.elements.has(key);\n    }\n\n    get(key: string): T {\n        const existingInstance = this.elements.get(key);\n        if (existingInstance)\n            return existingInstance;\n        else\n            return this.missing(key);\n    }\n\n    protected missing(key: string): T | never {\n        throw new Error('Unknown registry key: ' + key);\n    }\n}\n\n@injectable()\nexport class MultiInstanceRegistry<T> {\n    protected elements: Map<string, T[]> = new Map;\n\n    register(key: string, instance: T) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        const instances = this.elements.get(key);\n        if (instances !== undefined)\n            instances.push(instance);\n        else\n            this.elements.set(key, [instance]);\n    }\n\n    deregisterAll(key: string) {\n        if (key === undefined)\n            throw new Error('Key is undefined');\n        this.elements.delete(key);\n    }\n\n    get(key: string): T[] {\n        const existingInstances = this.elements.get(key);\n        if (existingInstances !== undefined)\n            return existingInstances;\n        else\n            return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { hasOwnProperty } from \"./object\";\n\n/**\n * A Point is composed of the (x,y) coordinates of an object.\n */\nexport interface Point {\n    readonly x: number\n    readonly y: number\n}\n\nexport namespace Point {\n    /**\n     * (x,y) coordinates of the origin.\n     */\n    export const ORIGIN: Point = Object.freeze({\n        x: 0,\n        y: 0\n    });\n\n    /**\n     * Adds two points.\n     * @param {Point} p1 - First point\n     * @param {Point} p2 - Second point\n     * @returns {Point} The sum of the two points\n     */\n    export function add(p1: Point, p2: Point): Point {\n        return {\n            x: p1.x + p2.x,\n            y: p1.y + p2.y\n        };\n    }\n\n    /**\n     * Subtracts two points.\n     * @param {Point} p1 - First point\n     * @param {Point} p2 - Second point\n     * @returns {Point} The difference of the two points\n     */\n    export function subtract(p1: Point, p2: Point): Point {\n        return {\n            x: p1.x - p2.x,\n            y: p1.y - p2.y\n        };\n    }\n\n    /**\n     * Specifies whether a point has exactly the same coordinates as another point.\n     * @param {Point} point1 a point\n     * @param {Point} point2 another point\n     * @returns {boolean} `true` if `point1` has exactly the same `x` and `y` values as `point2`, `false` otherwise.\n     */\n    export function equals(point1: Point, point2: Point): boolean {\n        return point1.x === point2.x && point1.y === point2.y;\n    }\n\n    /**\n     * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.\n     * @param {Point} point - Point to shift\n     * @param {Point} refPoint - Point to shift towards\n     * @param {Point} distance - Distance to shift\n     */\n    export function shiftTowards(point: Point, refPoint: Point, distance: number): Point {\n        const diff = subtract(refPoint, point);\n        const normalized = normalize(diff);\n        const shift = { x: normalized.x * distance, y: normalized.y * distance };\n        return add(point, shift);\n    }\n\n    /**\n     * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.\n     * @param {Point} point - Point representing the vector to be normalized\n     * @returns {Point} The normalized point\n     */\n    export function normalize(point: Point): Point {\n        const mag = magnitude(point);\n        if (mag === 0 || mag === 1) {\n            return ORIGIN;\n        }\n        return {\n            x: point.x / mag,\n            y: point.y / mag\n        };\n    }\n\n    /**\n     * Computes the magnitude of the vector given in `point`.\n     * @param {Point} point - Point representing the vector to compute the magnitude for\n     * @returns {number} The magnitude or also known as length of the `point`\n     */\n    export function magnitude(point: Point): number {\n        return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n    }\n\n    /**\n     * Calculates a linear combination of p0 and p1 using lambda, i.e.\n     *   (1-lambda) * p0 + lambda * p1\n     */\n    export function linear(p0: Point, p1: Point, lambda: number): Point {\n        return {\n            x: (1 - lambda) * p0.x + lambda * p1.x,\n            y: (1 - lambda) * p0.y + lambda * p1.y\n        };\n    }\n\n    /**\n     * Returns the \"straight line\" distance between two points.\n     * @param {Point} a - First point\n     * @param {Point} b - Second point\n     * @returns {number} The Eucledian distance\n     */\n    export function euclideanDistance(a: Point, b: Point): number {\n        const dx = b.x - a.x;\n        const dy = b.y - a.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /**\n     * Returns the distance between two points in a grid, using a\n     * strictly vertical and/or horizontal path (versus straight line).\n     * @param {Point} a - First point\n     * @param {Point} b - Second point\n     * @returns {number} The Manhattan distance\n     */\n    export function manhattanDistance(a: Point, b: Point): number {\n        return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);\n    }\n\n    /**\n     * Returns the maximum of the horizontal and the vertical distance.\n     * @param {Point} a - First point\n     * @param {Point} b - Second point\n     * @returns {number} The maximum distance\n     */\n    export function maxDistance(a: Point, b: Point): number {\n        return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\n    }\n}\n\n/**\n * Computes the angle in radians of the given point to the x-axis of the coordinate system.\n * The result is in the range [-pi, pi].\n * @param {Point} p - A point in the Eucledian plane\n */\nexport function angleOfPoint(p: Point): number {\n    return Math.atan2(p.y, p.x);\n}\n\n/**\n * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).\n * The result is in the range [0, pi]. Returns NaN if the points are equal.\n * @param {Point} a - First point\n * @param {Point} b - Second point\n */\nexport function angleBetweenPoints(a: Point, b: Point): number {\n    const lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));\n    if (isNaN(lengthProduct) || lengthProduct === 0)\n        return NaN;\n    const dotProduct = a.x * b.x + a.y * b.y;\n    return Math.acos(dotProduct / lengthProduct);\n}\n\n/**\n * Computes the center of the line segment spanned by the two given points.\n * @param {Point} s - Start point of the line\n * @param {Point} e - End point of the line\n */\nexport function centerOfLine(s: Point, e: Point): Point {\n    const b: Bounds = {\n        x: s.x > e.x ? e.x : s.x,\n        y: s.y > e.y ? e.y : s.y,\n        width: Math.abs(e.x - s.x),\n        height: Math.abs(e.y - s.y)\n    };\n    return Bounds.center(b);\n}\n\n/**\n * The Dimension of an object is composed of its width and height.\n */\nexport interface Dimension {\n    readonly width: number\n    readonly height: number\n}\n\nexport namespace Dimension {\n    /**\n     * A dimension with both width and height set to a negative value, which is considered as undefined.\n     */\n    export const EMPTY: Dimension = Object.freeze({\n        width: -1,\n        height: -1\n    });\n\n    /**\n     * Checks whether the given dimention is valid, i.e. the width and height are non-zero.\n     * @param {Dimension} b - Dimension object\n     * @returns {boolean} `true` if the dimension is valid\n     */\n    export function isValid(d: Dimension): boolean {\n        return d.width >= 0 && d.height >= 0;\n    }\n}\n\n/**\n * The bounds are the position (x, y) and dimension (width, height) of an object.\n */\nexport interface Bounds extends Point, Dimension {\n}\n\nexport function isBounds(element: unknown): element is Bounds {\n    return hasOwnProperty(element, ['x', 'y', 'width', 'height']);\n}\n\nexport namespace Bounds {\n    export const EMPTY: Bounds = Object.freeze({\n        x: 0,\n        y: 0,\n        width: -1,\n        height: -1\n    });\n\n    /**\n     * Combines the bounds of two objects into one, so that the new bounds\n     * are the minimum bounds that covers both of the original bounds.\n     * @param {Bounds} b0 - First bounds object\n     * @param {Bounds} b1 - Second bounds object\n     * @returns {Bounds} The combined bounds\n     */\n    export function combine(b0: Bounds, b1: Bounds): Bounds {\n        if (!Dimension.isValid(b0))\n            return Dimension.isValid(b1) ? b1 : EMPTY;\n        if (!Dimension.isValid(b1))\n            return b0;\n        const minX = Math.min(b0.x, b1.x);\n        const minY = Math.min(b0.y, b1.y);\n        const maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));\n        const maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));\n        return {\n            x: minX, y: minY, width: maxX - minX, height: maxY - minY\n        };\n    }\n\n    /**\n     * Translates the given bounds.\n     * @param {Bounds} b - Bounds object\n     * @param {Point} p - Vector by which to translate the bounds\n     * @returns {Bounds} The translated bounds\n     */\n    export function translate(b: Bounds, p: Point): Bounds {\n        return {\n            x: b.x + p.x,\n            y: b.y + p.y,\n            width: b.width,\n            height: b.height\n        };\n    }\n\n    /**\n     * Returns the center point of the bounds of an object\n     * @param {Bounds} b - Bounds object\n     * @returns {Point} the center point\n     */\n    export function center(b: Bounds): Point {\n        return {\n            x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),\n            y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)\n        };\n    }\n\n    /**\n    * Checks whether the point p is included in the bounds b.\n    */\n    export function includes(b: Bounds, p: Point): boolean {\n        return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;\n    }\n}\n\n/**\n * Converts from radians to degrees\n * @param {number} a - A value in radians\n * @returns {number} The converted value\n */\nexport function toDegrees(a: number): number {\n    return a * 180 / Math.PI;\n}\n\n/**\n * Converts from degrees to radians\n * @param {number} a - A value in degrees\n * @returns {number} The converted value\n */\nexport function toRadians(a: number): number {\n    return a * Math.PI / 180;\n}\n\n/**\n * Returns whether two numbers are almost equal, within a small margin (0.001)\n * @param {number} a - First number\n * @param {number} b - Second number\n * @returns {boolean} True if the two numbers are almost equal\n */\nexport function almostEquals(a: number, b: number): boolean {\n    return Math.abs(a - b) < 1e-3;\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * An iterable that allows filtering, mapping values etc. with a fluent API.\n * Arrays conform to this interface, so an array can be passed at every place where\n * a FluentIterable is expected.\n */\nexport interface FluentIterable<T> extends Iterable<T> {\n    filter(callback: (element: T) => boolean): FluentIterable<T>\n    map<T2>(callback: (element: T) => T2): FluentIterable<T2>\n    forEach(callback: (element: T, index: number) => void): void\n    indexOf(element: any): number\n}\n\n/**\n * A helper class that allows to easily create fluent iterables.\n */\nexport class FluentIterableImpl<S, T> implements FluentIterable<T> {\n\n    constructor(private readonly startFn: () => S,\n                private readonly nextFn: (state: S) => IteratorResult<T>) {}\n\n    [Symbol.iterator]() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n\n    filter(callback: (element: T) => boolean): FluentIterable<T> {\n        return filterIterable(this, callback);\n    }\n\n    map<T2>(callback: (element: T) => T2): FluentIterable<T2> {\n        return mapIterable(this, callback);\n    }\n\n    forEach(callback: (element: T, index: number) => void): void {\n        const iterator = this[Symbol.iterator]();\n        let index = 0;\n        let result: IteratorResult<T>;\n        do {\n            result = iterator.next();\n            if (result.value !== undefined)\n                callback(result.value, index);\n            index++;\n        } while (!result.done);\n    }\n\n    indexOf(element: any): number {\n        const iterator = this[Symbol.iterator]();\n        let index = 0;\n        let result: IteratorResult<T>;\n        do {\n            result = iterator.next();\n            if (result.value === element)\n                return index;\n            index++;\n        } while (!result.done);\n        return -1;\n    }\n}\n\n/**\n * Converts a FluentIterable into an array. If the input is an array, it is returned unchanged.\n */\nexport function toArray<T>(input: FluentIterable<T>): T[] {\n    if (input.constructor === Array) {\n        return input as T[];\n    }\n    const result: T[] = [];\n    input.forEach(element => result.push(element));\n    return result;\n}\n\nexport const DONE_RESULT: IteratorResult<any> = Object.freeze({ done: true, value: undefined });\n\n/**\n * Create a fluent iterable that filters the content of the given iterable or array.\n */\nexport function filterIterable<T>(input: Iterable<T> | ArrayLike<T>, callback: (element: T) => boolean): FluentIterable<T> {\n    return new FluentIterableImpl(\n        () => createIterator(input),\n        (iterator) => {\n            let result: IteratorResult<T>;\n            do {\n                result = iterator.next();\n            } while (!result.done && !callback(result.value));\n            return result;\n        }\n    );\n}\n\n/**\n * Create a fluent iterable that maps the content of the given iterable or array.\n */\nexport function mapIterable<T1, T2>(input: Iterable<T1> | ArrayLike<T1>, callback: (element: T1) => T2): FluentIterable<T2> {\n    return new FluentIterableImpl(\n        () => createIterator(input),\n        (iterator) => {\n            const { done, value } = iterator.next();\n            if (done)\n                return DONE_RESULT;\n            else\n                return { done: false, value: callback(value) };\n        }\n    );\n}\n\n/**\n * Create an iterator for the given iterable or array.\n */\nfunction createIterator<T>(collection: Iterable<T> | ArrayLike<T>): Iterator<T> {\n    const method = (collection as Iterable<T>)[Symbol.iterator];\n    if (typeof method === 'function') {\n        return method.call(collection);\n    }\n    const length = (collection as ArrayLike<T>).length;\n    if (typeof length === 'number' && length >= 0) {\n        return new ArrayIterator(collection as ArrayLike<T>);\n    }\n    return { next: () => DONE_RESULT };\n}\n\n/**\n * Iterator implementation for arrays.\n */\nclass ArrayIterator<T> implements IterableIterator<T> {\n    constructor(private readonly array: ArrayLike<T>) {}\n\n    private index = 0;\n\n    next(): IteratorResult<T> {\n        if (this.index < this.array.length)\n            return { done: false, value: this.array[this.index++] };\n        else\n            return DONE_RESULT;\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement as ProtocolSModelElement } from 'sprotty-protocol';\nimport { Bounds, isBounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { FluentIterable, mapIterable } from '../../utils/iterable';\n\n/**\n * Base class for all elements of the internal diagram model.\n * Each model element must have a unique ID and a type that is used to look up its view.\n */\nexport class SModelElementImpl {\n    type: string;\n    id: string;\n    features?: FeatureSet;\n    cssClasses?: string[];\n\n    get root(): SModelRootImpl {\n        let current: SModelElementImpl | undefined = this;\n        while (current) {\n            if (current instanceof SModelRootImpl)\n                return current;\n            else if (current instanceof SChildElementImpl)\n                current = current.parent;\n            else\n                current = undefined;\n        }\n        throw new Error('Element has no root');\n    }\n\n    get index(): ModelIndexImpl {\n        return this.root.index;\n    }\n\n    /**\n     * A feature is a symbol identifying some functionality that can be enabled or disabled for\n     * a model element. The set of supported features is determined by the `features` property.\n     */\n    hasFeature(feature: symbol): boolean {\n        return this.features !== undefined && this.features.has(feature);\n    }\n}\n\n\nexport interface FeatureSet {\n    has(feature: symbol): boolean\n}\n\nexport function isParent(element: ProtocolSModelElement | SModelElementImpl):\n        element is ProtocolSModelElement & { children: ProtocolSModelElement[] } {\n    const children = (element as any).children;\n    return children !== undefined && children.constructor === Array;\n}\n\n/**\n * A parent element may contain child elements, thus the diagram model forms a tree.\n */\nexport class SParentElementImpl extends SModelElementImpl {\n    readonly children: ReadonlyArray<SChildElementImpl> = [];\n\n    add(child: SChildElementImpl, index?: number) {\n        const children = this.children as SChildElementImpl[];\n        if (index === undefined) {\n            children.push(child);\n        } else {\n            if (index < 0 || index > this.children.length) {\n                throw new Error(`Child index ${index} out of bounds (0..${children.length})`);\n            }\n            children.splice(index, 0, child);\n        }\n        (child as {parent: SParentElementImpl}).parent = this;\n        this.index.add(child);\n    }\n\n    remove(child: SChildElementImpl) {\n        const children = this.children as SChildElementImpl[];\n        const i = children.indexOf(child);\n        if (i < 0) {\n            throw new Error(`No such child ${child.id}`);\n        }\n        children.splice(i, 1);\n        this.index.remove(child);\n    }\n\n    removeAll(filter?: (e: SChildElementImpl) => boolean) {\n        const children = this.children as SChildElementImpl[];\n        if (filter !== undefined) {\n            for (let i = children.length - 1; i >= 0; i--) {\n                if (filter(children[i])) {\n                    const child = children.splice(i, 1)[0];\n                    this.index.remove(child);\n                }\n            }\n        } else {\n            children.forEach(child => {\n                this.index.remove(child);\n            });\n            children.splice(0, children.length);\n        }\n    }\n\n    move(child: SChildElementImpl, newIndex: number) {\n        const children = this.children as SChildElementImpl[];\n        const i = children.indexOf(child);\n        if (i === -1) {\n            throw new Error(`No such child ${child.id}`);\n        } else {\n            if (newIndex < 0 || newIndex > children.length - 1) {\n                throw new Error(`Child index ${newIndex} out of bounds (0..${children.length})`);\n            }\n            children.splice(i, 1);\n            children.splice(newIndex, 0, child);\n        }\n    }\n\n    /**\n     * Transform the given bounds from the local coordinate system of this element to the coordinate\n     * system of its parent. This function should consider any transformation that is applied to the\n     * view of this element and its contents.\n     * The base implementation assumes that this element does not define a local coordinate system,\n     * so it leaves the bounds unchanged.\n     */\n    localToParent(point: Point | Bounds): Bounds {\n        return isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };\n    }\n\n    /**\n     * Transform the given bounds from the coordinate system of this element's parent to its local\n     * coordinate system. This function should consider any transformation that is applied to the\n     * view of this element and its contents.\n     * The base implementation assumes that this element does not define a local coordinate system,\n     * so it leaves the bounds unchanged.\n     */\n    parentToLocal(point: Point | Bounds): Bounds {\n        return isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };\n    }\n}\n\n/**\n * A child element is contained in a parent element. All elements except the model root are child\n * elements. In order to keep the model class hierarchy simple, every child element is also a\n * parent element, although for many elements the array of children is empty (i.e. they are\n * leafs in the model element tree).\n */\nexport class SChildElementImpl extends SParentElementImpl {\n    readonly parent: SParentElementImpl;\n}\n\n\n/**\n * Base class for the root element of the diagram model tree.\n */\nexport class SModelRootImpl extends SParentElementImpl {\n    revision?: number;\n\n    canvasBounds: Bounds = Bounds.EMPTY;\n\n    constructor(index = new ModelIndexImpl()) {\n        super();\n          // Override the index property from SModelElement, which has a getter, with a data property\n          Object.defineProperty(this, 'index', {\n            value: index,\n            writable: false\n        });\n    }\n}\n\nconst ID_CHARS = '0123456789abcdefghijklmnopqrstuvwxyz';\nexport function createRandomId(length: number = 8): string {\n    let id = '';\n    for (let i = 0; i < length; i++) {\n        id += ID_CHARS.charAt(Math.floor(Math.random() * ID_CHARS.length));\n    }\n    return id;\n}\n\n\n/**\n * Used to speed up model element lookup by id.\n */\n export interface IModelIndex {\n    add(element: ProtocolSModelElement): void\n    remove(element: ProtocolSModelElement): void\n    contains(element: ProtocolSModelElement): boolean\n    getById(id: string): ProtocolSModelElement | undefined\n}\n\n/**\n * This index implementation is for the _internal model_ that is used for rendering.\n */\nexport class ModelIndexImpl implements IModelIndex {\n\n    private readonly id2element: Map<string, SModelElementImpl> = new Map();\n\n    add(element: SModelElementImpl): void {\n        if (!element.id) {\n            do {\n                element.id = createRandomId();\n            } while (this.contains(element));\n        } else if (this.contains(element)) {\n            throw new Error('Duplicate ID in model: ' + element.id);\n        }\n        this.id2element.set(element.id, element);\n        if (element instanceof SParentElementImpl) {\n            for (const child of element.children) {\n                this.add(child as any);\n            }\n        }\n    }\n\n    remove(element: SModelElementImpl): void {\n        this.id2element.delete(element.id);\n        if (element instanceof SParentElementImpl) {\n            for (const child of element.children) {\n                this.remove(child as any);\n            }\n        }\n    }\n\n    contains(element: SModelElementImpl): boolean {\n        return this.id2element.has(element.id);\n    }\n\n    getById(id: string): SModelElementImpl | undefined {\n        return this.id2element.get(id);\n    }\n\n    getAttachedElements(element: SModelElementImpl): FluentIterable<SModelElementImpl> {\n        return [];\n    }\n\n    all(): FluentIterable<SModelElementImpl> {\n        return mapIterable(this.id2element, ([key, value]: [string, SModelElementImpl]) => value);\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * The schema of an SModelElement describes its serializable form. The actual model is created from\n * its schema with an IModelFactory.\n * Each model element must have a unique ID and a type that is used to look up its view.\n *\n * @deprecated Use `SModelElement` from `sprotty-protocol` instead.\n */\nexport interface SModelElementSchema {\n    type: string\n    id: string\n    children?: SModelElementSchema[]\n    cssClasses?: string[]\n}\n\n/**\n * Serializable schema for the root element of the model tree.\n *\n * @deprecated Use `SModelRoot` from `sprotty-protocol` instead.\n */\nexport interface SModelRootSchema extends SModelElementSchema {\n    canvasBounds?: Bounds\n    revision?: number\n}\n\n/** @deprecated Use `SParentElementImpl` instead. */\nexport const SParentElement = SParentElementImpl;\n\n/** @deprecated Use `SChildElementImpl` instead. */\nexport const SChildElement = SChildElementImpl;\n\n/** @deprecated Use `SModelElementImpl` instead. */\nexport const SModelElement = SModelElementImpl;\n\n/** @deprecated Use `SModelRootImpl` instead. */\nexport const SModelRoot = SModelRootImpl;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional, inject } from 'inversify';\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { TYPES } from \"../types\";\nimport { FactoryRegistry } from '../../utils/registry';\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl, SParentElementImpl, isParent, FeatureSet } from './smodel';\n\n/**\n * Model element classes registered here are considered automatically when constructring a model from its schema.\n */\n@injectable()\nexport class SModelRegistry extends FactoryRegistry<SModelElementImpl, void> {\n    constructor(@multiInject(TYPES.SModelElementRegistration) @optional() registrations: SModelElementRegistration[]) {\n        super();\n\n        registrations.forEach(registration => {\n            let defaultFeatures = this.getDefaultFeatures(registration.constr);\n            if (!defaultFeatures && registration.features && registration.features.enable)\n                defaultFeatures = [];\n            if (defaultFeatures) {\n                const featureSet = createFeatureSet(defaultFeatures, registration.features);\n                this.register(registration.type, () => {\n                    const element = new registration.constr();\n                    element.features = featureSet;\n                    return element;\n                });\n            } else {\n                this.register(registration.type, () => new registration.constr());\n            }\n        });\n    }\n\n    protected getDefaultFeatures(constr: SModelElementConstructor): ReadonlyArray<symbol> | undefined {\n        let obj = constr;\n        do {\n            const defaultFeatures = obj.DEFAULT_FEATURES;\n            if (defaultFeatures)\n                return defaultFeatures;\n            obj = Object.getPrototypeOf(obj);\n        } while (obj);\n        return undefined;\n    }\n}\n\n/**\n * A model factory transforms a serializable model schema into the model representation that is used\n * internally by sprotty.\n */\nexport interface IModelFactory {\n    createElement(schema: SModelElementSchema | SModelElementImpl, parent?: SParentElementImpl): SChildElementImpl\n\n    createRoot(schema: SModelRootSchema | SModelRootImpl): SModelRootImpl\n\n    createSchema(element: SModelElementImpl): SModelElementSchema\n}\n\n/**\n * The default model factory creates SModelRoot for the root element and SChildElement for all other\n * model elements.\n */\n@injectable()\nexport class SModelFactory implements IModelFactory {\n\n    @inject(TYPES.SModelRegistry) protected readonly registry: SModelRegistry;\n\n    createElement(schema: SModelElementSchema | SModelElementImpl, parent?: SParentElementImpl): SChildElementImpl {\n        let child: SChildElementImpl;\n        if (this.registry.hasKey(schema.type)) {\n            const regElement = this.registry.get(schema.type, undefined);\n            if (!(regElement instanceof SChildElementImpl))\n                throw new Error(`Element with type ${schema.type} was expected to be an SChildElement.`);\n            child = regElement;\n        } else {\n            child = new SChildElementImpl();\n        }\n        return this.initializeChild(child, schema, parent);\n    }\n\n    createRoot(schema: SModelRootSchema | SModelRootImpl): SModelRootImpl {\n        let root: SModelRootImpl;\n        if (this.registry.hasKey(schema.type)) {\n            const regElement = this.registry.get(schema.type, undefined);\n            if (!(regElement instanceof SModelRootImpl))\n                throw new Error(`Element with type ${schema.type} was expected to be an SModelRoot.`);\n            root = regElement;\n        } else {\n            root = new SModelRootImpl();\n        }\n        return this.initializeRoot(root, schema);\n    }\n\n    createSchema(element: SModelElementImpl): SModelElementSchema {\n        const schema = {};\n        for (const key in element) {\n             if (!this.isReserved(element, key)) {\n                const value: any = (element as any)[key];\n                if (typeof value !== 'function')\n                    (schema as any)[key] = value;\n            }\n        }\n        if (element instanceof SParentElementImpl)\n            (schema as any)['children'] = element.children.map(child => this.createSchema(child));\n        return schema as SModelElementSchema;\n    }\n\n    protected initializeElement(element: SModelElementImpl, schema: SModelElementSchema | SModelElementImpl): SModelElementImpl {\n        for (const key in schema) {\n            if (!this.isReserved(element, key)) {\n                const value: any = (schema as any)[key];\n                if (typeof value !== 'function')\n                    (element as any)[key] = value;\n            }\n        }\n        return element;\n    }\n\n    protected isReserved(element: SModelElementImpl, propertyName: string) {\n        if (['children', 'parent', 'index'].indexOf(propertyName) >= 0)\n            return true;\n        let obj = element;\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(obj, propertyName);\n            if (descriptor !== undefined)\n                return descriptor.get !== undefined;\n            obj = Object.getPrototypeOf(obj);\n        } while (obj);\n        return false;\n    }\n\n    protected initializeParent(parent: SParentElementImpl, schema: SModelElementSchema | SParentElementImpl): SParentElementImpl {\n        this.initializeElement(parent, schema);\n        if (isParent(schema)) {\n            (parent as any).children = schema.children.map(childSchema => this.createElement(childSchema, parent));\n        }\n        return parent;\n    }\n\n    protected initializeChild(child: SChildElementImpl, schema: SModelElementSchema, parent?: SParentElementImpl): SChildElementImpl {\n        this.initializeParent(child, schema);\n        if (parent !== undefined) {\n            (child as any).parent = parent;\n        }\n        return child;\n    }\n\n    protected initializeRoot(root: SModelRootImpl, schema: SModelRootSchema | SModelRootImpl): SModelRootImpl {\n        this.initializeParent(root, schema);\n        root.index.add(root);\n        return root;\n    }\n}\n\nexport const EMPTY_ROOT: Readonly<SModelRootSchema> = Object.freeze({\n    type: 'NONE',\n    id: 'EMPTY'\n});\n\n/**\n * Used to bind a model element type to a class constructor in the SModelRegistry.\n */\nexport interface SModelElementRegistration {\n    type: string\n    constr: SModelElementConstructor\n    features?: CustomFeatures\n}\n\nexport interface SModelElementConstructor {\n    DEFAULT_FEATURES?: ReadonlyArray<symbol>\n    new (): SModelElementImpl\n}\n\nexport interface CustomFeatures {\n    enable?: symbol[]\n    disable?: symbol[]\n}\n\nexport function createFeatureSet(defaults: ReadonlyArray<symbol>, custom?: CustomFeatures): FeatureSet {\n    const featureSet = new Set<symbol>(defaults);\n    if (custom && custom.enable) {\n        for (const f of custom.enable) {\n            featureSet.add(f);\n        }\n    }\n    if (custom && custom.disable) {\n        for (const f of custom.disable) {\n            featureSet.delete(f);\n        }\n    }\n    return featureSet;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport class AnimationFrameSyncer {\n\n    tasks: ((x?: number) => void) [] = [];\n    endTasks: ((x?: number) => void) [] = [];\n    triggered: boolean = false;\n\n    isAvailable(): boolean {\n        return typeof requestAnimationFrame === \"function\";\n    }\n\n    onNextFrame(task: (x?: number) => void) {\n        this.tasks.push(task);\n        this.trigger();\n    }\n\n    onEndOfNextFrame(task: (x?: number) => void) {\n        this.endTasks.push(task);\n        this.trigger();\n    }\n\n    protected trigger() {\n        if (!this.triggered) {\n            this.triggered = true;\n            if (this.isAvailable())\n                requestAnimationFrame((time: number) => this.run(time));\n            else\n                setTimeout((time: number) => this.run(time));\n        }\n    }\n\n    protected run(time: number) {\n        const tasks = this.tasks;\n        const endTasks = this.endTasks;\n        this.triggered = false;\n        this.tasks = [];\n        this.endTasks = [];\n        tasks.forEach(task => task.call(undefined, time));\n        endTasks.forEach(task => task.call(undefined, time));\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport {\n    Action, isAction, isRequestAction, isResponseAction, RedoAction, RejectAction, RequestAction,\n    ResponseAction, SetModelAction, UndoAction\n} from 'sprotty-protocol/lib/actions';\nimport { Deferred } from 'sprotty-protocol/lib/utils/async';\nimport { TYPES } from '../types';\nimport { ILogger } from '../../utils/logging';\nimport { EMPTY_ROOT } from '../model/smodel-factory';\nimport { ICommandStack } from '../commands/command-stack';\nimport { AnimationFrameSyncer } from '../animations/animation-frame-syncer';\nimport { ActionHandlerRegistry } from './action-handler';\nimport { IDiagramLocker } from './diagram-locker';\n\nexport interface IActionDispatcher {\n    dispatch(action: Action): Promise<void>\n    dispatchAll(actions: Action[]): Promise<void>\n    request<Res extends ResponseAction>(action: RequestAction<Res>): Promise<Res>\n}\n\n/**\n * Collects actions, converts them to commands and dispatches them.\n * Also acts as the proxy to model sources such as diagram servers.\n */\n@injectable()\nexport class ActionDispatcher implements IActionDispatcher {\n\n    @inject(TYPES.ActionHandlerRegistryProvider) protected actionHandlerRegistryProvider: () => Promise<ActionHandlerRegistry>;\n    @inject(TYPES.ICommandStack) protected commandStack: ICommandStack;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\n    @inject(TYPES.IDiagramLocker) protected diagramLocker: IDiagramLocker;\n\n    protected actionHandlerRegistry: ActionHandlerRegistry;\n\n    protected initialized: Promise<void> | undefined;\n    protected blockUntil?: (action: Action) => boolean;\n    protected postponedActions: PostponedAction[] = [];\n    protected readonly requests: Map<string, Deferred<ResponseAction>> = new Map();\n\n    initialize(): Promise<void> {\n        if (!this.initialized) {\n            this.initialized = this.actionHandlerRegistryProvider().then(registry => {\n                this.actionHandlerRegistry = registry;\n                this.handleAction(SetModelAction.create(EMPTY_ROOT)).catch(() => { /* Logged in handleAction method */ });\n            });\n        }\n        return this.initialized;\n    }\n\n    /**\n     * Dispatch an action by querying all handlers that are registered for its kind.\n     * The returned promise is resolved when all handler results (commands or actions)\n     * have been processed.\n     */\n    dispatch(action: Action): Promise<void> {\n        return this.initialize().then(() => {\n            if (this.blockUntil !== undefined) {\n                return this.handleBlocked(action, this.blockUntil);\n            } else if (this.diagramLocker.isAllowed(action)) {\n                return this.handleAction(action);\n            }\n            return undefined;\n        });\n    }\n\n    /**\n     * Calls `dispatch` on every action in the given array. The returned promise\n     * is resolved when the promises of all `dispatch` calls have been resolved.\n     */\n    dispatchAll(actions: Action[]): Promise<void> {\n        return Promise.all(actions.map(action => this.dispatch(action))) as Promise<any>;\n    }\n\n    /**\n     * Dispatch a request. The returned promise is resolved when a response with matching\n     * identifier is dispatched. That response is _not_ passed to the registered action\n     * handlers. Instead, it is the responsibility of the caller of this method to handle\n     * the response properly. For example, it can be sent to the registered handlers by\n     * passing it again to the `dispatch` method.\n     */\n    request<Res extends ResponseAction>(action: RequestAction<Res>): Promise<Res> {\n        if (!action.requestId) {\n            return Promise.reject(new Error('Request without requestId'));\n        }\n        const deferred = new Deferred<Res>();\n        this.requests.set(action.requestId, deferred);\n        this.dispatch(action).catch(() => { /* Logged in handleAction method */ });\n        return deferred.promise;\n    }\n\n    protected handleAction(action: Action): Promise<void> {\n        if (action.kind === UndoAction.KIND) {\n            return this.commandStack.undo().then(() => {});\n        }\n        if (action.kind === RedoAction.KIND) {\n            return this.commandStack.redo().then(() => {});\n        }\n        if (isResponseAction(action)) {\n            const deferred = this.requests.get(action.responseId);\n            if (deferred !== undefined) {\n                this.requests.delete(action.responseId);\n                if (action.kind === RejectAction.KIND) {\n                    const rejectAction = action as RejectAction;\n                    deferred.reject(new Error(rejectAction.message));\n                    this.logger.warn(this, `Request with id ${action.responseId} failed.`,\n                            rejectAction.message, rejectAction.detail);\n                } else {\n                    deferred.resolve(action);\n                }\n                return Promise.resolve();\n            }\n            this.logger.log(this, 'No matching request for response', action);\n        }\n\n        const handlers = this.actionHandlerRegistry.get(action.kind);\n        if (handlers.length === 0) {\n            this.logger.warn(this, 'Missing handler for action', action);\n            const error = new Error(`Missing handler for action '${action.kind}'`);\n            if (isRequestAction(action)) {\n                const deferred = this.requests.get(action.requestId);\n                if (deferred !== undefined) {\n                    this.requests.delete(action.requestId);\n                    deferred.reject(error);\n                }\n            }\n            return Promise.reject(error);\n        }\n        this.logger.log(this, 'Handle', action);\n        const promises: Promise<any>[] = [];\n        for (const handler of handlers) {\n            const result = handler.handle(action);\n            if (isAction(result)) {\n                promises.push(this.dispatch(result));\n            } else if (result !== undefined) {\n                promises.push(this.commandStack.execute(result));\n                this.blockUntil = result.blockUntil;\n            }\n        }\n        return Promise.all(promises) as Promise<any>;\n    }\n\n    protected handleBlocked(action: Action, predicate: (action: Action) => boolean): Promise<void> {\n        if (predicate(action)) {\n            this.blockUntil = undefined;\n            const result = this.handleAction(action);\n            const actions = this.postponedActions;\n            this.postponedActions = [];\n            for (const a of actions) {\n                this.dispatch(a.action).then(a.resolve, a.reject);\n            }\n            return result;\n        } else {\n            this.logger.log(this, 'Action is postponed due to block condition', action);\n            return new Promise((resolve, reject) => {\n                this.postponedActions.push({ action, resolve, reject });\n            });\n        }\n    }\n}\n\nexport interface PostponedAction {\n    action: Action\n    resolve: () => void\n    reject: (reason: any) => void\n}\n\nexport type IActionDispatcherProvider = () => Promise<IActionDispatcher>;\n", "/********************************************************************************\n * Copyright (c) 2019-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport function isInjectable(constr: new (...args: unknown[]) => unknown): boolean {\n    return Reflect.getMetadata('inversify:paramtypes', constr) !== undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional, interfaces } from \"inversify\";\nimport { TYPES } from \"../types\";\nimport { MultiInstanceRegistry } from \"../../utils/registry\";\nimport { isInjectable } from \"../../utils/inversify\";\nimport { ICommand } from \"../commands/command\";\nimport { Action } from \"sprotty-protocol\";\n\n/**\n * An action handler accepts an action and reacts to it by returning either a command to be\n * executed, or another action to be dispatched.\n */\nexport interface IActionHandler {\n    handle(action: Action): ICommand | Action | void\n}\n\n/**\n * Used to bind an action kind to an action handler factory in the ActionHandlerRegistry.\n */\nexport interface ActionHandlerRegistration {\n    actionKind: string\n    factory: () => IActionHandler\n}\n\n/**\n * Initializes and registers an action handler for multiple action kinds. In most cases\n * `ActionHandlerRegistration` should be used instead.\n */\nexport interface IActionHandlerInitializer {\n    initialize(registry: ActionHandlerRegistry): void\n}\n\n/**\n * The action handler registry maps actions to their handlers using the Action.kind property.\n */\n@injectable()\nexport class ActionHandlerRegistry extends MultiInstanceRegistry<IActionHandler> {\n\n    constructor(@multiInject(TYPES.ActionHandlerRegistration) @optional() registrations: ActionHandlerRegistration[],\n                @multiInject(TYPES.IActionHandlerInitializer) @optional() initializers: IActionHandlerInitializer[]) {\n        super();\n        registrations.forEach(registration =>\n            this.register(registration.actionKind, registration.factory())\n        );\n        initializers.forEach(initializer =>\n            this.initializeActionHandler(initializer)\n        );\n    }\n\n    initializeActionHandler(initializer: IActionHandlerInitializer): void {\n        initializer.initialize(this);\n    }\n}\n\n/**\n * Utility function to register an action handler for an action kind.\n */\nexport function configureActionHandler(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        kind: string, constr: interfaces.ServiceIdentifier<IActionHandler>): void {\n    if (typeof constr === 'function') {\n        if (!isInjectable(constr)) {\n            throw new Error(`Action handlers should be @injectable: ${constr.name}`);\n        }\n        if (!context.isBound(constr)) {\n            context.bind(constr).toSelf();\n        }\n    }\n    context.bind(TYPES.ActionHandlerRegistration).toDynamicValue(ctx => ({\n        actionKind: kind,\n        factory: () => ctx.container.get(constr)\n    }));\n}\n\n/**\n * Utility function to register an action handler for an action kind.\n */\nexport function onAction(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        kind: string, handle: (action: Action) => ICommand | Action | void): void {\n    context.bind(TYPES.ActionHandlerRegistration).toConstantValue({\n        actionKind: kind,\n        factory: () => ({ handle })\n    });\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\n\n/**\n * Allows to lock the diagram by preventing certain actions from being\n * dispatched.\n *\n * This could for example be used to prevent the diagram from being modified\n * when the underlying model is broken or the server is unavailable.\n */\nexport interface IDiagramLocker {\n    isAllowed(action: Action): boolean\n}\n\n@injectable()\nexport class DefaultDiagramLocker implements IDiagramLocker {\n    isAllowed(action: Action): boolean {\n        return true;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * Slows down animations towards the begin and the end.\n *\n * @param x the value between 0 (start of animation) and 1 (end of\n *     animation) linearly interpolated in time.\n * @returns {number} the eased value between 0 and 1\n */\nexport function easeInOut(x: number): number {\n    if (x < 0.5)\n        return x * x * 2;\n    else\n        return 1 - (1 - x) * (1 - x) * 2;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { CommandExecutionContext } from \"../commands/command\";\nimport { SModelRootImpl } from \"../model/smodel\";\nimport { easeInOut } from \"./easing\";\n\n/**\n * An animation uses the rendering loop of the browser to smoothly\n * calculate a transition between two states of a model element.\n */\nexport abstract class Animation {\n\n    constructor(protected context: CommandExecutionContext, protected ease: (x: number) => number = easeInOut) {\n    }\n\n    start(): Promise<SModelRootImpl> {\n        return new Promise<SModelRootImpl>(\n            (resolve: (model: SModelRootImpl) => void, reject: (model: SModelRootImpl) => void) => {\n                let start: number | undefined = undefined;\n                let frames = 0;\n                const lambda = (time: number) => {\n                    frames++;\n                    let dtime: number;\n                    if (start === undefined) {\n                        start = time;\n                        dtime = 0;\n                    } else {\n                        dtime = time - start;\n                    }\n                    const t = Math.min(1, dtime / this.context.duration);\n                    const current = this.tween(this.ease(t), this.context);\n                    this.context.modelChanged.update(current);\n                    if (t === 1) {\n                        this.context.logger.log(this, (frames * 1000 / this.context.duration) + ' fps');\n                        resolve(current);\n                    } else {\n                        this.context.syncer.onNextFrame(lambda);\n                    }\n                };\n                if (this.context.syncer.isAvailable()) {\n                    this.context.syncer.onNextFrame(lambda);\n                } else {\n                    const finalModel = this.tween(1, this.context);\n                    resolve(finalModel);\n                }\n            });\n    }\n\n    /**\n     * This method called by the animation at each rendering pass until\n     * the duration is reached. Implement it to interpolate the state.\n     *\n     * @param t varies between 0 (start of animation) and 1 (end of animation)\n     * @param context\n     */\n    abstract tween(t: number, context: CommandExecutionContext): SModelRootImpl;\n}\n\nexport class CompoundAnimation extends Animation {\n\n    constructor(protected model: SModelRootImpl,\n                protected override context: CommandExecutionContext,\n                public components: Animation[] = [],\n                protected override ease: (x: number) => number = easeInOut) {\n        super(context, ease);\n    }\n\n    include(animation: Animation): this {\n        this.components.push(animation);\n        return this;\n    }\n\n    tween(t: number, context: CommandExecutionContext): SModelRootImpl {\n        for (const a of this.components) {\n            a.tween(t, context);\n        }\n        return this.model;\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { ILogger } from \"../../utils/logging\";\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\nimport { SModelRootImpl } from \"../model/smodel\";\nimport { IModelFactory } from \"../model/smodel-factory\";\nimport { IViewer } from \"../views/viewer\";\n\n/**\n * A command holds the behaviour of an action.\n * It is executed on a command stack and can be undone / redone.\n *\n * A command should store all information it needs to undo itself at a\n * later stage. It typically resolves the model elements it is going\n * to manipulate as a first step in the execute method.\n *\n * Each command should define a static string property KIND that\n * matches the associated action. This is used as a key in the\n * ActionHandlerRegistry.\n *\n * Clients should not implement the ICommand interface directly but\n * rather inherit from one of its abstract implementators.\n */\nexport interface ICommand {\n    /**\n     * If this property is present, all following actions are blocked\n     * until the function returns `true`.\n     */\n    readonly blockUntil?: (action: Action) => boolean;\n\n    execute(context: CommandExecutionContext): CommandReturn\n\n    undo(context: CommandExecutionContext): CommandReturn\n\n    redo(context: CommandExecutionContext): CommandReturn\n}\n\n/**\n * Commands return the changed model or a Promise for it. Promises\n * serve animating commands to render some intermediate states before\n * finishing. The CommandStack is in charge of chaining these promises,\n * such that they run sequentially only one at a time. Due to that\n * chaining, it is essential that a command does not make any assumption\n * on the state of the model before execute() is called.\n */\nexport type CommandReturn = SModelRootImpl | Promise<SModelRootImpl> | CommandResult;\n\n/**\n * The `CommandResult` allows to specify whether the model has changed\n * and the original action that caused the command to be executed. In case such\n * an action is given, it is passed to the viewer in order to link any\n * subsequent response action to the original request.\n */\nexport type CommandResult = { model: SModelRootImpl, modelChanged: boolean, cause?: Action };\n\n/**\n * Base class for all commands.\n *\n * Command instances are created via dependency injection and should take\n * the respective action as an injected constructor parameter. They must\n * also define a static <code>KIND</code> which is used to map an\n * <code>Action#kind</code>.\n *\n * <pre>\n * export class MyCommand extends Command {\n *   static KIND = 'MyCommand'\n *   constructor(@inject(TYPES.Action) action: MyAction) {\n *   ...\n * }\n * @inject(TYPES.Action)\n * </pre>\n */\n@injectable()\nexport abstract class Command implements ICommand {\n\n    abstract execute(context: CommandExecutionContext): CommandReturn;\n\n    abstract undo(context: CommandExecutionContext): CommandReturn;\n\n    abstract redo(context: CommandExecutionContext): CommandReturn;\n}\n\n/**\n * A mergeable command can accumulate subsequent commands of the same kind.\n *\n * For example, multiple subsequent move commands can be merged to yield a\n * single command, such that undo will roll them back altogether. Otherwise\n * the user would have to push CTRL-Z for each mouse move element that\n * resuted in a command.\n */\n@injectable()\nexport abstract class MergeableCommand extends Command {\n    /**\n     * Tries to merge the given command with this.\n     *\n     * @param command\n     * @param context\n     */\n    merge(command: ICommand, context: CommandExecutionContext): boolean {\n        return false;\n    }\n}\n\n/**\n * A hidden command is used to trigger the rendering of a model on a\n * hidden canvas.\n *\n * Some graphical elements are styled using CSS, others have bounds that\n * require to layout their children before being computed. In such cases\n * we cannot tell about the size of elements without acutally rendering\n * the DOM. We render them to an invisible canvas. This can be achieved\n * using hidden commands.\n *\n * Hidden commands do not change the model directly, and are as such\n * neither undoable nor redoable. The command stack does not push them on\n * any stack and forwards the resulting model to the invisible viewer.\n */\n@injectable()\nexport abstract class HiddenCommand extends Command {\n    abstract override execute(context: CommandExecutionContext): SModelRootImpl | CommandResult;\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        context.logger.error(this, 'Cannot undo a hidden command');\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        context.logger.error(this, 'Cannot redo a hidden command');\n        return context.root;\n    }\n}\n\n@injectable()\nexport abstract class PopupCommand extends Command {\n}\n\n/**\n * A system command is triggered by the system, e.g. in order to update bounds\n * in the model with data fetched from the DOM.\n *\n * As it is automatically triggered it should not count as a single command in\n * undo/redo operations. Into the bargain, such an automatic command could occur\n * after an undo and as such make the next redo command invalid because it is\n * based on a model state that has changed. The command stack handles system\n * commands in a special way to overcome these issues.\n */\n@injectable()\nexport abstract class SystemCommand extends Command {\n}\n\n/**\n * A reset command deletes all undo/redo stacks and cannot be undone.\n *\n * It marks a point of no return.\n */\n@injectable()\nexport abstract class ResetCommand extends Command {\n}\n\n/**\n * The data that is passed into the execution methods of a command to give it\n * access to the context.\n */\nexport interface CommandExecutionContext {\n    /** The current Sprotty model (i.e. the main model that is visible to the user) */\n    root: SModelRootImpl\n\n    /** Used to turn sprotty schema elements (e.g. from the action) into model elements */\n    modelFactory: IModelFactory\n\n    /** Allows to give some feedback to the console */\n    logger: ILogger\n\n    /** Used for anmiations to trigger the rendering of a new frame */\n    modelChanged: IViewer\n\n    /** Duration of an anmiation */\n    duration: number\n\n    /** Provides the ticks for animations */\n    syncer: AnimationFrameSyncer\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional, interfaces, Container } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { isInjectable } from \"../../utils/inversify\";\nimport { ActionHandlerRegistry, IActionHandler, IActionHandlerInitializer } from \"../actions/action-handler\";\nimport { ICommand } from \"./command\";\nimport { TYPES } from \"../types\";\n\nexport class CommandActionHandler implements IActionHandler {\n    constructor(private commandRegistration: CommandRegistration) {\n    }\n\n    handle(action: Action): ICommand {\n        return this.commandRegistration.factory(action);\n    }\n}\n\n@injectable()\nexport class CommandActionHandlerInitializer implements IActionHandlerInitializer {\n\n    constructor(@multiInject(TYPES.CommandRegistration) @optional() protected registrations: CommandRegistration[]) {\n    }\n\n    initialize(registry: ActionHandlerRegistry): void {\n        this.registrations.forEach(registration =>\n            registry.register(registration.kind, new CommandActionHandler(registration))\n        );\n    }\n}\n\nexport interface CommandRegistration {\n    kind: string\n    factory: (a: Action) => ICommand\n}\n\nexport interface ICommandConstructor<T extends Action> {\n    KIND: string\n    new (a: T, ...args: any[]): ICommand\n}\n\n/**\n * Use this method in your DI configuration to register a new command to the diagram.\n */\nexport function configureCommand<T extends Action>(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        constr: ICommandConstructor<T>) {\n    if (!isInjectable(constr)) {\n        throw new Error(`Commands should be @injectable: ${constr.name}`);\n    }\n    if (!context.isBound(constr)) {\n        context.bind(constr).toSelf();\n    }\n    context.bind(TYPES.CommandRegistration).toDynamicValue(ctx => ({\n        kind: constr.KIND,\n        factory: (action: Action) => {\n            const childContainer = new Container();\n            childContainer.parent = ctx.container;\n            childContainer.bind(TYPES.Action).toConstantValue(action);\n            return childContainer.get<ICommand>(constr);\n        }\n    }));\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container } from \"inversify\";\nimport { safeAssign } from \"sprotty-protocol/lib/utils/object\";\nimport { TYPES } from '../types';\n\n/**\n * Options for the command execution\n */\nexport interface CommandStackOptions {\n    /**\n     * The default duration of an animated command in milliseconds\n     */\n    defaultDuration: number\n\n    /**\n     * The maximum number of commands that can be undone. Once the undo stack\n     * reaches this number, any additional command that is pushed will remove\n     * one from the bottom of the stack.\n     *\n     * If negative, there is no limit, which results in a memory leak.\n     */\n    undoHistoryLimit: number\n}\n\nexport function overrideCommandStackOptions(container: Container, options: Partial<CommandStackOptions>): CommandStackOptions {\n    const defaultOptions = container.get<CommandStackOptions>(TYPES.CommandStackOptions);\n    safeAssign(defaultOptions, options);\n    return defaultOptions;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { TYPES } from \"../types\";\nimport { ILogger } from \"../../utils/logging\";\nimport { EMPTY_ROOT, IModelFactory } from \"../model/smodel-factory\";\nimport { SModelRootImpl } from \"../model/smodel\";\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\nimport { IViewer, IViewerProvider } from \"../views/viewer\";\nimport { CommandStackOptions } from './command-stack-options';\nimport {\n    HiddenCommand, ICommand, CommandExecutionContext, CommandReturn, SystemCommand,\n    MergeableCommand, PopupCommand, ResetCommand, CommandResult\n} from './command';\n\n/**\n * The component that holds the current model and applies the commands\n * to change it.\n *\n * The command stack is called by the ActionDispatcher and forwards the\n * changed model to the Viewer that renders it.\n */\nexport interface ICommandStack {\n    /**\n     * Executes the given command on the current model and returns a\n     * Promise for the new result.\n     *\n     * Unless it is a special command, it is pushed to the undo stack\n     * such that it can be rolled back later and the redo stack is\n     * cleared.\n     */\n    execute(command: ICommand): Promise<SModelRootImpl>\n\n    /**\n     * Executes all of the given commands. As opposed to calling\n     * execute() multiple times, the Viewer is only updated once after\n     * the last command has been executed.\n     */\n    executeAll(commands: ICommand[]): Promise<SModelRootImpl>\n\n    /**\n     * Takes the topmost command from the undo stack, undoes its\n     * changes and pushes it ot the redo stack. Returns a Promise for\n     * the changed model.\n     */\n    undo(): Promise<SModelRootImpl>\n\n    /**\n     * Takes the topmost command from the redo stack, redoes its\n     * changes and pushes it ot the undo stack. Returns a Promise for\n     * the changed model.\n     */\n    redo(): Promise<SModelRootImpl>\n}\n\n/**\n * As part of the event cylce, the ICommandStack should be injected\n * using a provider to avoid cyclic injection dependencies.\n */\nexport type CommandStackProvider = () => Promise<ICommandStack>;\n\n/**\n * The implementation of the ICommandStack. Clients should not use this\n * class directly.\n *\n * The command stack holds the current model as the result of the current\n * promise. When a new command is executed/undone/redone, its execution is\n * chained using <code>Promise#then()</code> to the current Promise. This\n * way we can handle long running commands without blocking the current\n * thread.\n *\n * The command stack also does the special handling for special commands:\n *\n * System commands should be transparent to the user and as such be\n * automatically undone/redone with the next plain command. Additional care\n * must be taken that system commands that are executed after undo don't\n * break the correspondence between the topmost commands on the undo and\n * redo stacks.\n *\n * Hidden commands only tell the viewer to render a hidden model such that\n * its bounds can be extracted from the DOM and forwarded as separate actions.\n * Hidden commands should not leave any trace on the undo/redo/off stacks.\n *\n * Mergeable commands should be merged with their predecessor if possible,\n * such that e.g. multiple subsequent moves of the smae element can be undone\n * in one single step.\n */\n@injectable()\nexport class CommandStack implements ICommandStack {\n\n    @inject(TYPES.IModelFactory) protected modelFactory: IModelFactory;\n    @inject(TYPES.IViewerProvider) protected viewerProvider: IViewerProvider;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\n    @inject(TYPES.CommandStackOptions) protected options: CommandStackOptions;\n\n    protected currentPromise: Promise<CommandStackState>;\n\n    protected modelViewer?: IViewer;\n    protected hiddenModelViewer?: IViewer;\n    protected popupModelViewer?: IViewer;\n\n    protected undoStack: ICommand[] = [];\n    protected redoStack: ICommand[] = [];\n\n    /**\n     * System commands should be transparent to the user in undo/redo\n     * operations. When a system command is executed when the redo\n     * stack is not empty, it is pushed to offStack instead.\n     *\n     * On redo, all commands form this stack are undone such that the\n     * redo operation gets the exact same model as when it was executed\n     * first.\n     *\n     * On undo, all commands form this stack are undone as well as\n     * system ommands should be transparent to the user.\n     */\n    protected offStack: ICommand[] = [];\n\n    @postConstruct()\n    protected initialize() {\n        this.currentPromise = Promise.resolve({\n            main: {\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\n                modelChanged: false,\n            },\n            hidden: {\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\n                modelChanged: false,\n            },\n            popup: {\n                model: this.modelFactory.createRoot(EMPTY_ROOT),\n                modelChanged: false,\n            }\n        });\n    }\n\n    protected get currentModel(): Promise<SModelRootImpl> {\n        return this.currentPromise.then(\n            state => state.main.model\n        );\n    }\n\n    executeAll(commands: ICommand[]): Promise<SModelRootImpl> {\n        commands.forEach(\n            command => {\n                this.logger.log(this, 'Executing', command);\n                this.handleCommand(command, command.execute, this.mergeOrPush);\n            }\n        );\n        return this.thenUpdate();\n    }\n\n    execute(command: ICommand): Promise<SModelRootImpl> {\n        this.logger.log(this, 'Executing', command);\n        this.handleCommand(command, command.execute, this.mergeOrPush);\n        return this.thenUpdate();\n    }\n\n    undo(): Promise<SModelRootImpl> {\n        this.undoOffStackSystemCommands();\n        this.undoPreceedingSystemCommands();\n        const command = this.undoStack[this.undoStack.length - 1];\n        if (command !== undefined && !this.isBlockUndo(command)) {\n            this.undoStack.pop();\n            this.logger.log(this, 'Undoing', command);\n            this.handleCommand(command, command.undo, (c: ICommand, context: CommandExecutionContext) => {\n                this.redoStack.push(c);\n            });\n        }\n        return this.thenUpdate();\n    }\n\n    redo(): Promise<SModelRootImpl> {\n        this.undoOffStackSystemCommands();\n        const command = this.redoStack.pop();\n        if (command !== undefined) {\n            this.logger.log(this, 'Redoing', command);\n            this.handleCommand(command, command.redo, (c: ICommand, context: CommandExecutionContext) => {\n                this.pushToUndoStack(c);\n            });\n        }\n        this.redoFollowingSystemCommands();\n        return this.thenUpdate();\n    }\n\n    /**\n     * Chains the current promise with another Promise that performs the\n     * given operation on the given command.\n     *\n     * @param beforeResolve a function that is called directly before\n     *      resolving the Promise to return the new model. Usually puts the\n     *      command on the appropriate stack.\n     */\n    protected handleCommand(command: ICommand,\n                            operation: (context: CommandExecutionContext) => CommandReturn,\n                            beforeResolve: (command: ICommand, context: CommandExecutionContext) => void) {\n        this.currentPromise = this.currentPromise.then(state =>\n            new Promise<CommandStackState>(resolve => {\n                let target: 'main' | 'hidden' | 'popup';\n                if (command instanceof HiddenCommand)\n                    target = 'hidden';\n                else if (command instanceof PopupCommand)\n                    target = 'popup';\n                else\n                    target = 'main';\n                const context = this.createContext(state.main.model);\n\n                let commandResult: CommandReturn;\n                try {\n                    commandResult = operation.call(command, context);\n                } catch (error) {\n                    this.logger.error(this, \"Failed to execute command:\", error);\n                    commandResult = state[target].model;\n                }\n\n                const newState = copyState(state);\n                if (commandResult instanceof Promise) {\n                    commandResult.then(newModel => {\n                        if (target === 'main')\n                            beforeResolve.call(this, command, context);\n                        newState[target] = { model: newModel, modelChanged: true };\n                        resolve(newState);\n                    });\n                } else if (commandResult instanceof SModelRootImpl) {\n                    if (target === 'main')\n                        beforeResolve.call(this, command, context);\n                    newState[target] = { model: commandResult, modelChanged: true };\n                    resolve(newState);\n                } else {\n                    if (target === 'main')\n                        beforeResolve.call(this, command, context);\n                    newState[target] = {\n                        model: commandResult.model,\n                        modelChanged: state[target].modelChanged || commandResult.modelChanged,\n                        cause: commandResult.cause\n                    };\n                    resolve(newState);\n                }\n            })\n        );\n    }\n\n    protected pushToUndoStack(command: ICommand) {\n        this.undoStack.push(command);\n        if (this.options.undoHistoryLimit >= 0 && this.undoStack.length > this.options.undoHistoryLimit)\n            this.undoStack.splice(0, this.undoStack.length - this.options.undoHistoryLimit);\n    }\n\n    /**\n     * Notifies the Viewer to render the new model and/or the new hidden model\n     * and returns a Promise for the new model.\n     */\n    protected thenUpdate(): Promise<SModelRootImpl> {\n        this.currentPromise = this.currentPromise.then(state => {\n            const newState = copyState(state);\n            if (state.hidden.modelChanged) {\n                this.updateHidden(state.hidden.model, state.hidden.cause);\n                newState.hidden.modelChanged = false;\n                newState.hidden.cause = undefined;\n            }\n            if (state.main.modelChanged) {\n                this.update(state.main.model, state.main.cause);\n                newState.main.modelChanged = false;\n                newState.main.cause = undefined;\n            }\n            if (state.popup.modelChanged) {\n                this.updatePopup(state.popup.model, state.popup.cause);\n                newState.popup.modelChanged = false;\n                newState.popup.cause = undefined;\n            }\n            return newState;\n        });\n        return this.currentModel;\n    }\n\n    /**\n     * Notify the `ModelViewer` that the model has changed.\n     */\n    update(model: SModelRootImpl, cause?: Action): void {\n        if (this.modelViewer === undefined) {\n            this.modelViewer = this.viewerProvider.modelViewer;\n        }\n        this.modelViewer.update(model, cause);\n    }\n\n    /**\n     * Notify the `HiddenModelViewer` that the hidden model has changed.\n     */\n    updateHidden(model: SModelRootImpl, cause?: Action): void {\n        if (this.hiddenModelViewer === undefined) {\n            this.hiddenModelViewer = this.viewerProvider.hiddenModelViewer;\n        }\n        this.hiddenModelViewer.update(model, cause);\n    }\n\n    /**\n     * Notify the `PopupModelViewer` that the popup model has changed.\n     */\n    updatePopup(model: SModelRootImpl, cause?: Action): void {\n        if (this.popupModelViewer === undefined) {\n            this.popupModelViewer = this.viewerProvider.popupModelViewer;\n        }\n        this.popupModelViewer.update(model, cause);\n    }\n\n    /**\n     * Handling of commands after their execution.\n     *\n     * Hidden commands are not pushed to any stack.\n     *\n     * System commands are pushed to the <code>offStack</code> when the redo\n     * stack is not empty, allowing to undo the before a redo to keep the chain\n     * of commands consistent.\n     *\n     * Mergable commands are merged if possible.\n     */\n    protected mergeOrPush(command: ICommand, context: CommandExecutionContext): void {\n        if (this.isBlockUndo(command)) {\n            this.undoStack = [];\n            this.redoStack = [];\n            this.offStack = [];\n            this.pushToUndoStack(command);\n            return;\n        }\n        if (this.isPushToOffStack(command) && this.redoStack.length > 0) {\n            if (this.offStack.length > 0) {\n                const lastCommand = this.offStack[this.offStack.length - 1];\n                if (lastCommand instanceof MergeableCommand && lastCommand.merge(command, context))\n                    return;\n            }\n            this.offStack.push(command);\n            return;\n        }\n        if (this.isPushToUndoStack(command)) {\n            this.offStack.forEach(c => this.undoStack.push(c));\n            this.offStack = [];\n            this.redoStack = [];\n            if (this.undoStack.length > 0) {\n                const lastCommand = this.undoStack[this.undoStack.length - 1];\n                if (lastCommand instanceof MergeableCommand && lastCommand.merge(command, context))\n                    return;\n            }\n            this.pushToUndoStack(command);\n        }\n    }\n\n    /**\n     * Reverts all system commands on the offStack.\n     */\n    protected undoOffStackSystemCommands(): void {\n        let command = this.offStack.pop();\n        while (command !== undefined) {\n            this.logger.log(this, 'Undoing off-stack', command);\n            this.handleCommand(command, command.undo, () => {});\n            command = this.offStack.pop();\n        }\n    }\n\n    /**\n     * System commands should be transparent to the user, so this method\n     * is called from <code>undo()</code> to revert all system commands\n     * at the top of the undoStack.\n     */\n    protected undoPreceedingSystemCommands(): void {\n        let command = this.undoStack[this.undoStack.length - 1];\n        while (command !== undefined && this.isPushToOffStack(command)) {\n            this.undoStack.pop();\n            this.logger.log(this, 'Undoing', command);\n            this.handleCommand(command, command.undo, (c: ICommand, context: CommandExecutionContext) => {\n                this.redoStack.push(c);\n            });\n            command = this.undoStack[this.undoStack.length - 1];\n        }\n    }\n\n    /**\n     * System commands should be transparent to the user, so this method\n     * is called from <code>redo()</code> to re-execute all system commands\n     * at the top of the redoStack.\n     */\n    protected redoFollowingSystemCommands(): void {\n        let command = this.redoStack[this.redoStack.length - 1];\n        while (command !== undefined && this.isPushToOffStack(command)) {\n            this.redoStack.pop();\n            this.logger.log(this, 'Redoing ', command);\n            this.handleCommand(command, command.redo, (c: ICommand, context: CommandExecutionContext) => {\n                this.pushToUndoStack(c);\n            });\n            command = this.redoStack[this.redoStack.length - 1];\n        }\n    }\n\n    /**\n     * Assembles the context object that is passed to the commands execution method.\n     */\n    protected createContext(currentModel: SModelRootImpl): CommandExecutionContext {\n        return {\n            root: currentModel,\n            modelChanged: this,\n            modelFactory: this.modelFactory,\n            duration: this.options.defaultDuration,\n            logger: this.logger,\n            syncer: this.syncer\n        };\n    }\n\n    protected isPushToOffStack(command: ICommand): boolean {\n        return command instanceof SystemCommand;\n    }\n\n    protected isPushToUndoStack(command: ICommand): boolean {\n        return !(command instanceof HiddenCommand);\n    }\n\n    protected isBlockUndo(command: ICommand): boolean {\n        return command instanceof ResetCommand;\n    }\n}\n\n/**\n * Internal type to pass the results between the promises in the `CommandStack`.\n */\nexport interface CommandStackState {\n    main: CommandResult,\n    hidden: CommandResult,\n    popup: CommandResult\n}\n\nfunction copyState(state: CommandStackState): CommandStackState {\n    return {\n        main: {...state.main},\n        hidden: {...state.hidden},\n        popup: {...state.popup}\n    };\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action } from './actions';\nimport { DiagramServer } from './diagram-server';\nimport { DiagramState } from './diagram-services';\n\nexport type ServerActionHandler<A extends Action = Action> = (action: A, state: DiagramState, server: DiagramServer) => Promise<void>;\n\n/**\n * Use this service to register handlers to specific actions. The `DiagramServer` queries this registry\n * when an action is received from the client, and falls back to the built-in behavior if no handlers\n * are found.\n */\nexport class ServerActionHandlerRegistry {\n\n    protected readonly handlers = new Map<string, ServerActionHandler[]>();\n\n    /**\n     * Returns the action handlers for the given action kind, or `undefined` if there are none.\n     */\n    getHandler(kind: string): ServerActionHandler[] | undefined {\n        return this.handlers.get(kind);\n    }\n\n    /**\n     * Add an action handler to be called when an action of the specified kind is received.\n     */\n    onAction<A extends Action>(kind: string, handler: ServerActionHandler<A>) {\n        if (this.handlers.has(kind)) {\n            this.handlers.get(kind)!.push(handler);\n        } else {\n            this.handlers.set(kind, [handler]);\n        }\n    }\n\n    /**\n     * Remove an action handler that was previously added with `onAction`.\n     */\n    removeActionHandler<A extends Action>(kind: string, handler: ServerActionHandler<A>) {\n        const list = this.handlers.get(kind);\n        if (list) {\n            const index = list.indexOf(handler);\n            if (index >= 0) {\n                list.splice(index, 1);\n            }\n        }\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Alignable, BoundsAware, SModelElement, SModelRoot } from '../model';\nimport { ComputedBoundsAction } from '../actions';\n\n/**\n * Clone a given model. This function requires that the model is serializable, so it's\n * free of cycles and functions.\n */\nexport function cloneModel<T extends SModelElement>(model: T): T {\n    return JSON.parse(JSON.stringify(model));\n}\n\n/**\n * Apply the computed bounds to the given model. This ensures that the model has complete\n * information about positions and sizes derived from its actual rendering in the frontend.\n */\nexport function applyBounds(root: SModelRoot, action: ComputedBoundsAction) {\n    const index = new SModelIndex();\n    index.add(root);\n    for (const b of action.bounds) {\n        const element = index.getById(b.elementId);\n        if (element) {\n            const bae = element as SModelElement & BoundsAware;\n            if (b.newPosition) {\n                bae.position = { x: b.newPosition.x, y: b.newPosition.y };\n            }\n            if (b.newSize) {\n                bae.size = { width: b.newSize.width, height: b.newSize.height };\n            }\n        }\n    }\n    if (action.alignments) {\n        for (const a of action.alignments) {\n            const element = index.getById(a.elementId);\n            if (element) {\n                const alignable = element as SModelElement & Alignable;\n                alignable.alignment = { x: a.newAlignment.x, y: a.newAlignment.y };\n            }\n        }\n    }\n}\n\n/**\n * Model element types can include a colon to separate the basic type and a sub-type. This function\n * extracts the basic type of a model element.\n */\nexport function getBasicType(element: { type: string }): string {\n    if (!element.type) {\n        return '';\n    }\n    const colonIndex = element.type.indexOf(':');\n    return colonIndex >= 0 ? element.type.substring(0, colonIndex) : element.type;\n}\n\n/**\n * Model element types can include a colon to separate the basic type and a sub-type. This function\n * extracts the sub-type of a model element.\n */\nexport function getSubType(schema: { type: string }): string {\n    if (!schema.type) {\n        return '';\n    }\n    const colonIndex = schema.type.indexOf(':');\n    return colonIndex >= 0 ? schema.type.substring(colonIndex + 1) : schema.type;\n}\n\n/**\n * Find the element with the given identifier. If you need to find multiple elements, using an\n * `SModelIndex` might be more effective.\n */\nexport function findElement(parent: SModelElement, elementId: string): SModelElement | undefined {\n    if (parent.id === elementId)\n        return parent;\n    if (parent.children !== undefined) {\n        for (const child of parent.children) {\n            const result = findElement(child, elementId);\n            if (result !== undefined)\n                return result;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Used to speed up model element lookup by id.\n * This index implementation is for the serializable _external model_ defined in `sprotty-protocol`.\n */\nexport class SModelIndex {\n\n    private readonly id2element: Map<string, SModelElement> = new Map();\n    private id2parent: Map<string, SModelElement> = new Map();\n\n    add(element: SModelElement): void {\n        if (!element.id) {\n            throw new Error(\"Model element has no ID.\");\n        } else if (this.contains(element)) {\n            throw new Error(\"Duplicate ID in model: \" + element.id);\n        }\n        this.id2element.set(element.id, element);\n        if (Array.isArray(element.children)) {\n            for (const child of element.children) {\n                this.add(child as any);\n                this.id2parent.set(child.id, element);\n            }\n        }\n    }\n\n    remove(element: SModelElement): void {\n        this.id2element.delete(element.id);\n        if (Array.isArray(element.children)) {\n            for (const child of element.children) {\n                this.id2parent.delete(child.id);\n                this.remove(child as any);\n            }\n        }\n    }\n\n    contains(element: SModelElement): boolean {\n        return this.id2element.has(element.id);\n    }\n\n    getById(id: string): SModelElement | undefined {\n        return this.id2element.get(id);\n    }\n\n    getParent(id: string): SModelElement | undefined {\n        return this.id2parent.get(id);\n    }\n\n    getRoot(element: SModelElement): SModelRoot {\n        let current: SModelElement | undefined = element;\n        while (current) {\n            const parent = this.id2parent.get(current.id);\n            if (parent === undefined) {\n                return current;\n            }\n            current = parent;\n        }\n        throw new Error(\"Element has no root\");\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ServerActionHandler, ServerActionHandlerRegistry } from './action-handler';\nimport {\n    Action, isResponseAction, ResponseAction, RequestModelAction, ComputedBoundsAction, LayoutAction, RequestBoundsAction,\n    RequestAction, generateRequestId, SetModelAction, UpdateModelAction, RejectAction, isRequestAction\n} from './actions';\nimport { DiagramServices, DiagramState, IDiagramGenerator, IModelLayoutEngine } from './diagram-services';\nimport { SModelRoot } from './model';\nimport { Deferred } from './utils/async';\nimport { applyBounds, cloneModel } from './utils/model-utils';\n\n/**\n * An instance of this class is responsible for handling a single diagram client. It holds the current\n * state of the diagram and manages communication with the client via actions.\n */\nexport class DiagramServer {\n\n    readonly state: DiagramState & {\n        lastSubmittedModelType?: string\n    } = {\n        currentRoot: {\n            type: 'NONE',\n            id: 'ROOT'\n        },\n        revision: 0\n    };\n    readonly dispatch: <A extends Action>(action: A) => Promise<void>;\n\n    protected readonly diagramGenerator: IDiagramGenerator;\n    protected readonly layoutEngine?: IModelLayoutEngine;\n    protected actionHandlerRegistry?: ServerActionHandlerRegistry;\n    protected readonly requests = new Map<string, Deferred<ResponseAction>>();\n\n    constructor(dispatch: <A extends Action>(action: A) => Promise<void>,\n                services: DiagramServices) {\n        this.dispatch = dispatch;\n        this.diagramGenerator = services.DiagramGenerator;\n        this.layoutEngine = services.ModelLayoutEngine;\n        this.actionHandlerRegistry = services.ServerActionHandlerRegistry;\n    }\n\n    /**\n     * @deprecated Use the `ServerActionHandlerRegistry` service instead\n     */\n    onAction<A extends Action>(kind: string, handler: ServerActionHandler<A>) {\n        if (!this.actionHandlerRegistry) {\n            this.actionHandlerRegistry = new ServerActionHandlerRegistry();\n        }\n        this.actionHandlerRegistry.onAction(kind, handler);\n    }\n\n    /**\n     * @deprecated Use the `ServerActionHandlerRegistry` service instead\n     */\n    removeActionHandler<A extends Action>(kind: string, handler: ServerActionHandler<A>) {\n        if (this.actionHandlerRegistry) {\n            this.actionHandlerRegistry.removeActionHandler(kind, handler);\n        }\n    }\n\n    /**\n     * Set the model and submit it to the client.\n     */\n    setModel(newRoot: SModelRoot): Promise<void> {\n        newRoot.revision = ++this.state.revision;\n        this.state.currentRoot = newRoot;\n        return this.submitModel(newRoot, false);\n    }\n\n    /**\n     * Update the model to a new state and submit it to the client.\n     */\n    updateModel(newRoot: SModelRoot): Promise<void> {\n        newRoot.revision = ++this.state.revision;\n        this.state.currentRoot = newRoot;\n        return this.submitModel(newRoot, true);\n    }\n\n    /**\n     * Whether the client needs to compute the layout of parts of the model. This affects the behavior\n     * of `submitModel`.\n     *\n     * This setting is determined by the `DiagramOptions` that are received with the `RequestModelAction`\n     * from the client. If the client does not specify whether it needs client layout, the default value\n     * is `true`.\n     */\n    get needsClientLayout(): boolean {\n        if (this.state.options && this.state.options.needsClientLayout !== undefined) {\n            return !!this.state.options.needsClientLayout;\n        }\n        return true;\n    }\n\n    /**\n     * Whether the server needs to compute the layout of parts of the model. This affects the behavior\n     * of `submitModel`.\n     *\n     * This setting is determined by the `DiagramOptions` that are received with the `RequestModelAction`\n     * from the client. If the client does not specify whether it needs server layout, the default value\n     * is `false`.\n     */\n    get needsServerLayout(): boolean {\n        if (this.state.options && this.state.options.needsServerLayout !== undefined) {\n            return !!this.state.options.needsServerLayout;\n        }\n        return false;\n    }\n\n    /**\n     * Called when an action is received from the client.\n     */\n    accept(action: Action): Promise<void> {\n        if (isResponseAction(action)) {\n            const id = action.responseId;\n            const future = this.requests.get(id);\n            if (future) {\n                this.requests.delete(id);\n                if (action.kind === RejectAction.KIND) {\n                    const rejectAction: RejectAction = action as any;\n                    future.reject(new Error(rejectAction.message));\n                    console.warn(`Request with id ${action.responseId} failed: ${rejectAction.message}`, rejectAction.detail);\n                } else {\n                    future.resolve(action);\n                }\n                return Promise.resolve();\n            }\n            console.info('No matching request for response:', action);\n        }\n        return this.handleAction(action);\n    }\n\n    /**\n     * Send a request action to the client. The resulting promise is resolved when a matching\n     * response is received and rejected when a `RejectAction` is received.\n     */\n    request<Res extends ResponseAction>(action: RequestAction<Res>): Promise<Res> {\n        if (!action.requestId) {\n            action.requestId = 'server_' + generateRequestId();\n        }\n        const future = new Deferred<Res>();\n        this.requests.set(action.requestId, future as any);\n        this.dispatch(action).catch(err => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.requests.delete(action.requestId!);\n            future.reject(err);\n        });\n        return future.promise;\n    }\n\n    /**\n     * Send a `RejectAction` to the client to notify that a request could not be fulfilled.\n     */\n    rejectRemoteRequest(action: Action | undefined, error: Error): void {\n        if (action && isRequestAction(action)) {\n            this.dispatch({\n                kind: RejectAction.KIND,\n                responseId: action.requestId,\n                message: error.message,\n                detail: error.stack\n            });\n        }\n    }\n\n    protected handleAction(action: Action): Promise<void> {\n        // Find a matching action handler in the registry\n        const handlers = this.actionHandlerRegistry?.getHandler(action.kind);\n        if (handlers && handlers.length === 1) {\n            return handlers[0](action, this.state, this);\n        } else if (handlers && handlers.length > 1) {\n            return Promise.all(handlers.map(h => h(action, this.state, this))) as Promise<any>;\n        }\n        // If no handler is registered, call one of the default handling methods\n        switch (action.kind) {\n            case RequestModelAction.KIND:\n                return this.handleRequestModel(action as RequestModelAction);\n            case ComputedBoundsAction.KIND:\n                return this.handleComputedBounds(action as ComputedBoundsAction);\n            case LayoutAction.KIND:\n                return this.handleLayout(action as LayoutAction);\n        }\n        // We don't know this action kind, sigh\n        console.warn(`Unhandled action from client: ${action.kind}`);\n        return Promise.resolve();\n    }\n\n    protected async handleRequestModel(action: RequestModelAction): Promise<void> {\n        this.state.options = action.options;\n        try {\n            const newRoot = await this.diagramGenerator.generate({\n                options: this.state.options ?? {},\n                state: this.state\n            });\n            newRoot.revision = ++this.state.revision;\n            this.state.currentRoot = newRoot;\n            await this.submitModel(this.state.currentRoot, false, action);\n        } catch (err) {\n            this.rejectRemoteRequest(action, err as Error);\n            console.error('Failed to generate diagram:', err);\n        }\n    }\n\n    /**\n     * Submit a model to the client after it has been updated in the server state.\n     */\n     protected async submitModel(newRoot: SModelRoot, update: boolean, cause?: Action): Promise<void> {\n        if (this.needsClientLayout) {\n            if (!this.needsServerLayout) {\n                // In this case the client won't send us the computed bounds\n                this.dispatch({ kind: RequestBoundsAction.KIND, newRoot });\n            } else {\n                const request = RequestBoundsAction.create(newRoot);\n                const response = await this.request<ComputedBoundsAction>(request);\n                const currentRoot = this.state.currentRoot;\n                if (response.revision === currentRoot.revision) {\n                    applyBounds(currentRoot, response);\n                    await this.doSubmitModel(currentRoot, update, cause);\n                } else {\n                    this.rejectRemoteRequest(cause, new Error(`Model revision does not match: ${response.revision}`));\n                }\n            }\n        } else {\n            await this.doSubmitModel(newRoot, update, cause);\n        }\n    }\n\n    private async doSubmitModel(newRoot: SModelRoot, update: boolean, cause?: Action): Promise<void> {\n        if (newRoot.revision !== this.state.revision) {\n            return;\n        }\n        if (this.needsServerLayout && this.layoutEngine) {\n            newRoot = await this.layoutEngine.layout(newRoot);\n        }\n        const modelType = newRoot.type;\n        if (cause && cause.kind === RequestModelAction.KIND) {\n            const requestId = (cause as RequestModelAction).requestId;\n            const response = SetModelAction.create(newRoot, requestId);\n            await this.dispatch(response);\n        } else if (update && modelType === this.state.lastSubmittedModelType) {\n            await this.dispatch({ kind: UpdateModelAction.KIND, newRoot, cause });\n        } else {\n            await this.dispatch({ kind: SetModelAction.KIND, newRoot });\n        }\n        this.state.lastSubmittedModelType = modelType;\n    }\n\n    protected handleComputedBounds(action: ComputedBoundsAction): Promise<void> {\n        if (action.revision !== this.state.currentRoot.revision) {\n            return Promise.reject();\n        }\n        applyBounds(this.state.currentRoot, action);\n        return Promise.resolve();\n    }\n\n    protected async handleLayout(action: LayoutAction): Promise<void> {\n        if (!this.layoutEngine) {\n            return;\n        }\n        if (!this.needsServerLayout) {\n            let newRoot = cloneModel(this.state.currentRoot);\n            newRoot = await this.layoutEngine.layout(newRoot);\n            newRoot.revision = ++this.state.revision;\n            this.state.currentRoot = newRoot;\n        }\n        await this.doSubmitModel(this.state.currentRoot, true, action);\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Point, Dimension } from './utils/geometry';\nimport { hasOwnProperty } from './utils/object';\n\n/**\n * Base type for all elements of the diagram model.\n * Each model element must have a unique ID and a type that is used to look up its view.\n */\nexport interface SModelElement {\n    type: string\n    id: string\n    children?: SModelElement[]\n    cssClasses?: string[]\n}\n\n/**\n * Base type for the root element of the diagram model tree.\n */\nexport interface SModelRoot extends SModelElement {\n    canvasBounds?: Bounds\n    revision?: number\n}\n\n/**\n * Model elements that implement this interface have a position and a size.\n */\nexport interface BoundsAware {\n    position: Point\n    size: Dimension\n}\n\n/**\n * Used to adjust elements whose bounding box is not at the origin, e.g. labels\n * or pre-rendered SVG figures.\n */\nexport interface Alignable {\n    alignment: Point\n}\n\n/**\n * A viewport has a scroll position and a zoom factor. Usually these properties are\n * applied to the root element to enable navigating through the diagram.\n */\nexport interface Viewport extends Scrollable, Zoomable {\n}\n\n/**\n * A scrollable element has a scroll position, which indicates the top left corner of the\n * visible area.\n */\nexport interface Scrollable {\n    scroll: Point\n}\n\nexport function isScrollable(element: SModelElement | Scrollable): element is Scrollable {\n    return hasOwnProperty(element, 'scroll');\n}\n\n/**\n * A zoomable element can be scaled so it appears smaller or larger than its actual size.\n * The zoom value 1 is the default scale where the content is drawn with its actual size.\n */\nexport interface Zoomable {\n    zoom: number\n}\n\nexport function isZoomable(element: SModelElement | Zoomable): element is Zoomable {\n    return hasOwnProperty(element, 'zoom');\n}\n\n/**\n * Root element for graph-like models.\n */\nexport interface SGraph extends SModelRoot {\n    children: SModelElement[]\n    bounds?: Bounds\n    scroll?: Point\n    zoom?: number\n    layoutOptions?: ModelLayoutOptions\n}\n\n/**\n * Options to control the \"micro layout\" of a model element, i.e. the arrangement of its content\n * using simple algorithms such as horizontal or vertical box layout.\n */\nexport type ModelLayoutOptions = { [key: string]: string | number | boolean };\n\nexport interface SShapeElement extends SModelElement {\n    position?: Point\n    size?: Dimension\n    layoutOptions?: ModelLayoutOptions\n}\n\n/**\n * Model element class for nodes, which are the main entities in a graph. A node can be connected to\n * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of\n * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.\n */\nexport interface SNode extends SShapeElement {\n    layout?: string\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n    anchorKind?: string\n}\n\n/**\n * A port is a connection point for edges. It should always be contained in an SNode.\n */\nexport interface SPort extends SShapeElement {\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n    anchorKind?: string\n}\n\n/**\n * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,\n * each of which can be either a node or a port. The source and target elements are referenced via their ids.\n */\nexport interface SEdge extends SModelElement {\n    sourceId: string\n    targetId: string\n    routerKind?: string\n    routingPoints?: Point[]\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n}\n\n/**\n * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.\n */\nexport interface SLabel extends SShapeElement {\n    text: string\n    selected?: boolean\n}\n\n/**\n * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`\n * or `hbox` layout is used to arrange these children.\n */\nexport interface SCompartment extends SShapeElement {\n    layout?: string\n}\n\n/**\n * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.\n */\nexport interface HtmlRoot extends SModelRoot {\n    classes?: string[]\n}\n\n/**\n * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to\n * render complex figures or to compute the view on the server instead of the client code.\n */\nexport interface PreRenderedElement extends SModelElement {\n    code: string\n}\n\n/**\n * Same as PreRenderedElement, but with a position and a size.\n */\nexport interface ShapedPreRenderedElement extends PreRenderedElement {\n    position?: Point\n    size?: Dimension\n}\n\n/**\n * A `foreignObject` element to be transferred to the DOM within the SVG.\n *\n * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of\n * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not\n * support rendering the `foreignObject` content.\n *\n * If no dimensions are specified in the schema element, this element will obtain the dimension of\n * its parent to fill the entire available room. Thus, this element requires specified bounds itself\n * or bounds to be available for its parent.\n */\nexport interface ForeignObjectElement extends ShapedPreRenderedElement {\n    /** The namespace to be assigned to the elements inside of the `foreignObject`. */\n    namespace: string\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './actions';\nexport * from './diagram-server';\nexport * from './diagram-services';\nexport * from './model';\nexport * from './utils/async';\nexport * from './utils/geometry';\nexport * from './utils/json';\nexport * from './utils/model-utils';\nexport * from './utils/object';\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Point } from 'sprotty-protocol';\n\n/**\n * Returns whether the mouse or keyboard event includes the CMD key\n * on Mac or CTRL key on Linux / others.\n */\nexport function isCtrlOrCmd(event: KeyboardEvent | MouseEvent) {\n    if (isMac())\n        return event.metaKey;\n    else\n        return event.ctrlKey;\n}\n\nexport function isMac(): boolean {\n    return window.navigator.userAgent.indexOf(\"Mac\") !== -1;\n}\n\nexport function isCrossSite(url: string): boolean {\n    if (url && typeof window !== 'undefined' && window.location) {\n        let baseURL: string = '';\n        if (window.location.protocol)\n            baseURL += window.location.protocol + '//';\n        if (window.location.host)\n            baseURL += window.location.host;\n        return baseURL.length > 0 && !url.startsWith(baseURL);\n    }\n    return false;\n}\n\n/**\n * Returns the amount of scroll of the browser window as a point.\n */\nexport function getWindowScroll(): Point {\n    if (typeof window === 'undefined') {\n        return Point.ORIGIN;\n    }\n    return {\n        x: window.pageXOffset,\n        y: window.pageYOffset\n    };\n}\n\n/**\n * Checks whether the given mouse event hits the given DOM element.\n */\nexport function hitsMouseEvent(child: Element, event: MouseEvent): boolean {\n    const clientRect = child.getBoundingClientRect();\n    return event.clientX >= clientRect.left && event.clientX <= clientRect.right\n        && event.clientY >= clientRect.top && event.clientY <= clientRect.bottom;\n}\n\n/**\n * Checks whether the given DOM node is an SVG element.\n */\nexport function isSVGGraphicsElement(node: Node): node is SVGGraphicsElement {\n    return typeof (node as SVGGraphicsElement).getBBox === 'function';\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { almostEquals, Bounds, Dimension } from \"sprotty-protocol/lib/utils/geometry\";\nimport { TYPES } from \"../types\";\nimport { IActionDispatcher } from '../actions/action-dispatcher';\nimport { IVNodePostprocessor } from \"../views/vnode-postprocessor\";\nimport { SModelElementImpl, SModelRootImpl } from \"../model/smodel\";\nimport { SystemCommand, CommandExecutionContext, CommandReturn } from '../commands/command';\nimport { getWindowScroll } from \"../../utils/browser\";\n\n/**\n * Grabs the bounds from the root element in page coordinates and fires a\n * InitializeCanvasBoundsAction. This size is needed for other actions such\n * as FitToScreenAction.\n */\n@injectable()\nexport class CanvasBoundsInitializer implements IVNodePostprocessor {\n\n    protected rootAndVnode: [SModelRootImpl, VNode] | undefined;\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (element instanceof SModelRootImpl && !Dimension.isValid(element.canvasBounds)) {\n            this.rootAndVnode = [element, vnode];\n        }\n        return vnode;\n    }\n\n    postUpdate() {\n        if (this.rootAndVnode !== undefined) {\n            const domElement = this.rootAndVnode[1].elm;\n            const oldBounds = this.rootAndVnode[0].canvasBounds;\n            if (domElement !== undefined) {\n                const newBounds = this.getBoundsInPage(domElement as Element);\n                if (!(almostEquals(newBounds.x, oldBounds.x)\n                        && almostEquals(newBounds.y, oldBounds.y)\n                        && almostEquals(newBounds.width, oldBounds.width)\n                        && almostEquals(newBounds.height, oldBounds.width)))\n                    this.actionDispatcher.dispatch(InitializeCanvasBoundsAction.create(newBounds));\n\n            }\n            this.rootAndVnode = undefined;\n        }\n    }\n\n    protected getBoundsInPage(element: Element) {\n        const bounds = element.getBoundingClientRect();\n        const scroll = getWindowScroll();\n        return {\n            x: bounds.left + scroll.x,\n            y: bounds.top + scroll.y,\n            width: bounds.width,\n            height: bounds.height\n        };\n    }\n}\n\nexport interface InitializeCanvasBoundsAction extends Action {\n    kind: typeof InitializeCanvasBoundsAction.KIND\n    newCanvasBounds: Bounds\n}\nexport namespace InitializeCanvasBoundsAction {\n    export const KIND = 'initializeCanvasBounds';\n\n    export function create(newCanvasBounds: Bounds): InitializeCanvasBoundsAction {\n        return {\n            kind: KIND,\n            newCanvasBounds\n        };\n    }\n}\n\n@injectable()\nexport class InitializeCanvasBoundsCommand extends SystemCommand {\n    static readonly KIND: string = InitializeCanvasBoundsAction.KIND;\n\n    private newCanvasBounds: Bounds;\n\n    constructor(@inject(TYPES.Action) protected readonly action: InitializeCanvasBoundsAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.newCanvasBounds = this.action.newCanvasBounds;\n        context.root.canvasBounds = this.newCanvasBounds;\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action, generateRequestId, RequestAction, ResponseAction,\n    RequestModelAction as ProtocolRequestModelAction, SetModelAction as ProtocolSetModelAction\n} from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { JsonPrimitive } from \"sprotty-protocol/lib/utils/json\";\nimport { CommandExecutionContext, ResetCommand } from \"../commands/command\";\nimport { SModelRootImpl } from \"../model/smodel\";\nimport { TYPES } from \"../types\";\nimport { InitializeCanvasBoundsCommand } from './initialize-canvas';\n\n@injectable()\nexport class SetModelCommand extends ResetCommand {\n    static readonly KIND = ProtocolSetModelAction.KIND;\n\n    oldRoot: SModelRootImpl;\n    newRoot: SModelRootImpl;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolSetModelAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRootImpl {\n        this.oldRoot = context.modelFactory.createRoot(context.root);\n        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);\n        return this.newRoot;\n    }\n\n    undo(context: CommandExecutionContext): SModelRootImpl {\n        return this.oldRoot;\n    }\n\n    redo(context: CommandExecutionContext): SModelRootImpl {\n        return this.newRoot;\n    }\n\n    get blockUntil(): (action: Action) => boolean {\n        return action => action.kind === InitializeCanvasBoundsCommand.KIND;\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Sent from the client to the model source (e.g. a DiagramServer) in order to request a model. Usually this\n * is the first message that is sent to the source, so it is also used to initiate the communication.\n * The response is a SetModelAction or an UpdateModelAction.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class RequestModelAction implements ProtocolRequestModelAction {\n    static readonly KIND = 'requestModel';\n    readonly kind = RequestModelAction.KIND;\n\n    constructor(public readonly options?: { [key: string]: JsonPrimitive },\n        public readonly requestId = '') { }\n\n    /** Factory function to dispatch a request with the `IActionDispatcher` */\n    static create(options?: { [key: string]: JsonPrimitive }): RequestAction<SetModelAction> {\n        return new RequestModelAction(options, generateRequestId());\n    }\n}\n\n/**\n * Sent from the model source to the client in order to set the model. If a model is already present, it is replaced.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SetModelAction implements ResponseAction, ProtocolSetModelAction {\n    static readonly KIND = 'setModel';\n    readonly kind = SetModelAction.KIND;\n\n    constructor(public readonly newRoot: SModelRootSchema,\n        public readonly responseId = '') { }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from \"inversify\";\nimport { SModelElement as SModelElementSchema } from 'sprotty-protocol/lib/model';\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { TYPES } from \"../types\";\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl, SParentElementImpl } from \"./smodel\";\nimport { SModelElementRegistration, CustomFeatures } from \"./smodel-factory\";\n\n/**\n * Register a model element constructor for an element type.\n */\nexport function registerModelElement(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        type: string, constr: new () => SModelElementImpl, features?: CustomFeatures): void {\n    context.bind<SModelElementRegistration>(TYPES.SModelElementRegistration).toConstantValue({\n        type, constr, features\n    });\n}\n\n/**\n * Find a parent element that satisfies the given predicate.\n */\nexport function findParent(element: SModelElementImpl, predicate: (e: SModelElementImpl) => boolean): SModelElementImpl | undefined {\n    let current: SModelElementImpl | undefined = element;\n    while (current !== undefined) {\n        if (predicate(current))\n            return current;\n        else if (current instanceof SChildElementImpl)\n            current = current.parent;\n        else\n            current = undefined;\n    }\n    return current;\n}\n\n/**\n * Find a parent element that implements the feature identified with the given predicate.\n */\nexport function findParentByFeature<T>(element: SModelElementImpl, predicate: (t: SModelElementImpl) => t is SModelElementImpl & T): SModelElementImpl & T | undefined {\n    let current: SModelElementImpl | undefined = element;\n    while (current !== undefined) {\n        if (predicate(current))\n            return current;\n        else if (current instanceof SChildElementImpl)\n            current = current.parent;\n        else\n            current = undefined;\n    }\n    return current;\n}\n\n/**\n * Translate a point from the coordinate system of the source element to the coordinate system\n * of the target element.\n */\nexport function translatePoint(point: Point, source: SModelElementImpl, target: SModelElementImpl): Point {\n    if (source !== target) {\n        // Translate from the source to the root element\n        while (source instanceof SChildElementImpl) {\n            point = source.localToParent(point);\n            source = source.parent;\n            if (source === target)\n                return point;\n        }\n        // Translate from the root to the target element\n        const targetTrace = [];\n        while (target instanceof SChildElementImpl) {\n            targetTrace.push(target);\n            target = target.parent;\n        }\n        if (source !== target)\n            throw new Error(\"Incompatible source and target: \" + source.id + \", \" + target.id);\n        for (let i = targetTrace.length - 1; i >= 0; i--) {\n            point = targetTrace[i].parentToLocal(point);\n        }\n    }\n    return point;\n}\n\n/**\n * Translate some bounds from the coordinate system of the source element to the coordinate system\n * of the target element.\n */\nexport function translateBounds(bounds: Bounds, source: SModelElementImpl, target: SModelElementImpl): Bounds {\n    const upperLeft = translatePoint(bounds, source, target);\n    const lowerRight = translatePoint({ x: bounds.x + bounds.width, y: bounds.y + bounds.height }, source, target);\n    return {\n        x: upperLeft.x,\n        y: upperLeft.y,\n        width: lowerRight.x - upperLeft.x,\n        height: lowerRight.y - upperLeft.y\n    };\n}\n\n/**\n * Tests if the given model contains an id of then given element or one of its descendants.\n */\nexport function containsSome(root: SModelRootImpl, element: SChildElementImpl): boolean {\n    const test = (el: SChildElementImpl) => root.index.getById(el.id) !== undefined;\n    const find = (elements: readonly SChildElementImpl[]): boolean => elements.some(el => test(el) || find(el.children));\n    return find([element]);\n}\n\n/**\n * Transforms the local bounds all the way up to the root.\n */\nexport function  transformToRootBounds(parent: SParentElementImpl, bounds: Bounds) {\n    while (parent instanceof SChildElementImpl) {\n        bounds = parent.localToParent(bounds);\n        parent = parent.parent;\n    }\n    return bounds;\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Model element types can include a colon to separate the basic type and a sub-type. This function\n * extracts the basic type of a model element.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function getBasicType(schema: SModelElementSchema | SModelElementImpl): string {\n    if (!schema.type)\n        return '';\n    const colonIndex = schema.type.indexOf(':');\n    if (colonIndex >= 0)\n        return schema.type.substring(0, colonIndex);\n    else\n        return schema.type;\n}\n\n/**\n * Model element types can include a colon to separate the basic type and a sub-type. This function\n * extracts the sub-type of a model element.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function getSubType(schema: SModelElementSchema | SModelElementImpl): string {\n    if (!schema.type)\n        return '';\n    const colonIndex = schema.type.indexOf(':');\n    if (colonIndex >= 0)\n        return schema.type.substring(colonIndex + 1);\n    else\n        return schema.type;\n}\n\n/**\n * Find the element with the given identifier. If you need to find multiple elements, using an\n * SModelIndex might be more effective.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function findElement(parent: SModelElementSchema, elementId: string): SModelElementSchema | undefined {\n    if (parent.id === elementId)\n        return parent;\n    if (parent.children !== undefined) {\n        for (const child of parent.children) {\n            const result = findElement(child, elementId);\n            if (result !== undefined)\n                return result;\n        }\n    }\n    return undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action } from \"sprotty-protocol/lib/actions\";\n\n/**\n * Action to enable the tools of the specified `toolIds`.\n */\nexport interface EnableToolsAction extends Action {\n    kind: typeof EnableToolsAction.KIND\n    toolIds: string[]\n}\nexport namespace EnableToolsAction {\n    export const KIND = \"enable-tools\";\n\n    export function create(toolIds: string[]): EnableToolsAction {\n        return {\n            kind: KIND,\n            toolIds\n        };\n    }\n}\n\n/**\n * Action to disable the currently active tools and enable the default tools instead.\n */\nexport interface EnableDefaultToolsAction extends Action {\n    kind: typeof EnableDefaultToolsAction.KIND;\n}\nexport namespace EnableDefaultToolsAction {\n    export const KIND = \"enable-default-tools\";\n\n    export function create(): EnableDefaultToolsAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n/** A tool that can be managed by a `ToolManager`. */\nexport interface Tool {\n    readonly id: string;\n    /* Notifies the tool to become active. */\n    enable(): void;\n    /* Notifies the tool to become inactive. */\n    disable(): void;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { VNode } from \"snabbdom\";\n\nexport function setAttr(vnode: VNode, name: string, value: any) {\n    getAttrs(vnode)[name] = value;\n}\n\nexport function setClass(vnode: VNode, name: string, value: boolean) {\n    getClass(vnode)[name] = value;\n}\n\nexport function setNamespace(node: VNode, ns: string) {\n    if (node.data === undefined)\n        node.data = {};\n    node.data.ns = ns;\n    const children = node.children;\n    if (children !== undefined) {\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (typeof child !== 'string')\n                setNamespace(child, ns);\n        }\n    }\n}\n\nexport function copyClassesFromVNode(source: VNode, target: VNode) {\n    const classList = getClass(source);\n    Object.keys(classList).forEach(c => setClass(target, c, true));\n}\n\nexport function copyClassesFromElement(element: HTMLElement, target: VNode) {\n    const classList = element.classList;\n    for (let i = 0; i < classList.length; i++) {\n        const item = classList.item(i);\n        if (item)\n            setClass(target, item, true);\n    }\n}\n\nexport function mergeStyle(vnode: VNode, style: any) {\n    getData(vnode).style = {...(getData(vnode).style || {}), ...style};\n}\n\nexport function on(vnode: VNode, event: string, listener: (event: Event) => void) {\n    const val = getOn(vnode);\n    if (val[event]) {\n        throw new Error('EventListener for ' + event + ' already registered on VNode');\n    }\n    (val as any)[event] = listener;\n}\n\nexport function getAttrs(vnode: VNode) {\n    const data = getData(vnode);\n    if (!data.attrs)\n        data.attrs = {};\n    return data.attrs;\n}\n\nfunction getData(vnode: VNode) {\n    if (!vnode.data)\n        vnode.data = {};\n    return vnode.data;\n}\n\nfunction getClass(vnode: VNode) {\n    const data = getData(vnode);\n    if (!data.class)\n        data.class = {};\n    return data.class;\n}\n\nfunction getOn(vnode: VNode) {\n    const data = getData(vnode);\n    if (!data.on)\n        data.on = {};\n    return data.on;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { TYPES } from \"../types\";\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\nimport { SModelElementImpl, SModelRootImpl } from \"../model/smodel\";\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\nimport { on } from \"./vnode-utils\";\n\n@injectable()\nexport class KeyTool implements IVNodePostprocessor {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n\n    constructor(@multiInject(TYPES.KeyListener)@optional() protected keyListeners: KeyListener[] = []) {}\n\n    register(keyListener: KeyListener) {\n        this.keyListeners.push(keyListener);\n    }\n\n    deregister(keyListener: KeyListener) {\n        const index = this.keyListeners.indexOf(keyListener);\n        if (index >= 0)\n            this.keyListeners.splice(index, 1);\n    }\n\n    protected handleEvent<K extends keyof KeyListener>(methodName: K, model: SModelRootImpl, event: KeyboardEvent) {\n        const actions = this.keyListeners\n            .map(listener => listener[methodName].apply(listener, [model, event]))\n            .reduce((a, b) => a.concat(b));\n        if (actions.length > 0) {\n            event.preventDefault();\n            this.actionDispatcher.dispatchAll(actions);\n        }\n    }\n\n    keyDown(element: SModelRootImpl, event: KeyboardEvent): void {\n        this.handleEvent('keyDown', element, event);\n    }\n\n    keyUp(element: SModelRootImpl, event: KeyboardEvent): void {\n        this.handleEvent('keyUp', element, event);\n    }\n\n    focus() {}\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (element instanceof SModelRootImpl) {\n            on(vnode, 'focus', this.focus.bind(this, element));\n            on(vnode, 'keydown', this.keyDown.bind(this, element));\n            on(vnode, 'keyup', this.keyUp.bind(this, element));\n        }\n        return vnode;\n    }\n\n    postUpdate() {\n    }\n}\n\n@injectable()\nexport class KeyListener {\n    keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        return [];\n    }\n\n    keyUp(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { isMac } from './browser';\n\n/**\n * Returns whether the keyboard event matches the keystroke described by the given\n * code and modifiers. The code must comply to the format of the `code` property\n * of KeyboardEvent, but in contrast to that property, the actual keyboard layout is\n * considered by this function if possible.\n */\nexport function matchesKeystroke(event: KeyboardEvent, code: KeyCode, ...modifiers: KeyboardModifier[]): boolean {\n    if (getActualCode(event) !== code)\n        return false;\n    if (isMac()) {\n        if (event.ctrlKey !== (modifiers.findIndex(m => m === 'ctrl') >= 0))\n            return false;\n        if (event.metaKey !== (modifiers.findIndex(m => m === 'meta' || m === 'ctrlCmd') >= 0))\n            return false;\n    } else {\n        if (event.ctrlKey !== (modifiers.findIndex(m => m === 'ctrl' || m === 'ctrlCmd') >= 0))\n            return false;\n        if (event.metaKey !== (modifiers.findIndex(m => m === 'meta') >= 0))\n            return false;\n    }\n    if (event.altKey !== (modifiers.findIndex(m => m === 'alt') >= 0))\n        return false;\n    if (event.shiftKey !== (modifiers.findIndex(m => m === 'shift') >= 0))\n        return false;\n    return true;\n}\n\nexport type KeyboardModifier = 'ctrl' | 'meta' | 'ctrlCmd' | 'alt' | 'shift';\n\nexport type KeyCode =\n    'AltLeft'|'AltRight'|'ArrowDown'|'ArrowLeft'|'ArrowRight'|'ArrowUp'|'Backslash'|'Backspace'|'Backquote'\n    |'BracketLeft'|'BracketRight'|'CapsLock'|'Comma'|'ContextMenu'|'ControlLeft'|'ControlRight'|'Convert'|'Delete'\n    |'Digit0'|'Digit1'|'Digit2'|'Digit3'|'Digit4'|'Digit5'|'Digit6'|'Digit7'|'Digit8'|'Digit9'\n    |'F1'|'F2'|'F3'|'F4'|'F5'|'F6'|'F7'|'F8'|'F9'|'F10'|'F11'|'F12'|'F13'|'F14'|'F15'|'F16'|'F17'|'F18'|'F19'|'F20'|'F21'|'F22'|'F23'|'F24'\n    |'End'|'Enter'|'Equal'|'Escape'|'Home'|'Insert'|'IntlBackslash'|'IntlRo'|'IntlYen'|'KanaMode'\n    |'KeyA'|'KeyB'|'KeyC'|'KeyD'|'KeyE'|'KeyF'|'KeyG'|'KeyH'|'KeyI'|'KeyJ'|'KeyK'|'KeyL'|'KeyM'\n    |'KeyN'|'KeyO'|'KeyP'|'KeyQ'|'KeyR'|'KeyS'|'KeyT'|'KeyU'|'KeyV'|'KeyW'|'KeyX'|'KeyY'|'KeyZ'\n    |'MetaLeft'|'MetaRight'|'Minus'|'NonConvert'|'NumLock'\n    |'Numpad0'|'Numpad1'|'Numpad2'|'Numpad3'|'Numpad4'|'Numpad5'|'Numpad6'|'Numpad7'|'Numpad8'|'Numpad9'\n    |'NumpadAdd'|'NumpadComma'|'NumpadDecimal'|'NumpadDivide'|'NumpadEnter'|'NumpadEqual'|'NumpadMultiply'\n    |'NumpadSeparator'|'NumpadSubtract'|'OSLeft'|'OSRight'|'PageDown'|'PageUp'|'Pause'|'Period'|'PrintScreen'\n    |'Quote'|'ScrollLock'|'Semicolon'|'ShiftLeft'|'ShiftRight'|'Slash'|'Space'|'Tab';\n\n/**\n * Determines a key code from the given event. This is necessary because the `code` property of\n * a KeyboardEvent does not consider keyboard layouts.\n */\nexport function getActualCode(event: KeyboardEvent): KeyCode {\n    if (event.keyCode) {\n        const result = STRING_CODE[event.keyCode];\n        if (result !== undefined)\n            return result;\n    }\n    return event.code as KeyCode;\n}\n\nconst STRING_CODE: { [keyCode: number]: KeyCode } = new Array(256);\n\n(() => {\n    function addKeyCode(stringCode: KeyCode, numericCode: number): void {\n        if (STRING_CODE[numericCode] === undefined)\n            STRING_CODE[numericCode] = stringCode;\n    }\n\n    addKeyCode('Pause', 3);\n    addKeyCode('Backspace', 8);\n    addKeyCode('Tab', 9);\n    addKeyCode('Enter', 13);\n    addKeyCode('ShiftLeft', 16);\n    addKeyCode('ShiftRight', 16);\n    addKeyCode('ControlLeft', 17);\n    addKeyCode('ControlRight', 17);\n    addKeyCode('AltLeft', 18);\n    addKeyCode('AltRight', 18);\n    addKeyCode('CapsLock', 20);\n    addKeyCode('Escape', 27);\n    addKeyCode('Space', 32);\n    addKeyCode('PageUp', 33);\n    addKeyCode('PageDown', 34);\n    addKeyCode('End', 35);\n    addKeyCode('Home', 36);\n    addKeyCode('ArrowLeft', 37);\n    addKeyCode('ArrowUp', 38);\n    addKeyCode('ArrowRight', 39);\n    addKeyCode('ArrowDown', 40);\n    addKeyCode('Insert', 45);\n    addKeyCode('Delete', 46);\n\n    addKeyCode('Digit1', 49);\n    addKeyCode('Digit2', 50);\n    addKeyCode('Digit3', 51);\n    addKeyCode('Digit4', 52);\n    addKeyCode('Digit5', 53);\n    addKeyCode('Digit6', 54);\n    addKeyCode('Digit7', 55);\n    addKeyCode('Digit8', 56);\n    addKeyCode('Digit9', 57);\n    addKeyCode('Digit0', 48);\n\n    addKeyCode('KeyA', 65);\n    addKeyCode('KeyB', 66);\n    addKeyCode('KeyC', 67);\n    addKeyCode('KeyD', 68);\n    addKeyCode('KeyE', 69);\n    addKeyCode('KeyF', 70);\n    addKeyCode('KeyG', 71);\n    addKeyCode('KeyH', 72);\n    addKeyCode('KeyI', 73);\n    addKeyCode('KeyJ', 74);\n    addKeyCode('KeyK', 75);\n    addKeyCode('KeyL', 76);\n    addKeyCode('KeyM', 77);\n    addKeyCode('KeyN', 78);\n    addKeyCode('KeyO', 79);\n    addKeyCode('KeyP', 80);\n    addKeyCode('KeyQ', 81);\n    addKeyCode('KeyR', 82);\n    addKeyCode('KeyS', 83);\n    addKeyCode('KeyT', 84);\n    addKeyCode('KeyU', 85);\n    addKeyCode('KeyV', 86);\n    addKeyCode('KeyW', 87);\n    addKeyCode('KeyX', 88);\n    addKeyCode('KeyY', 89);\n    addKeyCode('KeyZ', 90);\n\n    addKeyCode('OSLeft', 91);\n    addKeyCode('MetaLeft', 91);\n    addKeyCode('OSRight', 92);\n    addKeyCode('MetaRight', 92);\n    addKeyCode('ContextMenu', 93);\n\n    addKeyCode('Numpad0', 96);\n    addKeyCode('Numpad1', 97);\n    addKeyCode('Numpad2', 98);\n    addKeyCode('Numpad3', 99);\n    addKeyCode('Numpad4', 100);\n    addKeyCode('Numpad5', 101);\n    addKeyCode('Numpad6', 102);\n    addKeyCode('Numpad7', 103);\n    addKeyCode('Numpad8', 104);\n    addKeyCode('Numpad9', 105);\n    addKeyCode('NumpadMultiply', 106);\n    addKeyCode('NumpadAdd', 107);\n    addKeyCode('NumpadSeparator', 108);\n    addKeyCode('NumpadSubtract', 109);\n    addKeyCode('NumpadDecimal', 110);\n    addKeyCode('NumpadDivide', 111);\n\n    addKeyCode('F1', 112);\n    addKeyCode('F2', 113);\n    addKeyCode('F3', 114);\n    addKeyCode('F4', 115);\n    addKeyCode('F5', 116);\n    addKeyCode('F6', 117);\n    addKeyCode('F7', 118);\n    addKeyCode('F8', 119);\n    addKeyCode('F9', 120);\n    addKeyCode('F10', 121);\n    addKeyCode('F11', 122);\n    addKeyCode('F12', 123);\n    addKeyCode('F13', 124);\n    addKeyCode('F14', 125);\n    addKeyCode('F15', 126);\n    addKeyCode('F16', 127);\n    addKeyCode('F17', 128);\n    addKeyCode('F18', 129);\n    addKeyCode('F19', 130);\n    addKeyCode('F20', 131);\n    addKeyCode('F21', 132);\n    addKeyCode('F22', 133);\n    addKeyCode('F23', 134);\n    addKeyCode('F24', 135);\n\n    addKeyCode('NumLock', 144);\n    addKeyCode('ScrollLock', 145);\n\n    addKeyCode('Semicolon', 186);\n    addKeyCode('Equal', 187);\n    addKeyCode('Comma', 188);\n    addKeyCode('Minus', 189);\n    addKeyCode('Period', 190);\n    addKeyCode('Slash', 191);\n    addKeyCode('Backquote', 192);\n    addKeyCode('IntlRo', 193);\n    addKeyCode('BracketLeft', 219);\n    addKeyCode('Backslash', 220);\n    addKeyCode('BracketRight', 221);\n    addKeyCode('Quote', 222);\n    addKeyCode('IntlYen', 255);\n})();\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { TYPES } from \"../types\";\nimport { EnableDefaultToolsAction, EnableToolsAction, Tool } from \"./tool\";\nimport { IActionHandler } from \"../actions/action-handler\";\nimport { ICommand } from \"../commands/command\";\nimport { KeyListener } from \"../views/key-tool\";\nimport { SModelElementImpl } from \"../model/smodel\";\nimport { matchesKeystroke } from \"../../utils/keyboard\";\n\n/**\n * A tool manager coordinates the state of tools in the context of an editor.\n *\n * One instance of a tool manager is intended per editor, coordinating the state of all tools within\n * this editor. A tool can be active or not. A tool manager ensures that activating a set of tools\n * will disable all other tools, allowing them to invoke behavior when they become enabled or disabled.\n */\nexport interface IToolManager {\n\n    /** All tools managed by this tool manager. */\n    readonly managedTools: Tool[];\n\n    /** The tools that are enabled by default, whenever no other tool is enabled. */\n    readonly defaultTools: Tool[];\n\n    /** The currently active tools, which are either specifically enabled tools, or the default tools. */\n    readonly activeTools: Tool[];\n\n    /**\n     * Enables the tools with the specified `toolIds`.\n     * Therefore, this manager first disables currently active tools and then enable the\n     * tools indicated in `toolIds`, making them the currently active tools. If this manager\n     * doesn't manage one or more tools specified in `toolIds`, it'll do nothing. If not a\n     * single tool that shall be enabled was found in the managed tools, it'll fall back to\n     * the default tools.\n     *\n     * @param tools The tools to be enabled.\n     */\n    enable(toolIds: string[]): void;\n\n    /**\n     * Enables all default tools.\n     */\n    enableDefaultTools(): void;\n\n    /** Disables all currently active tools. After this call, no tool will be active anymore. */\n    disableActiveTools(): void;\n\n    registerDefaultTools(...tools: Tool[]): void;\n\n    registerTools(...tools: Tool[]): void;\n}\n\n@injectable()\nexport class ToolManager implements IToolManager {\n\n    readonly tools: Tool[] = [];\n    readonly defaultTools: Tool[] = [];\n    readonly actives: Tool[] = [];\n\n    get managedTools(): Tool[] {\n        return this.defaultTools.concat(this.tools);\n    }\n\n    get activeTools(): Tool[] {\n        return this.actives;\n    }\n\n    disableActiveTools() {\n        this.actives.forEach(tool => tool.disable());\n        this.actives.splice(0, this.actives.length);\n    }\n\n    enableDefaultTools() {\n        this.enable(this.defaultTools.map(tool => tool.id));\n    }\n\n    enable(toolIds: string[]) {\n        this.disableActiveTools();\n        const tools = toolIds.map(id => this.tool(id));\n        tools.forEach(tool => {\n            if (tool !== undefined) {\n                tool.enable();\n                this.actives.push(tool);\n            }\n        });\n    }\n\n    tool(toolId: string): Tool | undefined {\n        return this.managedTools.find(tool => tool.id === toolId);\n    }\n\n    registerDefaultTools(...tools: Tool[]) {\n        for (const tool of tools) {\n            this.defaultTools.push(tool);\n        }\n    }\n\n    registerTools(...tools: Tool[]) {\n        for (const tool of tools) {\n            this.tools.push(tool);\n        }\n    }\n}\n\n@injectable()\nexport class ToolManagerActionHandler implements IActionHandler {\n    @inject(TYPES.IToolManager)\n    readonly toolManager: IToolManager;\n\n    handle(action: Action): void | ICommand | Action {\n        switch (action.kind) {\n            case EnableDefaultToolsAction.KIND:\n                this.toolManager.enableDefaultTools();\n                break;\n            case EnableToolsAction.KIND:\n                this.toolManager.enable((action as EnableToolsAction).toolIds);\n                break;\n        }\n    }\n}\n\n@injectable()\nexport class DefaultToolsEnablingKeyListener extends KeyListener {\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'Escape')) {\n            return [EnableDefaultToolsAction.create()];\n        }\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { InstanceRegistry } from \"../../utils/registry\";\nimport { CommandExecutionContext, SystemCommand, CommandReturn } from \"../commands/command\";\nimport { TYPES } from \"../types\";\nimport { IUIExtension } from \"./ui-extension\";\n\n/**\n * The registry maintaining UI extensions registered via `TYPES.IUIExtension`.\n */\n@injectable()\nexport class UIExtensionRegistry extends InstanceRegistry<IUIExtension>  {\n    constructor(@multiInject(TYPES.IUIExtension) @optional() extensions: (IUIExtension)[] = []) {\n        super();\n        extensions.forEach((extension) => this.register(extension.id(), extension));\n    }\n}\n\n/**\n * Action to set the visibility state of the UI extension with the specified `id`.\n */\nexport interface SetUIExtensionVisibilityAction extends Action {\n    kind: typeof SetUIExtensionVisibilityAction.KIND;\n    extensionId: string\n    visible: boolean\n    contextElementsId: string[]\n}\nexport namespace SetUIExtensionVisibilityAction {\n    export const KIND = \"setUIExtensionVisibility\";\n\n    export function create(options: { extensionId: string, visible: boolean, contextElementsId?: string[] }): SetUIExtensionVisibilityAction {\n        return {\n            kind: KIND,\n            extensionId: options.extensionId,\n            visible: options.visible,\n            contextElementsId: options.contextElementsId ?? []\n        };\n    }\n}\n\n@injectable()\nexport class SetUIExtensionVisibilityCommand extends SystemCommand {\n    static readonly KIND = SetUIExtensionVisibilityAction.KIND;\n\n    @inject(TYPES.UIExtensionRegistry) protected readonly registry: UIExtensionRegistry;\n\n    constructor(@inject(TYPES.Action) protected readonly action: SetUIExtensionVisibilityAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const extension = this.registry.get(this.action.extensionId);\n        if (extension) {\n            this.action.visible ? extension.show(context.root, ...this.action.contextElementsId) : extension.hide();\n        }\n        return { model: context.root, modelChanged: false };\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return { model: context.root, modelChanged: false };\n    }\n    redo(context: CommandExecutionContext): CommandReturn {\n        return { model: context.root, modelChanged: false };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable } from \"inversify\";\nimport { hasOwnProperty } from \"sprotty-protocol\";\nimport { ILogger } from \"../../utils/logging\";\nimport { SModelRootImpl } from \"../model/smodel\";\nimport { TYPES } from \"../types\";\nimport { ViewerOptions } from \"../views/viewer-options\";\n\n/**\n * A UI extension displaying additional UI elements on top of a sprotty diagram.\n */\nexport interface IUIExtension {\n    id(): string;\n    show(root: Readonly<SModelRootImpl>, ...contextElementIds: string[]): void;\n    hide(): void;\n    enableOnStartup?: boolean\n}\n\nexport function isUIExtension(object: unknown): object is IUIExtension {\n    return hasOwnProperty<string, Function>(object, 'id', 'function')\n    && hasOwnProperty<string, Function>(object, 'show', 'function')\n    && hasOwnProperty<string, Function>(object, 'hide', 'function');\n}\n\n/**\n * Abstract base class for UI extensions.\n */\n@injectable()\nexport abstract class AbstractUIExtension implements IUIExtension {\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    protected containerElement: HTMLElement;\n    protected activeElement: Element | null;\n\n    abstract id(): string;\n    abstract containerClass(): string;\n\n    show(root: Readonly<SModelRootImpl>, ...contextElementIds: string[]): void {\n        this.activeElement = document.activeElement;\n        if (!this.containerElement) {\n            if (!this.initialize()) return;\n        }\n        this.onBeforeShow(this.containerElement, root, ...contextElementIds);\n        this.setContainerVisible(true);\n    }\n\n    hide(): void {\n        this.setContainerVisible(false);\n        this.restoreFocus();\n        this.activeElement = null;\n    }\n\n    protected restoreFocus() {\n        const focusedElement = this.activeElement as HTMLElement;\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n    }\n\n    protected initialize(): boolean {\n        const baseDiv = document.getElementById(this.options.baseDiv);\n        if (!baseDiv) {\n            this.logger.warn(this, `Could not obtain sprotty base container for initializing UI extension ${this.id}`, this);\n            return false;\n        }\n        this.containerElement = this.getOrCreateContainer(baseDiv.id);\n        this.initializeContents(this.containerElement);\n        if (baseDiv) {\n            baseDiv.insertBefore(this.containerElement, baseDiv.firstChild);\n        }\n        return true;\n    }\n\n    protected getOrCreateContainer(baseDivId: string): HTMLElement {\n        let container = document.getElementById(this.id());\n        if (container === null) {\n            container = document.createElement('div');\n            container.id = baseDivId + \"_\" + this.id();\n            container.classList.add(this.containerClass());\n        }\n        return container;\n    }\n\n    protected setContainerVisible(visible: boolean) {\n        if (this.containerElement) {\n            if (visible) {\n                this.containerElement.style.visibility = 'visible';\n                this.containerElement.style.opacity = '1';\n            } else {\n                this.containerElement.style.visibility = 'hidden';\n                this.containerElement.style.opacity = '0';\n            }\n        }\n    }\n\n    /**\n     * Updates the `containerElement` under the given `context` before it becomes visible.\n     *\n     * Subclasses may override this method to, for instance, modifying the position of the\n     * `containerElement`, add or remove elements, etc. depending on the specified `root`\n     * or `contextElementIds`.\n     */\n    protected onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRootImpl>, ...contextElementIds: string[]): void {\n        // default: do nothing\n    }\n\n    /**\n     * Initializes the contents of this UI extension.\n     *\n     * Subclasses must implement this method to initialize the UI elements of this UI extension inside the specified `containerElement`.\n     */\n    protected abstract initializeContents(containerElement: HTMLElement): void;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { ViewerOptions } from \"./viewer-options\";\nimport { TYPES } from \"../types\";\nimport { SModelElementImpl } from \"../model/smodel\";\n\n@injectable()\nexport class DOMHelper {\n\n    @inject(TYPES.ViewerOptions) private viewerOptions: ViewerOptions;\n\n    private getPrefix() {\n        const prefix = this.viewerOptions !== undefined && this.viewerOptions.baseDiv !== undefined ?\n            this.viewerOptions.baseDiv + \"_\" : \"\";\n        return prefix;\n    }\n\n    createUniqueDOMElementId(element: SModelElementImpl): string {\n        return this.getPrefix() + element.id;\n    }\n\n    findSModelIdByDOMElement(element: Element): string {\n        return element.id.replace(this.getPrefix(), '');\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action, isAction } from \"sprotty-protocol/lib/actions\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\nimport { SModelElementImpl, SModelRootImpl } from \"../model/smodel\";\nimport { TYPES } from \"../types\";\nimport { DOMHelper } from \"./dom-helper\";\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\nimport { on } from \"./vnode-utils\";\n\n@injectable()\nexport class MouseTool implements IVNodePostprocessor {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\n\n    constructor(@multiInject(TYPES.MouseListener) @optional() protected mouseListeners: MouseListener[] = []) { }\n\n    register(mouseListener: MouseListener) {\n        this.mouseListeners.push(mouseListener);\n    }\n\n    deregister(mouseListener: MouseListener) {\n        const index = this.mouseListeners.indexOf(mouseListener);\n        if (index >= 0)\n            this.mouseListeners.splice(index, 1);\n    }\n\n    protected getTargetElement(model: SModelRootImpl, event: MouseEvent): SModelElementImpl | undefined {\n        let target = event.target as Element;\n        const index = model.index;\n        while (target) {\n            if (target.id) {\n                const element = index.getById(this.domHelper.findSModelIdByDOMElement(target));\n                if (element !== undefined)\n                    return element;\n            }\n            target = target.parentNode as Element;\n        }\n        return undefined;\n    }\n\n    protected handleEvent(methodName: MouseEventKind, model: SModelRootImpl, event: MouseEvent) {\n        this.focusOnMouseEvent(methodName, model);\n        const element = this.getTargetElement(model, event);\n        if (!element)\n            return;\n        const actions = this.mouseListeners\n            .map(listener => listener[methodName](element, event as WheelEvent))\n            .reduce((a, b) => a.concat(b));\n        if (actions.length > 0) {\n            event.preventDefault();\n            for (const actionOrPromise of actions) {\n                if (isAction(actionOrPromise)) {\n                    this.actionDispatcher.dispatch(actionOrPromise);\n                } else {\n                    actionOrPromise.then((action: Action) => {\n                        this.actionDispatcher.dispatch(action);\n                    });\n                }\n            }\n        }\n    }\n\n    protected focusOnMouseEvent<K extends keyof MouseListener>(methodName: K, model: SModelRootImpl) {\n        if (document && methodName === 'mouseDown') {\n            const domElement = document.getElementById(this.domHelper.createUniqueDOMElementId(model));\n            if (domElement !== null && typeof domElement.focus === 'function')\n                domElement.focus();\n        }\n    }\n\n    mouseOver(model: SModelRootImpl, event: MouseEvent) {\n        this.handleEvent('mouseOver', model, event);\n    }\n\n    mouseOut(model: SModelRootImpl, event: MouseEvent) {\n        this.handleEvent('mouseOut', model, event);\n    }\n\n    mouseEnter(model: SModelRootImpl, event: MouseEvent) {\n        this.handleEvent('mouseEnter', model, event);\n    }\n\n    mouseLeave(model: SModelRootImpl, event: MouseEvent) {\n        this.handleEvent('mouseLeave', model, event);\n    }\n\n    mouseDown(model: SModelRootImpl, event: MouseEvent) {\n        this.handleEvent('mouseDown', model, event);\n    }\n\n    mouseMove(model: SModelRootImpl, event: MouseEvent) {\n        this.handleEvent('mouseMove', model, event);\n    }\n\n    mouseUp(model: SModelRootImpl, event: MouseEvent) {\n        this.handleEvent('mouseUp', model, event);\n    }\n\n    wheel(model: SModelRootImpl, event: WheelEvent) {\n        this.handleEvent('wheel', model, event);\n    }\n\n    contextMenu(model: SModelRootImpl, event: MouseEvent) {\n        event.preventDefault();\n        this.handleEvent('contextMenu', model, event);\n    }\n\n    doubleClick(model: SModelRootImpl, event: MouseEvent) {\n        this.handleEvent('doubleClick', model, event);\n    }\n\n    decorate(vnode: VNode, element: SModelElementImpl) {\n        if (element instanceof SModelRootImpl) {\n            on(vnode, 'mouseover', this.mouseOver.bind(this, element));\n            on(vnode, 'mouseout', this.mouseOut.bind(this, element));\n            on(vnode, 'mouseenter', this.mouseEnter.bind(this, element));\n            on(vnode, 'mouseleave', this.mouseLeave.bind(this, element));\n            on(vnode, 'mousedown', this.mouseDown.bind(this, element));\n            on(vnode, 'mouseup', this.mouseUp.bind(this, element));\n            on(vnode, 'mousemove', this.mouseMove.bind(this, element));\n            on(vnode, 'wheel', this.wheel.bind(this, element));\n            on(vnode, 'contextmenu', this.contextMenu.bind(this, element));\n            on(vnode, 'dblclick', this.doubleClick.bind(this, element));\n            on(vnode, 'dragover', (event: MouseEvent) => this.handleEvent('dragOver', element, event));\n            on(vnode, 'drop', (event: MouseEvent) => this.handleEvent('drop', element, event));\n        }\n        vnode = this.mouseListeners.reduce(\n            (n: VNode, listener: MouseListener) => listener.decorate(n, element),\n            vnode);\n        return vnode;\n    }\n\n    postUpdate() {\n    }\n}\n\n@injectable()\nexport class PopupMouseTool extends MouseTool {\n    constructor(@multiInject(TYPES.PopupMouseListener) @optional() protected override mouseListeners: MouseListener[] = []) {\n        super(mouseListeners);\n    }\n}\n\nexport type MouseEventKind =\n    'mouseOver' | 'mouseOut' | 'mouseEnter' | 'mouseLeave' | 'mouseDown' | 'mouseMove' | 'mouseUp'\n    | 'wheel' | 'doubleClick' | 'contextMenu' | 'dragOver' | 'drop';\n\n@injectable()\nexport class MouseListener {\n\n    mouseOver(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseOut(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseEnter(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseLeave(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseMove(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    mouseUp(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    wheel(target: SModelElementImpl, event: WheelEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    doubleClick(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    contextMenu(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    dragOver(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    drop(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [];\n    }\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        return vnode;\n    }\n}\n\n@injectable()\nexport class MousePositionTracker extends MouseListener {\n\n    protected lastPosition: Point | undefined;\n\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.lastPosition = target.root.parentToLocal({ x: event.offsetX, y: event.offsetY });\n        return [];\n    }\n\n    /**\n     * Returns the last tracked mouse cursor position relative to the diagram root or `undefined`\n     * if no mouse cursor position was ever tracked yet.\n     */\n    get lastPositionOnDiagram(): Point | undefined {\n        return this.lastPosition;\n    }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction createElement(tagName, options) {\n    return document.createElement(tagName, options);\n}\nfunction createElementNS(namespaceURI, qualifiedName, options) {\n    return document.createElementNS(namespaceURI, qualifiedName, options);\n}\nfunction createDocumentFragment() {\n    return parseFragment(document.createDocumentFragment());\n}\nfunction createTextNode(text) {\n    return document.createTextNode(text);\n}\nfunction createComment(text) {\n    return document.createComment(text);\n}\nfunction insertBefore(parentNode, newNode, referenceNode) {\n    if (isDocumentFragment$1(parentNode)) {\n        let node = parentNode;\n        while (node && isDocumentFragment$1(node)) {\n            const fragment = parseFragment(node);\n            node = fragment.parent;\n        }\n        parentNode = node !== null && node !== void 0 ? node : parentNode;\n    }\n    if (isDocumentFragment$1(newNode)) {\n        newNode = parseFragment(newNode, parentNode);\n    }\n    if (referenceNode && isDocumentFragment$1(referenceNode)) {\n        referenceNode = parseFragment(referenceNode).firstChildNode;\n    }\n    parentNode.insertBefore(newNode, referenceNode);\n}\nfunction removeChild(node, child) {\n    node.removeChild(child);\n}\nfunction appendChild(node, child) {\n    if (isDocumentFragment$1(child)) {\n        child = parseFragment(child, node);\n    }\n    node.appendChild(child);\n}\nfunction parentNode(node) {\n    if (isDocumentFragment$1(node)) {\n        while (node && isDocumentFragment$1(node)) {\n            const fragment = parseFragment(node);\n            node = fragment.parent;\n        }\n        return node !== null && node !== void 0 ? node : null;\n    }\n    return node.parentNode;\n}\nfunction nextSibling(node) {\n    var _a;\n    if (isDocumentFragment$1(node)) {\n        const fragment = parseFragment(node);\n        const parent = parentNode(fragment);\n        if (parent && fragment.lastChildNode) {\n            const children = Array.from(parent.childNodes);\n            const index = children.indexOf(fragment.lastChildNode);\n            return (_a = children[index + 1]) !== null && _a !== void 0 ? _a : null;\n        }\n        return null;\n    }\n    return node.nextSibling;\n}\nfunction tagName(elm) {\n    return elm.tagName;\n}\nfunction setTextContent(node, text) {\n    node.textContent = text;\n}\nfunction getTextContent(node) {\n    return node.textContent;\n}\nfunction isElement$1(node) {\n    return node.nodeType === 1;\n}\nfunction isText(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nfunction isDocumentFragment$1(node) {\n    return node.nodeType === 11;\n}\nfunction parseFragment(fragmentNode, parentNode) {\n    var _a, _b, _c;\n    const fragment = fragmentNode;\n    (_a = fragment.parent) !== null && _a !== void 0 ? _a : (fragment.parent = parentNode !== null && parentNode !== void 0 ? parentNode : null);\n    (_b = fragment.firstChildNode) !== null && _b !== void 0 ? _b : (fragment.firstChildNode = fragmentNode.firstChild);\n    (_c = fragment.lastChildNode) !== null && _c !== void 0 ? _c : (fragment.lastChildNode = fragmentNode.lastChild);\n    return fragment;\n}\nconst htmlDomApi = {\n    createElement,\n    createElementNS,\n    createTextNode,\n    createDocumentFragment,\n    createComment,\n    insertBefore,\n    removeChild,\n    appendChild,\n    parentNode,\n    nextSibling,\n    tagName,\n    setTextContent,\n    getTextContent,\n    isElement: isElement$1,\n    isText,\n    isComment,\n    isDocumentFragment: isDocumentFragment$1,\n};\n\nfunction vnode(sel, data, children, text, elm) {\n    const key = data === undefined ? undefined : data.key;\n    return { sel, data, children, text, elm, key };\n}\n\nconst array = Array.isArray;\nfunction primitive(s) {\n    return (typeof s === \"string\" ||\n        typeof s === \"number\" ||\n        s instanceof String ||\n        s instanceof Number);\n}\n\nfunction isUndef(s) {\n    return s === undefined;\n}\nfunction isDef(s) {\n    return s !== undefined;\n}\nconst emptyNode = vnode(\"\", {}, [], undefined, undefined);\nfunction sameVnode(vnode1, vnode2) {\n    var _a, _b;\n    const isSameKey = vnode1.key === vnode2.key;\n    const isSameIs = ((_a = vnode1.data) === null || _a === void 0 ? void 0 : _a.is) === ((_b = vnode2.data) === null || _b === void 0 ? void 0 : _b.is);\n    const isSameSel = vnode1.sel === vnode2.sel;\n    const isSameTextOrFragment = !vnode1.sel && vnode1.sel === vnode2.sel\n        ? typeof vnode1.text === typeof vnode2.text\n        : true;\n    return isSameSel && isSameKey && isSameIs && isSameTextOrFragment;\n}\n/**\n * @todo Remove this function when the document fragment is considered stable.\n */\nfunction documentFragmentIsNotSupported() {\n    throw new Error(\"The document fragment is not supported on this platform.\");\n}\nfunction isElement(api, vnode) {\n    return api.isElement(vnode);\n}\nfunction isDocumentFragment(api, vnode) {\n    return api.isDocumentFragment(vnode);\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var _a;\n    const map = {};\n    for (let i = beginIdx; i <= endIdx; ++i) {\n        const key = (_a = children[i]) === null || _a === void 0 ? void 0 : _a.key;\n        if (key !== undefined) {\n            map[key] = i;\n        }\n    }\n    return map;\n}\nconst hooks = [\n    \"create\",\n    \"update\",\n    \"remove\",\n    \"destroy\",\n    \"pre\",\n    \"post\",\n];\nfunction init$1(modules, domApi, options) {\n    const cbs = {\n        create: [],\n        update: [],\n        remove: [],\n        destroy: [],\n        pre: [],\n        post: [],\n    };\n    const api = domApi !== undefined ? domApi : htmlDomApi;\n    for (const hook of hooks) {\n        for (const module of modules) {\n            const currentHook = module[hook];\n            if (currentHook !== undefined) {\n                cbs[hook].push(currentHook);\n            }\n        }\n    }\n    function emptyNodeAt(elm) {\n        const id = elm.id ? \"#\" + elm.id : \"\";\n        // elm.className doesn't return a string when elm is an SVG element inside a shadowRoot.\n        // https://stackoverflow.com/questions/29454340/detecting-classname-of-svganimatedstring\n        const classes = elm.getAttribute(\"class\");\n        const c = classes ? \".\" + classes.split(\" \").join(\".\") : \"\";\n        return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\n    }\n    function emptyDocumentFragmentAt(frag) {\n        return vnode(undefined, {}, [], undefined, frag);\n    }\n    function createRmCb(childElm, listeners) {\n        return function rmCb() {\n            if (--listeners === 0) {\n                const parent = api.parentNode(childElm);\n                api.removeChild(parent, childElm);\n            }\n        };\n    }\n    function createElm(vnode, insertedVnodeQueue) {\n        var _a, _b, _c, _d;\n        let i;\n        let data = vnode.data;\n        if (data !== undefined) {\n            const init = (_a = data.hook) === null || _a === void 0 ? void 0 : _a.init;\n            if (isDef(init)) {\n                init(vnode);\n                data = vnode.data;\n            }\n        }\n        const children = vnode.children;\n        const sel = vnode.sel;\n        if (sel === \"!\") {\n            if (isUndef(vnode.text)) {\n                vnode.text = \"\";\n            }\n            vnode.elm = api.createComment(vnode.text);\n        }\n        else if (sel !== undefined) {\n            // Parse selector\n            const hashIdx = sel.indexOf(\"#\");\n            const dotIdx = sel.indexOf(\".\", hashIdx);\n            const hash = hashIdx > 0 ? hashIdx : sel.length;\n            const dot = dotIdx > 0 ? dotIdx : sel.length;\n            const tag = hashIdx !== -1 || dotIdx !== -1\n                ? sel.slice(0, Math.min(hash, dot))\n                : sel;\n            const elm = (vnode.elm =\n                isDef(data) && isDef((i = data.ns))\n                    ? api.createElementNS(i, tag, data)\n                    : api.createElement(tag, data));\n            if (hash < dot)\n                elm.setAttribute(\"id\", sel.slice(hash + 1, dot));\n            if (dotIdx > 0)\n                elm.setAttribute(\"class\", sel.slice(dot + 1).replace(/\\./g, \" \"));\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            if (array(children)) {\n                for (i = 0; i < children.length; ++i) {\n                    const ch = children[i];\n                    if (ch != null) {\n                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));\n                    }\n                }\n            }\n            else if (primitive(vnode.text)) {\n                api.appendChild(elm, api.createTextNode(vnode.text));\n            }\n            const hook = vnode.data.hook;\n            if (isDef(hook)) {\n                (_b = hook.create) === null || _b === void 0 ? void 0 : _b.call(hook, emptyNode, vnode);\n                if (hook.insert) {\n                    insertedVnodeQueue.push(vnode);\n                }\n            }\n        }\n        else if (((_c = options === null || options === void 0 ? void 0 : options.experimental) === null || _c === void 0 ? void 0 : _c.fragments) && vnode.children) {\n            vnode.elm = ((_d = api.createDocumentFragment) !== null && _d !== void 0 ? _d : documentFragmentIsNotSupported)();\n            for (i = 0; i < cbs.create.length; ++i)\n                cbs.create[i](emptyNode, vnode);\n            for (i = 0; i < vnode.children.length; ++i) {\n                const ch = vnode.children[i];\n                if (ch != null) {\n                    api.appendChild(vnode.elm, createElm(ch, insertedVnodeQueue));\n                }\n            }\n        }\n        else {\n            vnode.elm = api.createTextNode(vnode.text);\n        }\n        return vnode.elm;\n    }\n    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n        for (; startIdx <= endIdx; ++startIdx) {\n            const ch = vnodes[startIdx];\n            if (ch != null) {\n                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n            }\n        }\n    }\n    function invokeDestroyHook(vnode) {\n        var _a, _b;\n        const data = vnode.data;\n        if (data !== undefined) {\n            (_b = (_a = data === null || data === void 0 ? void 0 : data.hook) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a, vnode);\n            for (let i = 0; i < cbs.destroy.length; ++i)\n                cbs.destroy[i](vnode);\n            if (vnode.children !== undefined) {\n                for (let j = 0; j < vnode.children.length; ++j) {\n                    const child = vnode.children[j];\n                    if (child != null && typeof child !== \"string\") {\n                        invokeDestroyHook(child);\n                    }\n                }\n            }\n        }\n    }\n    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n        var _a, _b;\n        for (; startIdx <= endIdx; ++startIdx) {\n            let listeners;\n            let rm;\n            const ch = vnodes[startIdx];\n            if (ch != null) {\n                if (isDef(ch.sel)) {\n                    invokeDestroyHook(ch);\n                    listeners = cbs.remove.length + 1;\n                    rm = createRmCb(ch.elm, listeners);\n                    for (let i = 0; i < cbs.remove.length; ++i)\n                        cbs.remove[i](ch, rm);\n                    const removeHook = (_b = (_a = ch === null || ch === void 0 ? void 0 : ch.data) === null || _a === void 0 ? void 0 : _a.hook) === null || _b === void 0 ? void 0 : _b.remove;\n                    if (isDef(removeHook)) {\n                        removeHook(ch, rm);\n                    }\n                    else {\n                        rm();\n                    }\n                }\n                else if (ch.children) {\n                    // Fragment node\n                    invokeDestroyHook(ch);\n                    removeVnodes(parentElm, ch.children, 0, ch.children.length - 1);\n                }\n                else {\n                    // Text node\n                    api.removeChild(parentElm, ch.elm);\n                }\n            }\n        }\n    }\n    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n        let oldStartIdx = 0;\n        let newStartIdx = 0;\n        let oldEndIdx = oldCh.length - 1;\n        let oldStartVnode = oldCh[0];\n        let oldEndVnode = oldCh[oldEndIdx];\n        let newEndIdx = newCh.length - 1;\n        let newStartVnode = newCh[0];\n        let newEndVnode = newCh[newEndIdx];\n        let oldKeyToIdx;\n        let idxInOld;\n        let elmToMove;\n        let before;\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n            if (oldStartVnode == null) {\n                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n            }\n            else if (oldEndVnode == null) {\n                oldEndVnode = oldCh[--oldEndIdx];\n            }\n            else if (newStartVnode == null) {\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (newEndVnode == null) {\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newStartVnode)) {\n                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n                oldStartVnode = oldCh[++oldStartIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else if (sameVnode(oldEndVnode, newEndVnode)) {\n                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldStartVnode, newEndVnode)) {\n                // Vnode moved right\n                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n                oldStartVnode = oldCh[++oldStartIdx];\n                newEndVnode = newCh[--newEndIdx];\n            }\n            else if (sameVnode(oldEndVnode, newStartVnode)) {\n                // Vnode moved left\n                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n                oldEndVnode = oldCh[--oldEndIdx];\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                if (oldKeyToIdx === undefined) {\n                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n                }\n                idxInOld = oldKeyToIdx[newStartVnode.key];\n                if (isUndef(idxInOld)) {\n                    // New element\n                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                }\n                else {\n                    elmToMove = oldCh[idxInOld];\n                    if (elmToMove.sel !== newStartVnode.sel) {\n                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n                    }\n                    else {\n                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n                        oldCh[idxInOld] = undefined;\n                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                    }\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n        }\n        if (newStartIdx <= newEndIdx) {\n            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n        }\n        if (oldStartIdx <= oldEndIdx) {\n            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n        }\n    }\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const hook = (_a = vnode.data) === null || _a === void 0 ? void 0 : _a.hook;\n        (_b = hook === null || hook === void 0 ? void 0 : hook.prepatch) === null || _b === void 0 ? void 0 : _b.call(hook, oldVnode, vnode);\n        const elm = (vnode.elm = oldVnode.elm);\n        if (oldVnode === vnode)\n            return;\n        if (vnode.data !== undefined ||\n            (isDef(vnode.text) && vnode.text !== oldVnode.text)) {\n            (_c = vnode.data) !== null && _c !== void 0 ? _c : (vnode.data = {});\n            (_d = oldVnode.data) !== null && _d !== void 0 ? _d : (oldVnode.data = {});\n            for (let i = 0; i < cbs.update.length; ++i)\n                cbs.update[i](oldVnode, vnode);\n            (_g = (_f = (_e = vnode.data) === null || _e === void 0 ? void 0 : _e.hook) === null || _f === void 0 ? void 0 : _f.update) === null || _g === void 0 ? void 0 : _g.call(_f, oldVnode, vnode);\n        }\n        const oldCh = oldVnode.children;\n        const ch = vnode.children;\n        if (isUndef(vnode.text)) {\n            if (isDef(oldCh) && isDef(ch)) {\n                if (oldCh !== ch)\n                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n            }\n            else if (isDef(ch)) {\n                if (isDef(oldVnode.text))\n                    api.setTextContent(elm, \"\");\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n            }\n            else if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            else if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, \"\");\n            }\n        }\n        else if (oldVnode.text !== vnode.text) {\n            if (isDef(oldCh)) {\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n            }\n            api.setTextContent(elm, vnode.text);\n        }\n        (_h = hook === null || hook === void 0 ? void 0 : hook.postpatch) === null || _h === void 0 ? void 0 : _h.call(hook, oldVnode, vnode);\n    }\n    return function patch(oldVnode, vnode) {\n        let i, elm, parent;\n        const insertedVnodeQueue = [];\n        for (i = 0; i < cbs.pre.length; ++i)\n            cbs.pre[i]();\n        if (isElement(api, oldVnode)) {\n            oldVnode = emptyNodeAt(oldVnode);\n        }\n        else if (isDocumentFragment(api, oldVnode)) {\n            oldVnode = emptyDocumentFragmentAt(oldVnode);\n        }\n        if (sameVnode(oldVnode, vnode)) {\n            patchVnode(oldVnode, vnode, insertedVnodeQueue);\n        }\n        else {\n            elm = oldVnode.elm;\n            parent = api.parentNode(elm);\n            createElm(vnode, insertedVnodeQueue);\n            if (parent !== null) {\n                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n                removeVnodes(parent, [oldVnode], 0, 0);\n            }\n        }\n        for (i = 0; i < insertedVnodeQueue.length; ++i) {\n            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n        }\n        for (i = 0; i < cbs.post.length; ++i)\n            cbs.post[i]();\n        return vnode;\n    };\n}\n\nfunction addNS(data, children, sel) {\n    data.ns = \"http://www.w3.org/2000/svg\";\n    if (sel !== \"foreignObject\" && children !== undefined) {\n        for (let i = 0; i < children.length; ++i) {\n            const child = children[i];\n            if (typeof child === \"string\")\n                continue;\n            const childData = child.data;\n            if (childData !== undefined) {\n                addNS(childData, child.children, child.sel);\n            }\n        }\n    }\n}\nfunction h(sel, b, c) {\n    let data = {};\n    let children;\n    let text;\n    let i;\n    if (c !== undefined) {\n        if (b !== null) {\n            data = b;\n        }\n        if (array(c)) {\n            children = c;\n        }\n        else if (primitive(c)) {\n            text = c.toString();\n        }\n        else if (c && c.sel) {\n            children = [c];\n        }\n    }\n    else if (b !== undefined && b !== null) {\n        if (array(b)) {\n            children = b;\n        }\n        else if (primitive(b)) {\n            text = b.toString();\n        }\n        else if (b && b.sel) {\n            children = [b];\n        }\n        else {\n            data = b;\n        }\n    }\n    if (children !== undefined) {\n        for (i = 0; i < children.length; ++i) {\n            if (primitive(children[i]))\n                children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n        }\n    }\n    if (sel[0] === \"s\" &&\n        sel[1] === \"v\" &&\n        sel[2] === \"g\" &&\n        (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")) {\n        addNS(data, children, sel);\n    }\n    return vnode(sel, data, children, text, undefined);\n}\n/**\n * @experimental\n */\nfunction fragment(children) {\n    let c;\n    let text;\n    if (array(children)) {\n        c = children;\n    }\n    else if (primitive(c)) {\n        text = children;\n    }\n    else if (c && c.sel) {\n        c = [children];\n    }\n    if (c !== undefined) {\n        for (let i = 0; i < c.length; ++i) {\n            if (primitive(c[i]))\n                c[i] = vnode(undefined, undefined, undefined, c[i], undefined);\n        }\n    }\n    return vnode(undefined, {}, c, text, undefined);\n}\n\nfunction copyToThunk(vnode, thunk) {\n    var _a;\n    const ns = (_a = thunk.data) === null || _a === void 0 ? void 0 : _a.ns;\n    vnode.data.fn = thunk.data.fn;\n    vnode.data.args = thunk.data.args;\n    thunk.data = vnode.data;\n    thunk.children = vnode.children;\n    thunk.text = vnode.text;\n    thunk.elm = vnode.elm;\n    if (ns)\n        addNS(thunk.data, thunk.children, thunk.sel);\n}\nfunction init(thunk) {\n    const cur = thunk.data;\n    const vnode = cur.fn(...cur.args);\n    copyToThunk(vnode, thunk);\n}\nfunction prepatch(oldVnode, thunk) {\n    let i;\n    const old = oldVnode.data;\n    const cur = thunk.data;\n    const oldArgs = old.args;\n    const args = cur.args;\n    if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n        copyToThunk(cur.fn(...args), thunk);\n        return;\n    }\n    for (i = 0; i < args.length; ++i) {\n        if (oldArgs[i] !== args[i]) {\n            copyToThunk(cur.fn(...args), thunk);\n            return;\n        }\n    }\n    copyToThunk(oldVnode, thunk);\n}\nconst thunk = function thunk(sel, key, fn, args) {\n    if (args === undefined) {\n        args = fn;\n        fn = key;\n        key = undefined;\n    }\n    return h(sel, {\n        key: key,\n        hook: { init, prepatch },\n        fn: fn,\n        args: args,\n    });\n};\n\nfunction pre(vnode, newVnode) {\n    const attachData = vnode.data.attachData;\n    // Copy created placeholder and real element from old vnode\n    newVnode.data.attachData.placeholder = attachData.placeholder;\n    newVnode.data.attachData.real = attachData.real;\n    // Mount real element in vnode so the patch process operates on it\n    vnode.elm = vnode.data.attachData.real;\n}\nfunction post(_, vnode) {\n    // Mount dummy placeholder in vnode so potential reorders use it\n    vnode.elm = vnode.data.attachData.placeholder;\n}\nfunction destroy(vnode) {\n    // Remove placeholder\n    if (vnode.elm !== undefined) {\n        vnode.elm.parentNode.removeChild(vnode.elm);\n    }\n    // Remove real element from where it was inserted\n    vnode.elm = vnode.data.attachData.real;\n}\nfunction create(_, vnode) {\n    const real = vnode.elm;\n    const attachData = vnode.data.attachData;\n    const placeholder = document.createElement(\"span\");\n    // Replace actual element with dummy placeholder\n    // Snabbdom will then insert placeholder instead\n    vnode.elm = placeholder;\n    attachData.target.appendChild(real);\n    attachData.real = real;\n    attachData.placeholder = placeholder;\n}\nfunction attachTo(target, vnode) {\n    if (vnode.data === undefined)\n        vnode.data = {};\n    if (vnode.data.hook === undefined)\n        vnode.data.hook = {};\n    const data = vnode.data;\n    const hook = vnode.data.hook;\n    data.attachData = { target: target, placeholder: undefined, real: undefined };\n    hook.create = create;\n    hook.prepatch = pre;\n    hook.postpatch = post;\n    hook.destroy = destroy;\n    return vnode;\n}\n\nfunction toVNode(node, domApi) {\n    const api = domApi !== undefined ? domApi : htmlDomApi;\n    let text;\n    if (api.isElement(node)) {\n        const id = node.id ? \"#\" + node.id : \"\";\n        const cn = node.getAttribute(\"class\");\n        const c = cn ? \".\" + cn.split(\" \").join(\".\") : \"\";\n        const sel = api.tagName(node).toLowerCase() + id + c;\n        const attrs = {};\n        const dataset = {};\n        const data = {};\n        const children = [];\n        let name;\n        let i, n;\n        const elmAttrs = node.attributes;\n        const elmChildren = node.childNodes;\n        for (i = 0, n = elmAttrs.length; i < n; i++) {\n            name = elmAttrs[i].nodeName;\n            if (name[0] === \"d\" &&\n                name[1] === \"a\" &&\n                name[2] === \"t\" &&\n                name[3] === \"a\" &&\n                name[4] === \"-\") {\n                dataset[name.slice(5)] = elmAttrs[i].nodeValue || \"\";\n            }\n            else if (name !== \"id\" && name !== \"class\") {\n                attrs[name] = elmAttrs[i].nodeValue;\n            }\n        }\n        for (i = 0, n = elmChildren.length; i < n; i++) {\n            children.push(toVNode(elmChildren[i], domApi));\n        }\n        if (Object.keys(attrs).length > 0)\n            data.attrs = attrs;\n        if (Object.keys(dataset).length > 0)\n            data.dataset = dataset;\n        if (sel[0] === \"s\" &&\n            sel[1] === \"v\" &&\n            sel[2] === \"g\" &&\n            (sel.length === 3 || sel[3] === \".\" || sel[3] === \"#\")) {\n            addNS(data, children, sel);\n        }\n        return vnode(sel, data, children, undefined, node);\n    }\n    else if (api.isText(node)) {\n        text = api.getTextContent(node);\n        return vnode(undefined, undefined, undefined, text, node);\n    }\n    else if (api.isComment(node)) {\n        text = api.getTextContent(node);\n        return vnode(\"!\", {}, [], text, node);\n    }\n    else {\n        return vnode(\"\", {}, [], undefined, node);\n    }\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nconst xmlNS = \"http://www.w3.org/XML/1998/namespace\";\nconst colonChar = 58;\nconst xChar = 120;\nfunction updateAttrs(oldVnode, vnode) {\n    let key;\n    const elm = vnode.elm;\n    let oldAttrs = oldVnode.data.attrs;\n    let attrs = vnode.data.attrs;\n    if (!oldAttrs && !attrs)\n        return;\n    if (oldAttrs === attrs)\n        return;\n    oldAttrs = oldAttrs || {};\n    attrs = attrs || {};\n    // update modified attributes, add new attributes\n    for (key in attrs) {\n        const cur = attrs[key];\n        const old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, \"\");\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    // Assume xml namespace\n                    elm.setAttributeNS(xmlNS, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    // Assume xlink namespace\n                    elm.setAttributeNS(xlinkNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    // remove removed attributes\n    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)\n    // the other option is to remove all attributes with value == undefined\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nconst attributesModule = {\n    create: updateAttrs,\n    update: updateAttrs,\n};\n\nfunction updateClass(oldVnode, vnode) {\n    let cur;\n    let name;\n    const elm = vnode.elm;\n    let oldClass = oldVnode.data.class;\n    let klass = vnode.data.class;\n    if (!oldClass && !klass)\n        return;\n    if (oldClass === klass)\n        return;\n    oldClass = oldClass || {};\n    klass = klass || {};\n    for (name in oldClass) {\n        if (oldClass[name] && !Object.prototype.hasOwnProperty.call(klass, name)) {\n            // was `true` and now not provided\n            elm.classList.remove(name);\n        }\n    }\n    for (name in klass) {\n        cur = klass[name];\n        if (cur !== oldClass[name]) {\n            elm.classList[cur ? \"add\" : \"remove\"](name);\n        }\n    }\n}\nconst classModule = { create: updateClass, update: updateClass };\n\nconst CAPS_REGEX = /[A-Z]/g;\nfunction updateDataset(oldVnode, vnode) {\n    const elm = vnode.elm;\n    let oldDataset = oldVnode.data.dataset;\n    let dataset = vnode.data.dataset;\n    let key;\n    if (!oldDataset && !dataset)\n        return;\n    if (oldDataset === dataset)\n        return;\n    oldDataset = oldDataset || {};\n    dataset = dataset || {};\n    const d = elm.dataset;\n    for (key in oldDataset) {\n        if (!dataset[key]) {\n            if (d) {\n                if (key in d) {\n                    delete d[key];\n                }\n            }\n            else {\n                elm.removeAttribute(\"data-\" + key.replace(CAPS_REGEX, \"-$&\").toLowerCase());\n            }\n        }\n    }\n    for (key in dataset) {\n        if (oldDataset[key] !== dataset[key]) {\n            if (d) {\n                d[key] = dataset[key];\n            }\n            else {\n                elm.setAttribute(\"data-\" + key.replace(CAPS_REGEX, \"-$&\").toLowerCase(), dataset[key]);\n            }\n        }\n    }\n}\nconst datasetModule = {\n    create: updateDataset,\n    update: updateDataset,\n};\n\nfunction invokeHandler(handler, vnode, event) {\n    if (typeof handler === \"function\") {\n        // call function handler\n        handler.call(vnode, event, vnode);\n    }\n    else if (typeof handler === \"object\") {\n        // call multiple handlers\n        for (let i = 0; i < handler.length; i++) {\n            invokeHandler(handler[i], vnode, event);\n        }\n    }\n}\nfunction handleEvent(event, vnode) {\n    const name = event.type;\n    const on = vnode.data.on;\n    // call event handler(s) if exists\n    if (on && on[name]) {\n        invokeHandler(on[name], vnode, event);\n    }\n}\nfunction createListener() {\n    return function handler(event) {\n        handleEvent(event, handler.vnode);\n    };\n}\nfunction updateEventListeners(oldVnode, vnode) {\n    const oldOn = oldVnode.data.on;\n    const oldListener = oldVnode.listener;\n    const oldElm = oldVnode.elm;\n    const on = vnode && vnode.data.on;\n    const elm = (vnode && vnode.elm);\n    let name;\n    // optimization for reused immutable handlers\n    if (oldOn === on) {\n        return;\n    }\n    // remove existing listeners which no longer used\n    if (oldOn && oldListener) {\n        // if element changed or deleted we remove all existing listeners unconditionally\n        if (!on) {\n            for (name in oldOn) {\n                // remove listener if element was changed or existing listeners removed\n                oldElm.removeEventListener(name, oldListener, false);\n            }\n        }\n        else {\n            for (name in oldOn) {\n                // remove listener if existing listener removed\n                if (!on[name]) {\n                    oldElm.removeEventListener(name, oldListener, false);\n                }\n            }\n        }\n    }\n    // add new listeners which has not already attached\n    if (on) {\n        // reuse existing listener or create new\n        const listener = (vnode.listener =\n            oldVnode.listener || createListener());\n        // update vnode for listener\n        listener.vnode = vnode;\n        // if element changed or added we add all needed listeners unconditionally\n        if (!oldOn) {\n            for (name in on) {\n                // add listener if element was changed or new listeners added\n                elm.addEventListener(name, listener, false);\n            }\n        }\n        else {\n            for (name in on) {\n                // add listener if new listener added\n                if (!oldOn[name]) {\n                    elm.addEventListener(name, listener, false);\n                }\n            }\n        }\n    }\n}\nconst eventListenersModule = {\n    create: updateEventListeners,\n    update: updateEventListeners,\n    destroy: updateEventListeners,\n};\n\nfunction updateProps(oldVnode, vnode) {\n    let key;\n    let cur;\n    let old;\n    const elm = vnode.elm;\n    let oldProps = oldVnode.data.props;\n    let props = vnode.data.props;\n    if (!oldProps && !props)\n        return;\n    if (oldProps === props)\n        return;\n    oldProps = oldProps || {};\n    props = props || {};\n    for (key in props) {\n        cur = props[key];\n        old = oldProps[key];\n        if (old !== cur && (key !== \"value\" || elm[key] !== cur)) {\n            elm[key] = cur;\n        }\n    }\n}\nconst propsModule = { create: updateProps, update: updateProps };\n\n// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.\nconst raf = (typeof window !== \"undefined\" &&\n    window.requestAnimationFrame.bind(window)) ||\n    setTimeout;\nconst nextFrame = function (fn) {\n    raf(function () {\n        raf(fn);\n    });\n};\nlet reflowForced = false;\nfunction setNextFrame(obj, prop, val) {\n    nextFrame(function () {\n        obj[prop] = val;\n    });\n}\nfunction updateStyle(oldVnode, vnode) {\n    let cur;\n    let name;\n    const elm = vnode.elm;\n    let oldStyle = oldVnode.data.style;\n    let style = vnode.data.style;\n    if (!oldStyle && !style)\n        return;\n    if (oldStyle === style)\n        return;\n    oldStyle = oldStyle || {};\n    style = style || {};\n    const oldHasDel = \"delayed\" in oldStyle;\n    for (name in oldStyle) {\n        if (!style[name]) {\n            if (name[0] === \"-\" && name[1] === \"-\") {\n                elm.style.removeProperty(name);\n            }\n            else {\n                elm.style[name] = \"\";\n            }\n        }\n    }\n    for (name in style) {\n        cur = style[name];\n        if (name === \"delayed\" && style.delayed) {\n            for (const name2 in style.delayed) {\n                cur = style.delayed[name2];\n                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {\n                    setNextFrame(elm.style, name2, cur);\n                }\n            }\n        }\n        else if (name !== \"remove\" && cur !== oldStyle[name]) {\n            if (name[0] === \"-\" && name[1] === \"-\") {\n                elm.style.setProperty(name, cur);\n            }\n            else {\n                elm.style[name] = cur;\n            }\n        }\n    }\n}\nfunction applyDestroyStyle(vnode) {\n    let style;\n    let name;\n    const elm = vnode.elm;\n    const s = vnode.data.style;\n    if (!s || !(style = s.destroy))\n        return;\n    for (name in style) {\n        elm.style[name] = style[name];\n    }\n}\nfunction applyRemoveStyle(vnode, rm) {\n    const s = vnode.data.style;\n    if (!s || !s.remove) {\n        rm();\n        return;\n    }\n    if (!reflowForced) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        vnode.elm.offsetLeft;\n        reflowForced = true;\n    }\n    let name;\n    const elm = vnode.elm;\n    let i = 0;\n    const style = s.remove;\n    let amount = 0;\n    const applied = [];\n    for (name in style) {\n        applied.push(name);\n        elm.style[name] = style[name];\n    }\n    const compStyle = getComputedStyle(elm);\n    const props = compStyle[\"transition-property\"].split(\", \");\n    for (; i < props.length; ++i) {\n        if (applied.indexOf(props[i]) !== -1)\n            amount++;\n    }\n    elm.addEventListener(\"transitionend\", function (ev) {\n        if (ev.target === elm)\n            --amount;\n        if (amount === 0)\n            rm();\n    });\n}\nfunction forceReflow() {\n    reflowForced = false;\n}\nconst styleModule = {\n    pre: forceReflow,\n    create: updateStyle,\n    update: updateStyle,\n    destroy: applyDestroyStyle,\n    remove: applyRemoveStyle,\n};\n\n/* eslint-disable @typescript-eslint/no-namespace, import/export */\nfunction Fragment(data, ...children) {\n    const flatChildren = flattenAndFilter(children, []);\n    if (flatChildren.length === 1 &&\n        !flatChildren[0].sel &&\n        flatChildren[0].text) {\n        // only child is a simple text node, pass as text for a simpler vtree\n        return vnode(undefined, undefined, undefined, flatChildren[0].text, undefined);\n    }\n    else {\n        return vnode(undefined, data !== null && data !== void 0 ? data : {}, flatChildren, undefined, undefined);\n    }\n}\nfunction flattenAndFilter(children, flattened) {\n    for (const child of children) {\n        // filter out falsey children, except 0 since zero can be a valid value e.g inside a chart\n        if (child !== undefined &&\n            child !== null &&\n            child !== false &&\n            child !== \"\") {\n            if (Array.isArray(child)) {\n                flattenAndFilter(child, flattened);\n            }\n            else if (typeof child === \"string\" ||\n                typeof child === \"number\" ||\n                typeof child === \"boolean\") {\n                flattened.push(vnode(undefined, undefined, undefined, String(child), undefined));\n            }\n            else {\n                flattened.push(child);\n            }\n        }\n    }\n    return flattened;\n}\n/**\n * jsx/tsx compatible factory function\n * see: https://www.typescriptlang.org/docs/handbook/jsx.html#factory-functions\n */\nfunction jsx(tag, data, ...children) {\n    const flatChildren = flattenAndFilter(children, []);\n    if (typeof tag === \"function\") {\n        // tag is a function component\n        return tag(data, flatChildren);\n    }\n    else {\n        if (flatChildren.length === 1 &&\n            !flatChildren[0].sel &&\n            flatChildren[0].text) {\n            // only child is a simple text node, pass as text for a simpler vtree\n            return h(tag, data, flatChildren[0].text);\n        }\n        else {\n            return h(tag, data, flatChildren);\n        }\n    }\n}\n(function (jsx) {\n})(jsx || (jsx = {}));\n\nexports.Fragment = Fragment;\nexports.array = array;\nexports.attachTo = attachTo;\nexports.attributesModule = attributesModule;\nexports.classModule = classModule;\nexports.datasetModule = datasetModule;\nexports.eventListenersModule = eventListenersModule;\nexports.fragment = fragment;\nexports.h = h;\nexports.htmlDomApi = htmlDomApi;\nexports.init = init$1;\nexports.jsx = jsx;\nexports.primitive = primitive;\nexports.propsModule = propsModule;\nexports.styleModule = styleModule;\nexports.thunk = thunk;\nexports.toVNode = toVNode;\nexports.vnode = vnode;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { h, VNode, VNodeData } from \"snabbdom\";\nimport { SModelElementImpl } from \"../model/smodel\";\nimport { RenderingContext, IView } from \"./view\";\nimport { injectable } from \"inversify\";\n\n/**\n * An view that avoids calculation and patching of VNodes unless some model properties have changed.\n * Based on snabbdom's thunks.\n */\n@injectable()\nexport abstract class ThunkView implements IView {\n\n    /**\n     * Returns the array of values that are watched for changes.\n     * If they haven't change since the last rendering, the VNode is neither recalculated nor patched.\n     */\n    abstract watchedArgs(model: SModelElementImpl): any[];\n\n    /**\n     * Returns the selector of the VNode root, i.e. it's element type.\n     */\n    abstract selector(model: SModelElementImpl): string;\n\n    /**\n     * Calculate the VNode from the input data. Only called if the watched properties change.\n     */\n    abstract doRender(model: SModelElementImpl, context: RenderingContext): VNode;\n\n    render(model: SModelElementImpl, context: RenderingContext): VNode {\n        return h(this.selector(model), {\n            key: model.id,\n            hook: {\n                init: this.init.bind(this),\n                prepatch: this.prepatch.bind(this)},\n            fn: () => this.renderAndDecorate(model, context),\n            args: this.watchedArgs(model),\n            thunk: true\n        });\n    }\n\n    protected renderAndDecorate(model: SModelElementImpl, context: RenderingContext): VNode {\n        const vnode = this.doRender(model, context);\n        context.decorate(vnode, model);\n        return vnode;\n    }\n\n    protected copyToThunk(vnode: VNode, thunk: VNode): void {\n        thunk.elm = vnode.elm;\n        (vnode.data as VNodeData).fn = (thunk.data as VNodeData).fn;\n        (vnode.data as VNodeData).args = (thunk.data as VNodeData).args;\n        thunk.data = vnode.data;\n        thunk.children = vnode.children;\n        thunk.text = vnode.text;\n        thunk.elm = vnode.elm;\n    }\n\n    protected init(thunk: VNode): void {\n        const cur = thunk.data as VNodeData;\n        const vnode = (cur.fn as any).apply(undefined, cur.args);\n        this.copyToThunk(vnode, thunk);\n    }\n\n    protected prepatch(oldVnode: VNode, thunk: VNode): void {\n        const old = oldVnode.data as VNodeData, cur = thunk.data as VNodeData;\n        if (!this.equals(old.args as any[], cur.args as any[]))\n            this.copyToThunk((cur.fn as any).apply(undefined, cur.args), thunk);\n        else\n            this.copyToThunk(oldVnode, thunk);\n    }\n\n    protected equals(oldArg: any, newArg: any) {\n        if (Array.isArray(oldArg) && Array.isArray(newArg)) {\n            if (oldArg.length !== newArg.length)\n                return false;\n            for (let i = 0; i < newArg.length; ++i) {\n                if (!this.equals(oldArg[i], newArg[i]))\n                    return false;\n            }\n        } else if (typeof oldArg === 'object' && typeof newArg === 'object') {\n            if (Object.keys(oldArg).length !== Object.keys(newArg).length)\n                return false;\n            for (const key in oldArg) {\n                if (key !== 'parent' && key !== 'root' && (!(key in newArg) || !this.equals(oldArg[key], newArg[key])))\n                    return false;\n            }\n        } else if (oldArg !== newArg) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport interface ThunkVNode extends VNode {\n    thunk: boolean\n}\n\nexport function isThunk(vnode: VNode): vnode is ThunkVNode {\n    return 'thunk' in vnode;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { VNodeData, JsxVNodeChildren, JsxVNodeChild, jsx, FunctionComponent } from \"snabbdom\";\n\n\ndeclare global {\n  // eslint-disable-next-line no-redeclare\n  namespace JSX {\n      // Based on the tag list in github:DefinitelyTyped/DefinitelyTyped:React\n      interface IntrinsicElements {\n          [elemName: string]: VNodeData\n      }\n  }\n}\n\nconst modulesNS = ['hook', 'on', 'style', 'class', 'props', 'attrs', 'dataset'];\nconst SVGNS = 'http://www.w3.org/2000/svg';\n\nfunction normalizeAttrs(source: VNodeData | null, defNS: string, namespace?: string) {\n  const data: VNodeData = {};\n\n  if (namespace) {\n    data.ns = namespace;\n  }\n  if (source === null) {\n    return data;\n  }\n\n  modulesNS.forEach(mod => {\n    if (source[mod]) {\n      data[mod] = source[mod];\n    }\n  });\n  Object.keys(source).forEach(key => {\n    if (key === 'key' || key === 'classNames' || key === 'selector') return;\n    const idx = key.indexOf('-');\n    if (idx > 0)\n      addAttr(key.slice(0, idx), key.slice(idx + 1), source[key]);\n    else if (!data[key])\n      addAttr(defNS, key, source[key]);\n  });\n  return data;\n\n  function addAttr(modname: string, key: string, val: JsxVNodeChildren) {\n    const mod = data[modname] || (data[modname] = {});\n    mod[key] = val;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction JSX(namespace?: string, defNS: string = 'props') {\n  return (tag: FunctionComponent | string, attrs: VNodeData | null, ...children: JsxVNodeChild[]) => jsx(tag, normalizeAttrs(attrs, defNS, namespace), children);\n}\n\nconst html = JSX();\nconst svg = JSX(SVGNS, 'attrs');\n\nexport { html, svg, JSX };\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { svg } from '../../lib/jsx';\n\nimport { injectable, multiInject, optional, interfaces } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { TYPES } from '../types';\nimport { InstanceRegistry } from '../../utils/registry';\nimport { isInjectable } from '../../utils/inversify';\nimport { SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../model/smodel';\nimport { EMPTY_ROOT, CustomFeatures } from '../model/smodel-factory';\nimport { registerModelElement } from '../model/smodel-utils';\nimport { Point } from 'sprotty-protocol';\n\n/**\n * Arguments for `IView` rendering.\n */\nexport interface IViewArgs {\n    parentArgs?: IViewArgs;\n    [key: string]: any;\n}\n\n/**\n * Searches for the property specified in `key` in the specified `args`,\n * including its direct or indirect `IRenderingArgs#parentArgs`.\n *\n * @param arg the rendering arguments.\n * @param key the key to search for.\n * @returns the found value or `undefined.\n */\nexport function findArgValue<T>(arg: IViewArgs | undefined, key: string): T | undefined {\n    while (arg !== undefined && !(key in arg) && arg.parentArgs) {\n        arg = arg.parentArgs;\n    }\n    return arg ? arg[key] : undefined;\n}\n\n/**\n * Base interface for the components that turn GModelElements into virtual DOM elements.\n */\nexport interface IView<A extends IViewArgs = {}> {\n    render(model: Readonly<SModelElementImpl>, context: RenderingContext, args?: A): VNode | undefined\n}\n\n/**\n * Indicates the target of the view rendering. `main` is the actually visible diagram,\n * `popup` is the mouse hover popup, and `hidden` is for computing element bounds prior\n * to the main rendering.\n */\nexport type RenderingTargetKind = 'main' | 'popup' | 'hidden';\n\n/**\n * Bundles additional data that is passed to views for VNode creation.\n */\nexport interface RenderingContext {\n    readonly viewRegistry: ViewRegistry\n    readonly targetKind: RenderingTargetKind;\n    readonly parentArgs?: IViewArgs;\n\n    decorate(vnode: VNode, element: Readonly<SModelElementImpl>): VNode\n\n    renderElement(element: Readonly<SModelElementImpl>): VNode | undefined\n\n    renderChildren(element: Readonly<SParentElementImpl>, args?: IViewArgs): VNode[]\n}\n\n/**\n * Used to bind a model element type to a view factory in the ViewRegistry.\n */\nexport interface ViewRegistration {\n    type: string\n    factory: () => IView\n}\n\nexport type ViewRegistrationFactory = () => ViewRegistration;\n\n/**\n * Allows to look up the IView for a given SModelElement based on its type.\n */\n@injectable()\nexport class ViewRegistry extends InstanceRegistry<IView> {\n    constructor(@multiInject(TYPES.ViewRegistration) @optional() registrations: ViewRegistration[]) {\n        super();\n        this.registerDefaults();\n        registrations.forEach(registration =>\n            this.register(registration.type, registration.factory())\n        );\n    }\n\n    protected registerDefaults() {\n        this.register(EMPTY_ROOT.type, new EmptyView());\n    }\n\n    override missing(key: string): IView {\n        return new MissingView();\n    }\n}\n\n/**\n * Combines `registerModelElement` and `configureView`.\n */\nexport function configureModelElement(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        type: string, modelConstr: new () => SModelElementImpl, viewConstr: interfaces.ServiceIdentifier<IView>,\n        features?: CustomFeatures): void {\n    registerModelElement(context, type, modelConstr, features);\n    configureView(context, type, viewConstr);\n}\n\n/**\n * Utility function to register a view for a model element type.\n */\nexport function configureView(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n        type: string, constr: interfaces.ServiceIdentifier<IView>): void {\n    if (typeof constr === 'function') {\n        if (!isInjectable(constr)) {\n            throw new Error(`Views should be @injectable: ${constr.name}`);\n        }\n        if (!context.isBound(constr)) {\n            context.bind(constr).toSelf();\n        }\n    }\n    context.bind(TYPES.ViewRegistration).toDynamicValue(ctx => ({\n        type,\n        factory: () => ctx.container.get(constr)\n    }));\n}\n\n/**\n * This view is used when the model is the EMPTY_ROOT.\n */\n@injectable()\nexport class EmptyView implements IView {\n    render(model: SModelRootImpl, context: RenderingContext): VNode {\n        return <svg class-sprotty-empty={true} />;\n    }\n}\n\n/**\n * This view is used when no view has been registered for a model element type.\n */\n@injectable()\nexport class MissingView implements IView {\n    render(model: Readonly<SModelElementImpl>, context: RenderingContext): VNode {\n        const position: Point = (model as any).position || Point.ORIGIN;\n        return <text class-sprotty-missing={true} x={position.x} y={position.y}>?{model.id}?</text>;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { SModelRootImpl } from \"../model/smodel\";\nimport { TYPES } from \"../types\";\nimport { AnimationFrameSyncer } from \"../animations/animation-frame-syncer\";\nimport { IViewer } from \"./viewer\";\n\n/**\n * Updating the view is rather expensive, and it doesn't make sense to calculate\n * more then one update per animation (rendering) frame. So this class batches\n * all incoming model changes and only renders the last one when the next animation\n * frame comes.\n */\n@injectable()\nexport class ViewerCache implements IViewer {\n\n    @inject(TYPES.IViewer) protected delegate: IViewer;\n    @inject(TYPES.AnimationFrameSyncer) protected syncer: AnimationFrameSyncer;\n\n    protected cachedModel?: SModelRootImpl;\n\n    update(model: SModelRootImpl, cause?: Action): void {\n        if (cause !== undefined) {\n            // Forward the update immediately in order to pass the cause action\n            this.delegate.update(model, cause);\n            this.cachedModel = undefined;\n        } else {\n            const isCacheEmpty = this.cachedModel === undefined;\n            this.cachedModel = model;\n            if (isCacheEmpty) {\n                this.scheduleUpdate();\n            }\n        }\n    }\n\n    protected scheduleUpdate() {\n        this.syncer.onEndOfNextFrame(() => {\n            if (this.cachedModel) {\n                this.delegate.update(this.cachedModel);\n                this.cachedModel = undefined;\n            }\n        });\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2023 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, interfaces } from 'inversify';\nimport { safeAssign } from 'sprotty-protocol/lib/utils/object';\nimport { Limits } from '../../utils/geometry';\nimport { TYPES } from '../types';\n\nexport interface ViewerOptions {\n    /** ID of the HTML element into which the visible diagram is rendered. */\n    baseDiv: string\n    /** CSS class added to the base element of the visible diagram. */\n    baseClass: string\n    /** ID of the HTML element into which the hidden diagram is rendered. */\n    hiddenDiv: string\n    /** CSS class added to the base element of the hidden rendering. */\n    hiddenClass: string\n    /** ID of the HTML element into which hover popup boxes are rendered. */\n    popupDiv: string\n    /** CSS class added to the base element of popup boxes. */\n    popupClass: string\n    /** CSS class added to popup boxes when they are closed. */\n    popupClosedClass: string\n    /** Whether client layouts need to be computed by Sprotty. This activates a hidden rendering cycle. */\n    needsClientLayout: boolean\n    /** Whether the model source needs to invoke a layout engine after a model update. */\n    needsServerLayout: boolean\n    /** Delay for opening a popup box after mouse hovering an element. */\n    popupOpenDelay: number\n    /** Delay for closing a popup box after leaving the corresponding element. */\n    popupCloseDelay: number\n    /** Minimum (zoom out) and maximum (zoom in) values for the zoom factor. */\n    zoomLimits: Limits\n    /** Minimum and maximum values for the horizontal scroll position. */\n    horizontalScrollLimits: Limits\n    /** Minimum and maximum values for the vertical scroll position. */\n    verticalScrollLimits: Limits\n}\n\nexport const defaultViewerOptions: () => ViewerOptions = () => ({\n    baseDiv: 'sprotty',\n    baseClass: 'sprotty',\n    hiddenDiv: 'sprotty-hidden',\n    hiddenClass: 'sprotty-hidden',\n    popupDiv: 'sprotty-popup',\n    popupClass: 'sprotty-popup',\n    popupClosedClass: 'sprotty-popup-closed',\n    needsClientLayout: true,\n    needsServerLayout: false,\n    popupOpenDelay: 1000,\n    popupCloseDelay: 300,\n    zoomLimits: { min: 0.01, max: 10 },\n    horizontalScrollLimits: { min: -100_000, max: 100_000 },\n    verticalScrollLimits: { min: -100_000, max: 100_000 }\n});\n\n/**\n * Utility function to partially set viewer options. Default values (from `defaultViewerOptions`) are used for\n * options that are not specified.\n */\nexport function configureViewerOptions(context: { bind: interfaces.Bind, isBound: interfaces.IsBound, rebind: interfaces.Rebind },\n        options: Partial<ViewerOptions>): void {\n    const opt: ViewerOptions = {\n        ...defaultViewerOptions(),\n        ...options\n    };\n    if (context.isBound(TYPES.ViewerOptions))\n        context.rebind(TYPES.ViewerOptions).toConstantValue(opt);\n    else\n        context.bind(TYPES.ViewerOptions).toConstantValue(opt);\n}\n\n/**\n * Utility function to partially override the currently configured viewer options in a DI container.\n */\nexport function overrideViewerOptions(container: Container, options: Partial<ViewerOptions>): ViewerOptions {\n    const opt = container.get<ViewerOptions>(TYPES.ViewerOptions);\n    safeAssign(opt, options);\n    return opt;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx html */\nimport { inject, injectable, multiInject, optional } from 'inversify';\nimport { attributesModule, classModule, eventListenersModule, init, Module, propsModule, styleModule, VNode } from 'snabbdom';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { html } from '../../lib/jsx'; // must be html here, as we're creating a div\nimport { getWindowScroll } from '../../utils/browser';\nimport { ILogger } from '../../utils/logging';\nimport { IActionDispatcher } from '../actions/action-dispatcher';\nimport { InitializeCanvasBoundsAction } from '../features/initialize-canvas';\nimport { SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../model/smodel';\nimport { EMPTY_ROOT } from '../model/smodel-factory';\nimport { TYPES } from '../types';\nimport { isThunk } from './thunk-view';\nimport { IViewArgs, RenderingContext, RenderingTargetKind, ViewRegistry } from './view';\nimport { ViewerOptions } from './viewer-options';\nimport { IVNodePostprocessor } from './vnode-postprocessor';\nimport { copyClassesFromElement, copyClassesFromVNode, setAttr, setClass } from './vnode-utils';\n\n\nexport interface IViewer {\n    update(model: SModelRootImpl, cause?: Action): void\n}\n\nexport interface IViewerProvider {\n    readonly modelViewer: IViewer\n    readonly hiddenModelViewer: IViewer\n    readonly popupModelViewer: IViewer\n}\n\nexport class ModelRenderer implements RenderingContext {\n\n    constructor(readonly viewRegistry: ViewRegistry,\n        readonly targetKind: RenderingTargetKind,\n        private postprocessors: IVNodePostprocessor[],\n        protected args: IViewArgs = {}) {\n    }\n\n    decorate(vnode: VNode, element: Readonly<SModelElementImpl>): VNode {\n        if (isThunk(vnode)) {\n            return vnode;\n        }\n        return this.postprocessors.reduce(\n            (n: VNode, processor: IVNodePostprocessor) => processor.decorate(n, element),\n            vnode);\n    }\n\n    renderElement(element: Readonly<SModelElementImpl>): VNode | undefined {\n        const view = this.viewRegistry.get(element.type);\n        const vnode = view.render(element, this, this.args);\n        if (vnode) {\n            return this.decorate(vnode, element);\n        } else {\n            return undefined;\n        }\n    }\n\n    renderChildren(element: Readonly<SParentElementImpl>, args?: IViewArgs): VNode[] {\n        const context = args ?\n            new ModelRenderer(\n                this.viewRegistry,\n                this.targetKind,\n                this.postprocessors,\n                { ...args, parentArgs: this.args }\n            ) : this;\n        return element.children\n            .map(child => context.renderElement(child))\n            .filter(vnode => vnode !== undefined) as VNode[];\n    }\n\n    postUpdate(cause?: Action) {\n        this.postprocessors.forEach(processor => processor.postUpdate(cause));\n    }\n}\n\nexport type ModelRendererFactory = (\n    targetKind: RenderingTargetKind,\n    postprocessors: IVNodePostprocessor[],\n    args?: IViewArgs\n) => ModelRenderer;\n\nexport type Patcher = (oldRoot: VNode | Element, newRoot: VNode) => VNode;\n\n@injectable()\nexport class PatcherProvider {\n\n    readonly patcher: Patcher;\n\n    constructor() {\n        this.patcher = init(this.createModules());\n    }\n\n    protected createModules(): Module[] {\n        return [\n            propsModule,\n            attributesModule,\n            classModule,\n            styleModule,\n            eventListenersModule\n        ];\n    }\n\n}\n\n/**\n * The component that turns the model into an SVG DOM.\n * Uses a VDOM based on snabbdom.js for performance.\n */\n@injectable()\nexport class ModelViewer implements IViewer {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.IActionDispatcher) protected actiondispatcher: IActionDispatcher;\n\n    constructor(@inject(TYPES.ModelRendererFactory) modelRendererFactory: ModelRendererFactory,\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\n        @multiInject(TYPES.IVNodePostprocessor) @optional() postprocessors: IVNodePostprocessor[]) {\n        this.renderer = modelRendererFactory('main', postprocessors);\n        this.patcher = patcherProvider.patcher;\n    }\n\n    protected readonly renderer: ModelRenderer;\n    protected readonly patcher: Patcher;\n\n    protected lastVDOM: VNode;\n\n    update(model: Readonly<SModelRootImpl>, cause?: Action): void {\n        this.logger.log(this, 'rendering', model);\n        const newVDOM = <div id={this.options.baseDiv}>\n            {this.renderer.renderElement(model)}\n        </div>;\n        if (this.lastVDOM !== undefined) {\n            const hadFocus = this.hasFocus();\n            copyClassesFromVNode(this.lastVDOM, newVDOM);\n            this.lastVDOM = this.patcher.call(this, this.lastVDOM, newVDOM);\n            this.restoreFocus(hadFocus);\n        } else if (typeof document !== 'undefined') {\n            const placeholder = document.getElementById(this.options.baseDiv);\n            if (placeholder !== null) {\n                if (typeof window !== 'undefined') {\n                    window.addEventListener('resize', () => {\n                        this.onWindowResize(newVDOM);\n                    });\n                }\n                copyClassesFromElement(placeholder, newVDOM);\n                setClass(newVDOM, this.options.baseClass, true);\n                this.lastVDOM = this.patcher.call(this, placeholder, newVDOM);\n            } else {\n                this.logger.error(this, 'element not in DOM:', this.options.baseDiv);\n            }\n        }\n        this.renderer.postUpdate(cause);\n    }\n\n    protected hasFocus(): boolean {\n        if (typeof document !== 'undefined' && document.activeElement && this.lastVDOM.children && this.lastVDOM.children.length > 0) {\n            const lastRootVNode = this.lastVDOM.children[0];\n            if (typeof lastRootVNode === 'object') {\n                const lastElement = (lastRootVNode as VNode).elm;\n                return document.activeElement === lastElement;\n            }\n        }\n        return false;\n    }\n\n    protected restoreFocus(focus: boolean) {\n        if (focus && this.lastVDOM.children && this.lastVDOM.children.length > 0) {\n            const lastRootVNode = this.lastVDOM.children[0];\n            if (typeof lastRootVNode === 'object') {\n                const lastElement = (lastRootVNode as VNode).elm;\n                if (lastElement && typeof (lastElement as any).focus === 'function')\n                    (lastElement as any).focus();\n            }\n        }\n    }\n\n    protected onWindowResize(vdom: VNode): void {\n        const baseDiv = document.getElementById(this.options.baseDiv);\n        if (baseDiv !== null) {\n            const newBounds = this.getBoundsInPage(baseDiv as Element);\n            this.actiondispatcher.dispatch(InitializeCanvasBoundsAction.create(newBounds));\n        }\n    }\n\n    protected getBoundsInPage(element: Element) {\n        const bounds = element.getBoundingClientRect();\n        const scroll = getWindowScroll();\n        return {\n            x: bounds.left + scroll.x,\n            y: bounds.top + scroll.y,\n            width: bounds.width,\n            height: bounds.height\n        };\n    }\n\n}\n\n/**\n * Viewer for the _hidden_ model. This serves as an intermediate step to compute bounds\n * of elements. The model is rendered in a section that is not visible to the user,\n * and then the bounds are extracted from the DOM.\n */\n@injectable()\nexport class HiddenModelViewer implements IViewer {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    constructor(@inject(TYPES.ModelRendererFactory) modelRendererFactory: ModelRendererFactory,\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\n        @multiInject(TYPES.HiddenVNodePostprocessor) @optional() hiddenPostprocessors: IVNodePostprocessor[]) {\n        this.hiddenRenderer = modelRendererFactory('hidden', hiddenPostprocessors);\n        this.patcher = patcherProvider.patcher;\n    }\n\n    protected readonly hiddenRenderer: ModelRenderer;\n    protected readonly patcher: Patcher;\n\n    protected lastHiddenVDOM: VNode;\n\n    update(hiddenModel: Readonly<SModelRootImpl>, cause?: Action): void {\n        this.logger.log(this, 'rendering hidden');\n\n        let newVDOM: VNode;\n        if (hiddenModel.type === EMPTY_ROOT.type) {\n            newVDOM = <div id={this.options.hiddenDiv}></div>;\n        } else {\n            const hiddenVNode = this.hiddenRenderer.renderElement(hiddenModel);\n            if (hiddenVNode) {\n                setAttr(hiddenVNode, 'opacity', 0);\n            }\n            newVDOM = <div id={this.options.hiddenDiv}>\n                {hiddenVNode}\n            </div>;\n        }\n\n        if (this.lastHiddenVDOM !== undefined) {\n            copyClassesFromVNode(this.lastHiddenVDOM, newVDOM);\n            this.lastHiddenVDOM = this.patcher.call(this, this.lastHiddenVDOM, newVDOM);\n        } else {\n            let placeholder = document.getElementById(this.options.hiddenDiv);\n            if (placeholder === null) {\n                placeholder = document.createElement('div');\n                document.body.appendChild(placeholder);\n            } else {\n                copyClassesFromElement(placeholder, newVDOM);\n            }\n            setClass(newVDOM, this.options.baseClass, true);\n            setClass(newVDOM, this.options.hiddenClass, true);\n            this.lastHiddenVDOM = this.patcher.call(this, placeholder, newVDOM);\n        }\n        this.hiddenRenderer.postUpdate(cause);\n    }\n\n}\n\n@injectable()\nexport class PopupModelViewer implements IViewer {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    constructor(@inject(TYPES.ModelRendererFactory) protected readonly modelRendererFactory: ModelRendererFactory,\n        @inject(TYPES.PatcherProvider) patcherProvider: PatcherProvider,\n        @multiInject(TYPES.PopupVNodePostprocessor) @optional() popupPostprocessors: IVNodePostprocessor[]) {\n        this.popupRenderer = this.modelRendererFactory('popup', popupPostprocessors);\n        this.patcher = patcherProvider.patcher;\n    }\n\n    protected readonly popupRenderer: ModelRenderer;\n    protected readonly patcher: Patcher;\n\n    protected lastPopupVDOM: VNode;\n\n    update(model: Readonly<SModelRootImpl>, cause?: Action): void {\n        this.logger.log(this, 'rendering popup', model);\n\n        const popupClosed = model.type === EMPTY_ROOT.type;\n        let newVDOM: VNode;\n        if (popupClosed) {\n            newVDOM = <div id={this.options.popupDiv}></div>;\n        } else {\n            const position = model.canvasBounds;\n            const inlineStyle = {\n                top: position.y + 'px',\n                left: position.x + 'px'\n            };\n            newVDOM = <div id={this.options.popupDiv} style={inlineStyle}>\n                {this.popupRenderer.renderElement(model)}\n            </div>;\n        }\n\n        if (this.lastPopupVDOM !== undefined) {\n            copyClassesFromVNode(this.lastPopupVDOM, newVDOM);\n            setClass(newVDOM, this.options.popupClosedClass, popupClosed);\n            this.lastPopupVDOM = this.patcher.call(this, this.lastPopupVDOM, newVDOM);\n        } else if (typeof document !== 'undefined') {\n            let placeholder = document.getElementById(this.options.popupDiv);\n            if (placeholder === null) {\n                placeholder = document.createElement('div');\n                document.body.appendChild(placeholder);\n            } else {\n                copyClassesFromElement(placeholder, newVDOM);\n            }\n            setClass(newVDOM, this.options.popupClass, true);\n            setClass(newVDOM, this.options.popupClosedClass, popupClosed);\n            this.lastPopupVDOM = this.patcher.call(this, placeholder, newVDOM);\n        }\n        this.popupRenderer.postUpdate(cause);\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { SModelElementImpl } from \"../model/smodel\";\nimport { setAttr } from \"./vnode-utils\";\n\n/**\n * Manipulates a created VNode after it has been created.\n * Used to register listeners and add animations.\n */\nexport interface IVNodePostprocessor {\n    decorate(vnode: VNode, element: SModelElementImpl): VNode\n    postUpdate(cause?: Action): void\n}\n\n@injectable()\nexport class FocusFixPostprocessor implements IVNodePostprocessor {\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (vnode.sel && vnode.sel.startsWith('svg'))\n            // allows to set focus in Firefox\n            setAttr(vnode, 'tabindex', 0);\n        return vnode;\n    }\n\n    postUpdate(): void {\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { TYPES } from \"../base/types\";\nimport { ViewerOptions } from \"../base/views/viewer-options\";\n\nexport interface ILogger {\n    logLevel: LogLevel\n\n    error(thisArg: any, message: string, ...params: any[]): void\n    warn(thisArg: any, message: string, ...params: any[]): void\n    info(thisArg: any, message: string, ...params: any[]): void\n    log(thisArg: any, message: string, ...params: any[]): void\n}\n\nexport enum LogLevel { none = 0, error = 1, warn = 2, info = 3, log = 4 }\n\n@injectable()\nexport class NullLogger implements ILogger {\n    logLevel: LogLevel = LogLevel.none;\n\n    error(thisArg: any, message: string, ...params: any[]): void {}\n    warn(thisArg: any, message: string, ...params: any[]): void {}\n    info(thisArg: any, message: string, ...params: any[]): void {}\n    log(thisArg: any, message: string, ...params: any[]): void {}\n}\n\n@injectable()\nexport class ConsoleLogger implements ILogger {\n\n    @inject(TYPES.LogLevel) public logLevel: LogLevel = LogLevel.log;\n    @inject(TYPES.ViewerOptions) protected viewOptions: ViewerOptions = { baseDiv: '' } as ViewerOptions;\n\n    error(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.error)\n            try {\n                console.error.apply(thisArg, this.consoleArguments(thisArg, message, params));\n            } catch (error) {}\n    }\n\n    warn(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.warn)\n            try {\n                console.warn.apply(thisArg, this.consoleArguments(thisArg, message, params));\n            } catch (error) {}\n    }\n\n    info(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.info)\n            try {\n                console.info.apply(thisArg, this.consoleArguments(thisArg, message, params));\n            } catch (error) {}\n    }\n\n    log(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.log)\n            try {\n                console.log.apply(thisArg, this.consoleArguments(thisArg, message, params));\n            } catch (error) {}\n    }\n\n    protected consoleArguments(thisArg: any, message: string, params: any[]): any[] {\n        let caller: any;\n        if (typeof thisArg === 'object')\n            caller = thisArg.constructor.name;\n        else\n            caller = thisArg;\n        const date = new Date();\n        return [date.toLocaleTimeString() + ' ' + this.viewOptions.baseDiv + ' ' + caller + ': ' + message, ...params];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { TYPES } from \"../types\";\nimport { ILogger } from \"../../utils/logging\";\nimport { SModelElementImpl } from \"../model/smodel\";\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\nimport { DOMHelper } from \"./dom-helper\";\nimport { getAttrs } from \"./vnode-utils\";\n\n@injectable()\nexport class IdPostprocessor implements IVNodePostprocessor {\n\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        const attrs = getAttrs(vnode);\n        if (attrs.id !== undefined)\n            this.logger.warn(vnode, 'Overriding id of vnode (' + attrs.id + '). Make sure not to set it manually in view.');\n        attrs.id = this.domHelper.createUniqueDOMElementId(element);\n        if (!vnode.key)\n            vnode.key = element.id;\n        return vnode;\n    }\n\n    postUpdate(): void {\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { IVNodePostprocessor } from \"./vnode-postprocessor\";\nimport { VNode } from \"snabbdom\";\nimport { getSubType } from 'sprotty-protocol/lib/utils/model-utils';\nimport { SModelElementImpl } from \"../model/smodel\";\nimport { setClass } from \"./vnode-utils\";\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport class CssClassPostprocessor implements IVNodePostprocessor {\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (element.cssClasses) {\n            for (const cssClass of element.cssClasses)\n                setClass(vnode, cssClass, true);\n        }\n        // append model subtype as class\n        const subType = getSubType(element);\n        if (subType && subType !== element.type) {\n            setClass(vnode, subType, true);\n        }\n        return vnode;\n    }\n\n    postUpdate(): void {\n        // empty\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"./types\";\nimport { CanvasBoundsInitializer, InitializeCanvasBoundsCommand } from './features/initialize-canvas';\nimport { LogLevel, NullLogger } from \"../utils/logging\";\nimport { ActionDispatcher, IActionDispatcher } from \"./actions/action-dispatcher\";\nimport { ActionHandlerRegistry, configureActionHandler } from \"./actions/action-handler\";\nimport { CommandStack, ICommandStack } from \"./commands/command-stack\";\nimport { CommandStackOptions } from \"./commands/command-stack-options\";\nimport { SModelFactory, SModelRegistry } from './model/smodel-factory';\nimport { AnimationFrameSyncer } from \"./animations/animation-frame-syncer\";\nimport { IViewer, ModelViewer, HiddenModelViewer, PopupModelViewer, ModelRenderer, PatcherProvider } from \"./views/viewer\";\nimport { ViewerOptions, defaultViewerOptions } from \"./views/viewer-options\";\nimport { MouseTool, PopupMouseTool, MousePositionTracker } from \"./views/mouse-tool\";\nimport { KeyTool } from \"./views/key-tool\";\nimport { FocusFixPostprocessor, IVNodePostprocessor } from \"./views/vnode-postprocessor\";\nimport { ViewRegistry, RenderingTargetKind, IViewArgs } from \"./views/view\";\nimport { ViewerCache } from \"./views/viewer-cache\";\nimport { DOMHelper } from \"./views/dom-helper\";\nimport { IdPostprocessor } from \"./views/id-postprocessor\";\nimport { configureCommand, CommandActionHandlerInitializer } from \"./commands/command-registration\";\nimport { CssClassPostprocessor } from \"./views/css-class-postprocessor\";\nimport { ToolManager, DefaultToolsEnablingKeyListener, ToolManagerActionHandler } from \"./tool-manager/tool-manager\";\nimport { EnableDefaultToolsAction, EnableToolsAction } from \"./tool-manager/tool\";\nimport { SetModelCommand } from \"./features/set-model\";\nimport { UIExtensionRegistry, SetUIExtensionVisibilityCommand } from \"./ui-extensions/ui-extension-registry\";\nimport { DefaultDiagramLocker } from \"./actions/diagram-locker\";\n\nconst defaultContainerModule = new ContainerModule((bind, _unbind, isBound) => {\n    // Logging ---------------------------------------------\n    bind(TYPES.ILogger).to(NullLogger).inSingletonScope();\n    bind(TYPES.LogLevel).toConstantValue(LogLevel.warn);\n\n    // Registries ---------------------------------------------\n    bind(TYPES.SModelRegistry).to(SModelRegistry).inSingletonScope();\n    bind(ActionHandlerRegistry).toSelf().inSingletonScope();\n    bind(TYPES.ActionHandlerRegistryProvider).toProvider<ActionHandlerRegistry>(ctx => {\n        return () => {\n            return new Promise<ActionHandlerRegistry>((resolve) => {\n                resolve(ctx.container.get<ActionHandlerRegistry>(ActionHandlerRegistry));\n            });\n        };\n    });\n    bind(TYPES.ViewRegistry).to(ViewRegistry).inSingletonScope();\n\n    // Model Creation ---------------------------------------------\n    bind(TYPES.IModelFactory).to(SModelFactory).inSingletonScope();\n\n    // Action Dispatcher ---------------------------------------------\n    bind(TYPES.IActionDispatcher).to(ActionDispatcher).inSingletonScope();\n    bind(TYPES.IActionDispatcherProvider).toProvider<IActionDispatcher>(ctx => {\n        return () => {\n            return new Promise<IActionDispatcher>((resolve) => {\n                resolve(ctx.container.get<IActionDispatcher>(TYPES.IActionDispatcher));\n            });\n        };\n    });\n    bind(TYPES.IDiagramLocker).to(DefaultDiagramLocker).inSingletonScope();\n\n    // Action handler\n    bind(TYPES.IActionHandlerInitializer).to(CommandActionHandlerInitializer);\n\n    // Command Stack ---------------------------------------------\n    bind(TYPES.ICommandStack).to(CommandStack).inSingletonScope();\n    bind(TYPES.ICommandStackProvider).toProvider<ICommandStack>(ctx => {\n        return () => {\n            return new Promise<ICommandStack>((resolve) => {\n                resolve(ctx.container.get<ICommandStack>(TYPES.ICommandStack));\n            });\n        };\n    });\n    bind<CommandStackOptions>(TYPES.CommandStackOptions).toConstantValue({\n        defaultDuration: 250,\n        undoHistoryLimit: 50\n    });\n\n    // Viewer ---------------------------------------------\n    bind(ModelViewer).toSelf().inSingletonScope();\n    bind(HiddenModelViewer).toSelf().inSingletonScope();\n    bind(PopupModelViewer).toSelf().inSingletonScope();\n    bind(TYPES.ModelViewer).toDynamicValue(ctx => {\n        const container = ctx.container.createChild();\n        container.bind(TYPES.IViewer).toService(ModelViewer);\n        container.bind(ViewerCache).toSelf();\n        return container.get(ViewerCache);\n    }).inSingletonScope();\n    bind(TYPES.PopupModelViewer).toDynamicValue(ctx => {\n        const container = ctx.container.createChild();\n        container.bind(TYPES.IViewer).toService(PopupModelViewer);\n        container.bind(ViewerCache).toSelf();\n        return container.get(ViewerCache);\n    }).inSingletonScope();\n    bind(TYPES.HiddenModelViewer).toService(HiddenModelViewer);\n    bind(TYPES.IViewerProvider).toDynamicValue(ctx => {\n        return {\n            get modelViewer() {\n                return ctx.container.get<IViewer>(TYPES.ModelViewer);\n            },\n            get hiddenModelViewer() {\n                return ctx.container.get<IViewer>(TYPES.HiddenModelViewer);\n            },\n            get popupModelViewer() {\n                return ctx.container.get<IViewer>(TYPES.PopupModelViewer);\n            }\n        };\n    });\n    bind<ViewerOptions>(TYPES.ViewerOptions).toConstantValue(defaultViewerOptions());\n    bind(TYPES.PatcherProvider).to(PatcherProvider).inSingletonScope();\n    bind(TYPES.DOMHelper).to(DOMHelper).inSingletonScope();\n    bind(TYPES.ModelRendererFactory).toFactory<ModelRenderer>(ctx => {\n        return (targetKind: RenderingTargetKind, processors: IVNodePostprocessor[], args: IViewArgs = {}) => {\n            const viewRegistry = ctx.container.get<ViewRegistry>(TYPES.ViewRegistry);\n            return new ModelRenderer(viewRegistry, targetKind, processors, args);\n        };\n    });\n\n    // Tools & Postprocessors --------------------------------------\n    bind(IdPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(IdPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).toService(IdPostprocessor);\n    bind(CssClassPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(CssClassPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).toService(CssClassPostprocessor);\n    bind(MouseTool).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(MouseTool);\n    bind(KeyTool).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(KeyTool);\n    bind(FocusFixPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(FocusFixPostprocessor);\n    bind(TYPES.PopupVNodePostprocessor).toService(IdPostprocessor);\n    bind(PopupMouseTool).toSelf().inSingletonScope();\n    bind(TYPES.PopupVNodePostprocessor).toService(PopupMouseTool);\n\n    // Animation Frame Sync ------------------------------------------\n    bind(TYPES.AnimationFrameSyncer).to(AnimationFrameSyncer).inSingletonScope();\n\n    // Canvas Initialization ---------------------------------------------\n    const context = { bind, isBound };\n    configureCommand(context, InitializeCanvasBoundsCommand);\n    bind(CanvasBoundsInitializer).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(CanvasBoundsInitializer);\n\n    // Model commands ---------------------------------------------\n    configureCommand(context, SetModelCommand);\n\n    // Tool manager initialization ------------------------------------\n    bind(TYPES.IToolManager).to(ToolManager).inSingletonScope();\n    bind(DefaultToolsEnablingKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(DefaultToolsEnablingKeyListener);\n    bind(ToolManagerActionHandler).toSelf().inSingletonScope();\n    configureActionHandler(context, EnableDefaultToolsAction.KIND, ToolManagerActionHandler);\n    configureActionHandler(context, EnableToolsAction.KIND, ToolManagerActionHandler);\n\n    // UIExtension registry initialization ------------------------------------\n    bind(TYPES.UIExtensionRegistry).to(UIExtensionRegistry).inSingletonScope();\n    configureCommand(context, SetUIExtensionVisibilityCommand);\n\n    // Tracker for last known mouse position on diagram ------------------------\n    bind(MousePositionTracker).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(MousePositionTracker);\n});\n\nexport default defaultContainerModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Dimension, isBounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElement as SModelElementSchema } from 'sprotty-protocol/lib/model';\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { DOMHelper } from '../../base/views/dom-helper';\nimport { ViewerOptions } from '../../base/views/viewer-options';\nimport { getWindowScroll } from '../../utils/browser';\nimport type { Locateable } from '../move/model';\n\nexport const boundsFeature = Symbol('boundsFeature');\nexport const layoutContainerFeature = Symbol('layoutContainerFeature');\nexport const layoutableChildFeature = Symbol('layoutableChildFeature');\nexport const alignFeature = Symbol('alignFeature');\n\n/**\n * Model elements that implement this interface have a position and a size.\n * Note that this definition differs from the one in `sprotty-protocol` because this is\n * used in the _internal model_, while the other is used in the _external model_.\n */\nexport interface BoundsAware extends SModelExtension {\n    bounds: Bounds\n}\n\n/**\n * Used to identify model elements that specify a layout to apply to their children.\n */\nexport interface LayoutContainer extends LayoutableChild {\n    layout: string\n}\n\nexport type ModelLayoutOptions = { [key: string]: string | number | boolean };\n\nexport interface LayoutableChild extends SModelExtension, BoundsAware {\n    layoutOptions?: ModelLayoutOptions\n}\n\n/**\n * Used to adjust elements whose bounding box is not at the origin, e.g.\n * labels, or pre-rendered SVG figures.\n */\nexport interface Alignable extends SModelExtension {\n    alignment: Point\n}\n\nexport function isBoundsAware(element: SModelElementImpl): element is SModelElementImpl & BoundsAware {\n    return 'bounds' in element;\n}\n\nexport function isLayoutContainer(element: SModelElementImpl): element is SParentElementImpl & LayoutContainer {\n    return isBoundsAware(element)\n        && element.hasFeature(layoutContainerFeature)\n        && 'layout' in element;\n}\n\nexport function isLayoutableChild(element: SModelElementImpl): element is SChildElementImpl & LayoutableChild {\n    return isBoundsAware(element)\n        && element.hasFeature(layoutableChildFeature);\n}\n\nexport function isSizeable(element: SModelElementImpl): element is SModelElementImpl & BoundsAware {\n    return element.hasFeature(boundsFeature) && isBoundsAware(element);\n}\n\nexport function isAlignable(element: SModelElementImpl): element is SModelElementImpl & Alignable {\n    return element.hasFeature(alignFeature)\n        && 'alignment' in element;\n}\n\nexport function getAbsoluteBounds(element: SModelElementImpl): Bounds {\n    const boundsAware = findParentByFeature(element, isBoundsAware);\n    if (boundsAware !== undefined) {\n        let bounds = boundsAware.bounds;\n        let current: SModelElementImpl = boundsAware;\n        while (current instanceof SChildElementImpl) {\n            const parent = current.parent;\n            bounds = parent.localToParent(bounds);\n            current = parent;\n        }\n        return bounds;\n    } else if (element instanceof SModelRootImpl) {\n        const canvasBounds = element.canvasBounds;\n        return { x: 0, y: 0, width: canvasBounds.width, height: canvasBounds.height };\n    } else {\n        return Bounds.EMPTY;\n    }\n}\n\n/**\n * Returns the \"client-absolute\" bounds of the specified `element`.\n *\n * The client-absolute bounds are relative to the entire browser page.\n *\n * @param element The element to get the bounds for.\n * @param domHelper The dom helper to obtain the SVG element's id.\n * @param viewerOptions The viewer options to obtain sprotty's container div id.\n */\nexport function getAbsoluteClientBounds(element: SModelElementImpl, domHelper: DOMHelper, viewerOptions: ViewerOptions): Bounds {\n    let x = 0;\n    let y = 0;\n    let width = 0;\n    let height = 0;\n\n    const svgElementId = domHelper.createUniqueDOMElementId(element);\n    const svgElement = document.getElementById(svgElementId);\n    if (svgElement) {\n        const rect = svgElement.getBoundingClientRect();\n        const scroll = getWindowScroll();\n        x = rect.left + scroll.x;\n        y = rect.top + scroll.y;\n        width = rect.width;\n        height = rect.height;\n    }\n\n    let container = document.getElementById(viewerOptions.baseDiv);\n    if (container) {\n        while (container.offsetParent instanceof HTMLElement\n            && (container = <HTMLElement>container.offsetParent)) {\n            x -= container.offsetLeft;\n            y -= container.offsetTop;\n        }\n    }\n\n    return { x, y, width, height };\n}\n\nexport function findChildrenAtPosition(parent: SParentElementImpl, point: Point): SModelElementImpl[] {\n    const matches: SModelElementImpl[] = [];\n    doFindChildrenAtPosition(parent, point, matches);\n    return matches;\n}\n\nfunction doFindChildrenAtPosition(parent: SParentElementImpl, point: Point, matches: SModelElementImpl[]) {\n    parent.children.forEach(child => {\n        if (isBoundsAware(child) && Bounds.includes(child.bounds, point))\n            matches.push(child);\n        if (child instanceof SParentElementImpl) {\n            const newPoint = child.parentToLocal(point);\n            doFindChildrenAtPosition(child, newPoint, matches);\n        }\n    });\n}\n\n/**\n * Abstract class for elements with a position and a size.\n */\nexport abstract class SShapeElementImpl extends SChildElementImpl implements BoundsAware, Locateable, LayoutableChild {\n\n    position: Point = Point.ORIGIN;\n    size: Dimension = Dimension.EMPTY;\n    layoutOptions?: ModelLayoutOptions;\n\n    get bounds(): Bounds {\n        return {\n            x: this.position.x,\n            y: this.position.y,\n            width: this.size.width,\n            height: this.size.height\n        };\n    }\n\n    set bounds(newBounds: Bounds) {\n        this.position = {\n            x: newBounds.x,\n            y: newBounds.y\n        };\n        this.size = {\n            width: newBounds.width,\n            height: newBounds.height\n        };\n    }\n\n    override localToParent(point: Point | Bounds): Bounds {\n        const result = {\n            x: point.x + this.position.x,\n            y: point.y + this.position.y,\n            width: -1,\n            height: -1\n        };\n        if (isBounds(point)) {\n            result.width = point.width;\n            result.height = point.height;\n        }\n        return result;\n    }\n\n    override parentToLocal(point: Point | Bounds): Bounds {\n        const result = {\n            x: point.x - this.position.x,\n            y: point.y - this.position.y,\n            width: -1,\n            height: -1\n        };\n        if (isBounds(point)) {\n            result.width = point.width;\n            result.height = point.height;\n        }\n        return result;\n    }\n\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/** @deprecated Use `SShapeElementImpl` instead. */\nexport const SShapeElement = SShapeElementImpl;\n\n/**\n * Serializable schema for SShapeElement.\n *\n * @deprecated Use `SShapeElement` from `sprotty-protocol` instead.\n */\nexport interface SShapeElementSchema extends SModelElementSchema {\n    position?: Point\n    size?: Dimension\n    layoutOptions?: ModelLayoutOptions\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action, generateRequestId, RequestAction, ResponseAction, ComputedBoundsAction as ProtocolComputedBoundsAction} from 'sprotty-protocol/lib/actions';\nimport * as protocol from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { Bounds, Dimension, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { CommandExecutionContext, CommandResult, CommandReturn, HiddenCommand, SystemCommand } from \"../../base/commands/command\";\nimport { SModelElementImpl } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { Alignable, BoundsAware, isBoundsAware } from './model';\n\nexport interface ResolvedElementAndBounds {\n    element: SModelElementImpl & BoundsAware\n    oldBounds: Bounds\n    newPosition?: Point\n    newSize: Dimension\n}\n\nexport interface ResolvedElementAndAlignment {\n    element: SModelElementImpl & Alignable\n    oldAlignment: Point\n    newAlignment: Point\n}\n\n@injectable()\nexport class SetBoundsCommand extends SystemCommand {\n    static readonly KIND: string = protocol.SetBoundsAction.KIND;\n\n    protected bounds: ResolvedElementAndBounds[] = [];\n\n    constructor(@inject(TYPES.Action) protected readonly action: protocol.SetBoundsAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.action.bounds.forEach(\n            b => {\n                const element = context.root.index.getById(b.elementId);\n                if (element && isBoundsAware(element)) {\n                    this.bounds.push({\n                        element: element,\n                        oldBounds: element.bounds,\n                        newPosition: b.newPosition,\n                        newSize: b.newSize\n                    });\n                }\n            }\n        );\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        this.bounds.forEach(\n            b => b.element.bounds = b.oldBounds\n        );\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        this.bounds.forEach(\n            b => {\n                if (b.newPosition)\n                    b.element.bounds = {\n                        ...b.newPosition,\n                        ...b.newSize,\n                    };\n                else\n                    // keep the position\n                    b.element.bounds = {\n                        x: b.element.bounds.x,\n                        y: b.element.bounds.y,\n                        ...b.newSize\n                    };\n            }\n        );\n        return context.root;\n    }\n}\n\n@injectable()\nexport class RequestBoundsCommand extends HiddenCommand {\n    static readonly KIND: string = protocol.RequestBoundsAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected action: protocol.RequestBoundsAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandResult {\n        return {\n            model: context.modelFactory.createRoot(this.action.newRoot),\n            modelChanged: true,\n            cause: this.action\n        };\n    }\n\n    get blockUntil(): (action: Action) => boolean {\n        return action => action.kind === ProtocolComputedBoundsAction.KIND;\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Sent from the model source (e.g. a DiagramServer) to the client to update the bounds of some\n * (or all) model elements.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SetBoundsAction implements Action, protocol.SetBoundsAction {\n    static readonly KIND = 'setBounds';\n    readonly kind = SetBoundsAction.KIND;\n\n    constructor(public readonly bounds: ElementAndBounds[]) {\n    }\n}\n\n/**\n * Sent from the model source to the client to request bounds for the given model. The model is\n * rendered invisibly so the bounds can derived from the DOM. The response is a ComputedBoundsAction.\n * This hidden rendering round-trip is necessary if the client is responsible for parts of the layout\n * (see `needsClientLayout` viewer option).\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class RequestBoundsAction implements RequestAction<ComputedBoundsAction>, protocol.RequestBoundsAction {\n    static readonly KIND = 'requestBounds';\n    readonly kind = RequestBoundsAction.KIND;\n\n    constructor(public readonly newRoot: SModelRootSchema,\n        public readonly requestId: string = '') { }\n\n    /** Factory function to dispatch a request with the `IActionDispatcher` */\n    static create(newRoot: SModelRootSchema): RequestAction<ComputedBoundsAction> {\n        return new RequestBoundsAction(newRoot, generateRequestId());\n    }\n}\n\n/**\n * Sent from the client to the model source (e.g. a DiagramServer) to transmit the result of bounds\n * computation as a response to a RequestBoundsAction. If the server is responsible for parts of\n * the layout (see `needsServerLayout` viewer option), it can do so after applying the computed bounds\n * received with this action. Otherwise there is no need to send the computed bounds to the server,\n * so they can be processed locally by the client.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class ComputedBoundsAction implements ResponseAction, protocol.ComputedBoundsAction {\n    static readonly KIND = 'computedBounds';\n    readonly kind = ComputedBoundsAction.KIND;\n\n    constructor(public readonly bounds: ElementAndBounds[],\n        public readonly revision?: number,\n        public readonly alignments?: ElementAndAlignment[],\n        public readonly responseId = '') { }\n}\n\n/**\n * Associates new bounds with a model element, which is referenced via its id.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ElementAndBounds extends protocol.ElementAndBounds {\n    elementId: string\n    newPosition?: Point\n    newSize: Dimension\n}\n\n/**\n * Associates a new alignment with a model element, which is referenced via its id.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ElementAndAlignment extends protocol.ElementAndAlignment{\n    elementId: string\n    newAlignment: Point\n}\n\n/**\n * Request a layout of the diagram or the selected elements only.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class LayoutAction implements Action, protocol.LayoutAction {\n    static readonly KIND = 'layout';\n    readonly kind = LayoutAction.KIND;\n\n    layoutType: string;\n    elementIds: string[];\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, interfaces, multiInject, optional } from \"inversify\";\nimport { Bounds } from \"sprotty-protocol/lib/utils/geometry\";\nimport { TYPES } from \"../../base/types\";\nimport { ILogger } from '../../utils/logging';\nimport { InstanceRegistry } from \"../../utils/registry\";\nimport { SParentElementImpl, SModelElementImpl } from \"../../base/model/smodel\";\nimport { isLayoutContainer, LayoutContainer } from \"./model\";\nimport { BoundsData } from \"./hidden-bounds-updater\";\nimport { isInjectable } from \"../../utils/inversify\";\n\n@injectable()\nexport class LayoutRegistry extends InstanceRegistry<ILayout> {\n\n    @inject(TYPES.ILogger) logger: ILogger;\n\n    constructor(@multiInject(TYPES.LayoutRegistration) @optional() layouts: (LayoutRegistration)[] = []) {\n        super();\n        layouts.forEach(layout => {\n            if (this.hasKey(layout.layoutKind)) {\n                this.logger.warn('Layout kind is already defined: ', layout.layoutKind);\n            } else {\n                this.register(layout.layoutKind, layout.factory());\n            }\n        });\n    }\n}\n\nexport interface LayoutRegistration {\n    layoutKind: string;\n    factory: () => ILayout;\n}\n\n@injectable()\nexport class Layouter {\n\n    @inject(TYPES.LayoutRegistry) protected layoutRegistry: LayoutRegistry;\n    @inject(TYPES.ILogger) protected logger: ILogger;\n\n    layout(element2boundsData: Map<SModelElementImpl\u200B\u200B , BoundsData>) {\n        new StatefulLayouter(element2boundsData, this.layoutRegistry, this.logger).layout();\n    }\n}\n\nexport class StatefulLayouter {\n\n    private toBeLayouted: (SParentElementImpl & LayoutContainer)[];\n\n    constructor(private readonly element2boundsData: Map<SModelElementImpl\u200B\u200B , BoundsData>,\n                private readonly layoutRegistry: LayoutRegistry,\n                public readonly log: ILogger) {\n        this.toBeLayouted = [];\n        element2boundsData.forEach(\n            (data, element) => {\n                if (isLayoutContainer(element))\n                    this.toBeLayouted.push(element);\n            });\n    }\n\n    getBoundsData(element: SModelElementImpl): BoundsData {\n        let boundsData = this.element2boundsData.get(element);\n        let bounds = (element as any).bounds;\n        if (isLayoutContainer(element) && this.toBeLayouted.indexOf(element) >= 0) {\n            bounds = this.doLayout(element);\n        }\n        if (!boundsData) {\n            boundsData = {\n                bounds: bounds,\n                boundsChanged: false,\n                alignmentChanged: false\n            };\n            this.element2boundsData.set(element, boundsData);\n        }\n        return boundsData;\n    }\n\n    layout(): void {\n        while (this.toBeLayouted.length > 0) {\n            const element = this.toBeLayouted[0];\n            this.doLayout(element);\n        }\n    }\n\n    protected doLayout(element: SParentElementImpl & LayoutContainer): Bounds {\n        const index = this.toBeLayouted.indexOf(element);\n        if (index >= 0)\n            this.toBeLayouted.splice(index, 1);\n        const layout = this.layoutRegistry.get(element.layout);\n        if (layout)\n            layout.layout(element, this);\n        const boundsData = this.element2boundsData.get(element);\n        if (boundsData !== undefined && boundsData.bounds !== undefined) {\n            return boundsData.bounds;\n        } else {\n            this.log.error(element, 'Layout failed');\n            return Bounds.EMPTY;\n        }\n    }\n}\n\nexport interface ILayout {\n    layout(container: SParentElementImpl & LayoutContainer,\n           layouter: StatefulLayouter): void\n}\n\n\nexport function configureLayout(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n    kind: string, constr: interfaces.ServiceIdentifier<ILayout>) {\n\n    if (typeof constr === 'function') {\n        if (!isInjectable(constr)) {\n            throw new Error(`Layouts be @injectable: ${constr.name}`);\n        }\n        if (!context.isBound(constr)) {\n            context.bind(constr).toSelf();\n        }\n    }\n    context.bind(TYPES.LayoutRegistration).toDynamicValue(ctx => ({\n        layoutKind: kind,\n        factory: () => ctx.container.get(constr)\n    }));\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { Action, ComputedBoundsAction, ElementAndAlignment, ElementAndBounds, RequestBoundsAction } from 'sprotty-protocol/lib/actions';\nimport { almostEquals, Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { isSVGGraphicsElement } from '../../utils/browser';\nimport { ILogger } from '../../utils/logging';\nimport { IActionDispatcher } from '../../base/actions/action-dispatcher';\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { TYPES } from '../../base/types';\nimport { IVNodePostprocessor } from '../../base/views/vnode-postprocessor';\nimport { Layouter } from './layout';\nimport { BoundsAware, isAlignable, isLayoutContainer, isSizeable } from './model';\n\nexport class BoundsData {\n    vnode?: VNode;\n    bounds?: Bounds;\n    alignment?: Point;\n    boundsChanged: boolean;\n    alignmentChanged: boolean;\n}\n\n/**\n * Grabs the bounds from hidden SVG DOM elements, applies layouts and fires\n * ComputedBoundsActions.\n *\n * The actual bounds of an element can usually not be determined from the SModel\n * as they depend on the view implementation and CSS stylings. So the best way is\n * to grab them from a live (but hidden) SVG using getBBox().\n *\n * If an element is Alignable, and the top-left corner of its bounding box is not\n * the origin, we also issue a realign with the ComputedBoundsAction.\n */\n@injectable()\nexport class HiddenBoundsUpdater implements IVNodePostprocessor {\n\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n    @inject(TYPES.Layouter) protected layouter: Layouter;\n\n    private readonly element2boundsData: Map<SModelElementImpl & BoundsAware, BoundsData> = new Map;\n\n    root: SModelRootImpl | undefined;\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (isSizeable(element) || isLayoutContainer(element)) {\n            this.element2boundsData.set(element, {\n                vnode: vnode,\n                bounds: element.bounds,\n                boundsChanged: false,\n                alignmentChanged: false\n            });\n        }\n        if (element instanceof SModelRootImpl) {\n            this.root = element;\n        }\n        return vnode;\n    }\n\n    postUpdate(cause?: Action) {\n        if (cause === undefined || cause.kind !== RequestBoundsAction.KIND) {\n            return;\n        }\n        const request = cause as RequestBoundsAction;\n        this.getBoundsFromDOM();\n        this.layouter.layout(this.element2boundsData);\n        const resizes: ElementAndBounds[] = [];\n        const alignments: ElementAndAlignment[] = [];\n        this.element2boundsData.forEach(\n            (boundsData, element) => {\n                if (boundsData.boundsChanged && boundsData.bounds !== undefined) {\n                    const resize: ElementAndBounds = {\n                        elementId: element.id,\n                        newSize: {\n                            width: boundsData.bounds.width,\n                            height: boundsData.bounds.height\n                        }\n                    };\n                    // don't copy position if the element is layouted by the server\n                    if (element instanceof SChildElementImpl && isLayoutContainer(element.parent)) {\n                        resize.newPosition = {\n                            x: boundsData.bounds.x,\n                            y: boundsData.bounds.y,\n                        };\n                    }\n                    resizes.push(resize);\n                }\n                if (boundsData.alignmentChanged && boundsData.alignment !== undefined) {\n                    alignments.push({\n                        elementId: element.id,\n                        newAlignment: boundsData.alignment\n                    });\n                }\n            });\n        const revision = (this.root !== undefined) ? this.root.revision : undefined;\n        this.actionDispatcher.dispatch(ComputedBoundsAction.create(resizes, { revision, alignments, requestId: request.requestId }));\n        this.element2boundsData.clear();\n    }\n\n    protected getBoundsFromDOM() {\n        this.element2boundsData.forEach(\n            (boundsData, element) => {\n                if (boundsData.bounds && isSizeable(element)) {\n                    const vnode = boundsData.vnode;\n                    if (vnode && vnode.elm) {\n                        const boundingBox = this.getBounds(vnode.elm, element);\n                        if (isAlignable(element) && !(\n                            almostEquals(boundingBox.x, 0) && almostEquals(boundingBox.y, 0)\n                        )) {\n                            boundsData.alignment = {\n                                x: -boundingBox.x,\n                                y: -boundingBox.y\n                            };\n                            boundsData.alignmentChanged = true;\n                        }\n                        const newBounds = {\n                            x: element.bounds.x,\n                            y: element.bounds.y,\n                            width: boundingBox.width,\n                            height: boundingBox.height\n                        };\n                        if (!(almostEquals(newBounds.x, element.bounds.x)\n                            && almostEquals(newBounds.y, element.bounds.y)\n                            && almostEquals(newBounds.width, element.bounds.width)\n                            && almostEquals(newBounds.height, element.bounds.height))) {\n                            boundsData.bounds = newBounds;\n                            boundsData.boundsChanged = true;\n                        }\n                    }\n                }\n            }\n        );\n    }\n\n    /**\n     * Compute the bounds of the given DOM element. Override this method to customize how\n     * the bounding box of a rendered view is determined.\n     *\n     * In case your Sprotty model element contains children that are rendered outside of\n     * their parent, you can add the `ATTR_BBOX_ELEMENT` attribute to the SVG element\n     * that shall be used to compute the bounding box.\n     */\n    protected getBounds(elm: Node, element: SModelElementImpl & BoundsAware): Bounds {\n        if (!isSVGGraphicsElement(elm)) {\n            this.logger.error(this, 'Not an SVG element:', elm);\n            return Bounds.EMPTY;\n        }\n        if (elm.tagName === 'g') {\n            for (const child of Array.from(elm.children)) {\n                if (child.getAttribute(ATTR_BBOX_ELEMENT) !== null) {\n                    return this.getBounds(child, element);\n                }\n            }\n        }\n        const bounds = elm.getBBox();\n        return {\n            x: bounds.x,\n            y: bounds.y,\n            width: bounds.width,\n            height: bounds.height\n        };\n    }\n}\n\n/**\n * Attribute name identifying the SVG element that determines the bounding box of a rendered view.\n * This can be used when a view creates a group of which only a part should contribute to the\n * bounding box computed by `HiddenBoundsUpdater`.\n */\nexport const ATTR_BBOX_ELEMENT = 'bboxElement';\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Dimension, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SParentElementImpl, SModelElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\nimport { isLayoutContainer, isLayoutableChild, LayoutContainer, isBoundsAware } from \"./model\";\nimport { ILayout, StatefulLayouter } from './layout';\nimport { AbstractLayoutOptions, HAlignment, VAlignment } from './layout-options';\nimport { BoundsData } from './hidden-bounds-updater';\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport abstract class AbstractLayout<T extends AbstractLayoutOptions> implements ILayout {\n\n    layout(container: SParentElementImpl & LayoutContainer,\n           layouter: StatefulLayouter) {\n        const boundsData = layouter.getBoundsData(container);\n        const options = this.getLayoutOptions(container);\n        const childrenSize = this.getChildrenSize(container, options, layouter);\n        const maxWidth = options.paddingFactor * (\n            options.resizeContainer\n            ? childrenSize.width\n            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).width) - options.paddingLeft - options.paddingRight);\n        const maxHeight =  options.paddingFactor * (\n            options.resizeContainer\n            ? childrenSize.height\n            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).height) - options.paddingTop - options.paddingBottom);\n        if (maxWidth > 0 && maxHeight > 0) {\n            const offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);\n            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);\n            boundsData.boundsChanged = true;\n        }\n    }\n    protected abstract layoutChild(child: SChildElementImpl,\n                                boundsData: BoundsData, bounds: Bounds,\n                                childOptions: T, containerOptions: T,\n                                currentOffset: Point,\n                                maxWidth: number, maxHeight: number): Point;\n\n    protected getFinalContainerBounds(container: SParentElementImpl & LayoutContainer,\n                                    lastOffset: Point,\n                                    options: T,\n                                    maxWidth: number,\n                                    maxHeight: number): Bounds {\n        return {\n            x: container.bounds.x,\n            y: container.bounds.y,\n            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),\n            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)\n        };\n    }\n\n    protected getFixedContainerBounds(\n            container: SModelElementImpl,\n            layoutOptions: T,\n            layouter: StatefulLayouter): Bounds {\n        let currentContainer = container;\n        while (true) {\n            if (isBoundsAware(currentContainer)) {\n                const bounds = currentContainer.bounds;\n                if (isLayoutContainer(currentContainer) && layoutOptions.resizeContainer)\n                    layouter.log.error(currentContainer, 'Resizable container found while detecting fixed bounds');\n                if (Dimension.isValid(bounds))\n                    return bounds;\n            }\n            if (currentContainer instanceof SChildElementImpl) {\n                currentContainer = currentContainer.parent;\n            } else {\n                layouter.log.error(currentContainer, 'Cannot detect fixed bounds');\n                return Bounds.EMPTY;\n            }\n        }\n    }\n\n    protected abstract getChildrenSize(container: SParentElementImpl & LayoutContainer,\n                               containerOptions: T,\n                               layouter: StatefulLayouter): Dimension;\n\n    protected layoutChildren(container: SParentElementImpl & LayoutContainer,\n                            layouter: StatefulLayouter,\n                            containerOptions: T,\n                            maxWidth: number,\n                            maxHeight: number): Point {\n        let currentOffset: Point = {\n            x: containerOptions.paddingLeft + 0.5 * (maxWidth - (maxWidth / containerOptions.paddingFactor)),\n            y: containerOptions.paddingTop + 0.5 * (maxHeight - (maxHeight / containerOptions.paddingFactor))};\n        container.children.forEach(\n            child => {\n                if (isLayoutableChild(child)) {\n                    const boundsData = layouter.getBoundsData(child);\n                    const bounds = boundsData.bounds;\n                    const childOptions = this.getChildLayoutOptions(child, containerOptions);\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\n                        currentOffset = this.layoutChild(child, boundsData, bounds,\n                            childOptions, containerOptions, currentOffset,\n                            maxWidth, maxHeight);\n                    }\n                }\n            }\n        );\n        return currentOffset;\n    }\n\n    protected getDx(hAlign: HAlignment, bounds: Bounds, maxWidth: number): number {\n        switch (hAlign) {\n            case 'left':\n                return 0;\n            case 'center':\n                return 0.5 * (maxWidth - bounds.width);\n            case 'right':\n                return maxWidth - bounds.width;\n        }\n    }\n\n    protected getDy(vAlign: VAlignment, bounds: Bounds, maxHeight: number): number {\n        switch (vAlign) {\n            case 'top':\n                return 0;\n            case 'center':\n                return 0.5 * (maxHeight - bounds.height);\n            case 'bottom':\n                return maxHeight - bounds.height;\n        }\n    }\n\n    protected getChildLayoutOptions(child: SChildElementImpl, containerOptions: T): T {\n        const layoutOptions = (child as any).layoutOptions;\n        if (layoutOptions === undefined)\n            return containerOptions;\n        else\n            return this.spread(containerOptions, layoutOptions);\n    }\n\n    protected getLayoutOptions(element: SModelElementImpl): T {\n        let current = element;\n        const allOptions: T[] = [];\n        while (current !== undefined) {\n            const layoutOptions = (current as any).layoutOptions;\n            if (layoutOptions !== undefined)\n                allOptions.push(layoutOptions);\n            if (current instanceof SChildElementImpl)\n                current = current.parent;\n            else\n                break;\n        }\n        return allOptions.reverse().reduce(\n            (a, b) => { return this.spread(a, b); }, this.getDefaultLayoutOptions());\n    }\n\n    protected abstract getDefaultLayoutOptions(): T;\n\n    protected abstract spread(a: T, b: T): T;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SParentElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\nimport { AbstractLayout } from './abstract-layout';\nimport { AbstractLayoutOptions, HAlignment } from './layout-options';\nimport { BoundsData } from './hidden-bounds-updater';\nimport { LayoutContainer, isLayoutableChild } from './model';\nimport { StatefulLayouter } from './layout';\n\nexport interface VBoxLayoutOptions extends AbstractLayoutOptions {\n    vGap: number\n    hAlign: HAlignment\n}\n\n/**\n * Layouts children of a container in vertical (top->bottom) direction.\n */\n@injectable()\nexport class VBoxLayouter extends AbstractLayout<VBoxLayoutOptions> {\n\n    static KIND = 'vbox';\n\n    protected getChildrenSize(container: SParentElementImpl & LayoutContainer,\n                               containerOptions: VBoxLayoutOptions,\n                               layouter: StatefulLayouter) {\n        let maxWidth = -1;\n        let maxHeight = 0;\n        let isFirst = true;\n        container.children.forEach(\n            child => {\n                if (isLayoutableChild(child)) {\n                    const bounds = layouter.getBoundsData(child).bounds;\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\n                        maxHeight += bounds.height;\n                        if (isFirst)\n                            isFirst = false;\n                        else\n                            maxHeight += containerOptions.vGap;\n                        maxWidth = Math.max(maxWidth, bounds.width);\n                    }\n                }\n            }\n        );\n        return {\n            width: maxWidth,\n            height: maxHeight\n        };\n    }\n\n    protected layoutChild(child: SChildElementImpl,\n                        boundsData: BoundsData,\n                        bounds: Bounds,\n                        childOptions: VBoxLayoutOptions,\n                        containerOptions: VBoxLayoutOptions,\n                        currentOffset: Point,\n                        maxWidth: number,\n                        maxHeight: number) {\n        const dx = this.getDx(childOptions.hAlign, bounds, maxWidth);\n        boundsData.bounds = {\n            x: containerOptions.paddingLeft + (child as any).bounds.x - bounds.x + dx,\n            y: currentOffset.y + (child as any).bounds.y - bounds.y,\n            width: bounds.width,\n            height: bounds.height\n        };\n        boundsData.boundsChanged = true;\n        return {\n            x: currentOffset.x,\n            y: currentOffset.y + bounds.height + containerOptions.vGap\n        };\n    }\n\n    protected getDefaultLayoutOptions(): VBoxLayoutOptions {\n        return {\n            resizeContainer: true,\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingFactor: 1,\n            vGap: 1,\n            hAlign: 'center',\n            minWidth: 0,\n            minHeight: 0\n        };\n    }\n\n    protected spread(a: VBoxLayoutOptions, b: VBoxLayoutOptions): VBoxLayoutOptions {\n        return { ...a, ...b };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SParentElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\nimport { AbstractLayout } from './abstract-layout';\nimport { AbstractLayoutOptions, VAlignment } from './layout-options';\nimport { BoundsData } from './hidden-bounds-updater';\nimport { LayoutContainer, isLayoutableChild } from './model';\nimport { StatefulLayouter } from './layout';\n\nexport interface HBoxLayoutOptions extends AbstractLayoutOptions {\n    hGap: number\n    vAlign: VAlignment\n}\n\n/**\n * Layouts children of a container in horizontal (left->right) direction.\n */\n@injectable()\nexport class HBoxLayouter extends AbstractLayout<HBoxLayoutOptions> {\n\n    static KIND = 'hbox';\n\n    protected getChildrenSize(container: SParentElementImpl & LayoutContainer,\n                               containerOptions: HBoxLayoutOptions,\n                               layouter: StatefulLayouter) {\n        let maxWidth = 0;\n        let maxHeight = -1;\n        let isFirst = true;\n        container.children.forEach(\n            child => {\n                if (isLayoutableChild(child)) {\n                    const bounds = layouter.getBoundsData(child).bounds;\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\n                        if (isFirst)\n                            isFirst = false;\n                        else\n                            maxWidth += containerOptions.hGap;\n                        maxWidth += bounds.width;\n                        maxHeight = Math.max(maxHeight, bounds.height);\n                    }\n                }\n            }\n        );\n        return {\n            width: maxWidth,\n            height: maxHeight\n        };\n    }\n\n    protected layoutChild(child: SChildElementImpl,\n                        boundsData: BoundsData,\n                        bounds: Bounds,\n                        childOptions: HBoxLayoutOptions,\n                        containerOptions: HBoxLayoutOptions,\n                        currentOffset: Point,\n                        maxWidth: number,\n                        maxHeight: number): Point {\n        const dy = this.getDy(childOptions.vAlign, bounds, maxHeight);\n        boundsData.bounds = {\n            x: currentOffset.x + (child as any).bounds.x - bounds.x,\n            y: containerOptions.paddingTop + (child as any).bounds.y - bounds.y + dy,\n            width: bounds.width,\n            height: bounds.height\n        };\n        boundsData.boundsChanged = true;\n        return {\n            x: currentOffset.x + bounds.width + containerOptions.hGap,\n            y: currentOffset.y\n        };\n    }\n\n    protected getDefaultLayoutOptions(): HBoxLayoutOptions {\n        return {\n            resizeContainer: true,\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingFactor: 1,\n            hGap: 1,\n            vAlign: 'center',\n            minWidth: 0,\n            minHeight: 0\n        };\n    }\n\n    protected spread(a: HBoxLayoutOptions, b: HBoxLayoutOptions): HBoxLayoutOptions {\n        return { ...a, ...b };\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Bounds, Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SParentElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\nimport { AbstractLayout } from './abstract-layout';\nimport { AbstractLayoutOptions, HAlignment, VAlignment } from './layout-options';\nimport { BoundsData } from './hidden-bounds-updater';\nimport { LayoutContainer, isLayoutableChild } from './model';\nimport { StatefulLayouter } from './layout';\n\nexport interface StackLayoutOptions extends AbstractLayoutOptions {\n    paddingFactor: number\n    vAlign: VAlignment\n    hAlign: HAlignment\n}\n\n@injectable()\nexport class StackLayouter extends AbstractLayout<StackLayoutOptions> {\n\n    static KIND = 'stack';\n\n    protected getChildrenSize(container: SParentElementImpl & LayoutContainer,\n                            options: StackLayoutOptions,\n                            layouter: StatefulLayouter) {\n        let maxWidth = -1;\n        let maxHeight = -1;\n        container.children.forEach(\n            child => {\n                if (isLayoutableChild(child)) {\n                    const bounds = layouter.getBoundsData(child).bounds;\n                    if (bounds !== undefined && Dimension.isValid(bounds)) {\n                        maxWidth = Math.max(maxWidth, bounds.width);\n                        maxHeight = Math.max(maxHeight, bounds.height);\n                    }\n                }\n            }\n        );\n        return {\n            width: maxWidth,\n            height: maxHeight\n        };\n    }\n\n    protected layoutChild(child: SChildElementImpl,\n                        boundsData: BoundsData,\n                        bounds: Bounds,\n                        childOptions: StackLayoutOptions,\n                        containerOptions: StackLayoutOptions,\n                        currentOffset: Point,\n                        maxWidth: number, maxHeight: number): Point {\n        const dx = this.getDx(childOptions.hAlign, bounds, maxWidth);\n        const dy = this.getDy(childOptions.vAlign, bounds, maxHeight);\n        boundsData.bounds = {\n            x: containerOptions.paddingLeft + (child as any).bounds.x - bounds.x + dx,\n            y: containerOptions.paddingTop + (child as any).bounds.y - bounds.y + dy,\n            width: bounds.width,\n            height: bounds.height\n        };\n        boundsData.boundsChanged = true;\n        return currentOffset;\n    }\n\n    protected getDefaultLayoutOptions(): StackLayoutOptions {\n        return {\n            resizeContainer: true,\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingFactor: 1,\n            hAlign: 'center',\n            vAlign: 'center',\n            minWidth: 0,\n            minHeight: 0\n        };\n    }\n\n    protected spread(a: StackLayoutOptions, b: StackLayoutOptions): StackLayoutOptions {\n        return { ...a, ...b };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { Dimension } from 'sprotty-protocol/lib/utils/geometry';\nimport { IViewArgs, IView, RenderingContext } from '../../base/views/view';\nimport { getAbsoluteBounds, BoundsAware } from './model';\nimport { SChildElementImpl } from '../../base/model/smodel';\n\n@injectable()\nexport abstract class ShapeView implements IView {\n\n    /**\n     * Check whether the given model element is in the current viewport. Use this method\n     * in your `render` implementation to skip rendering in case the element is not visible.\n     * This can greatly enhance performance for large models.\n     */\n    isVisible(model: Readonly<SChildElementImpl & BoundsAware>, context: RenderingContext): boolean {\n        if (context.targetKind === 'hidden') {\n            // Don't hide any element for hidden rendering\n            return true;\n        }\n        if (!Dimension.isValid(model.bounds)) {\n            // We should hide only if we know the element's bounds\n            return true;\n        }\n        const ab = getAbsoluteBounds(model);\n        const canvasBounds = model.root.canvasBounds;\n        return ab.x <= canvasBounds.width\n            && ab.x + ab.width >= 0\n            && ab.y <= canvasBounds.height\n            && ab.y + ab.height >= 0;\n    }\n\n    abstract render(model: Readonly<SChildElementImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined;\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, interfaces, multiInject, optional } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { InstanceRegistry } from '../../utils/registry';\nimport { TYPES } from '../../base/types';\nimport { SButtonImpl } from './model';\nimport { isInjectable } from '../../utils/inversify';\n\nexport interface IButtonHandler {\n    buttonPressed(button: SButtonImpl): (Action | Promise<Action>)[]\n}\n\n/** @deprecated deprecated since 0.12.0 - please use `configureButtonHandler` */\nexport interface IButtonHandlerFactory {\n    TYPE: string\n    new(): IButtonHandler\n}\n\nexport interface IButtonHandlerRegistration {\n    TYPE: string\n    factory: () => IButtonHandler\n}\n\n@injectable()\nexport class ButtonHandlerRegistry extends InstanceRegistry<IButtonHandler> {\n\n    constructor(\n        @multiInject(TYPES.IButtonHandlerRegistration)@optional() buttonHandlerRegistrations: IButtonHandlerRegistration[],\n        // deprecated, but keep support for now\n        @multiInject(TYPES.IButtonHandler)@optional() buttonHandlerFactories: IButtonHandlerFactory[]) {\n        super();\n        buttonHandlerRegistrations.forEach(factory => this.register(factory.TYPE, factory.factory()));\n        // deprecated, but keep support for now\n        buttonHandlerFactories.forEach(factory => this.register(factory.TYPE, new factory()));\n    }\n}\n\n/**\n * Utility function to register a button handler for an button type.\n */\nexport function configureButtonHandler(context: { bind: interfaces.Bind, isBound: interfaces.IsBound },\n    type: string, constr: interfaces.ServiceIdentifier<IButtonHandler>): void {\n    if (typeof constr === 'function') {\n        if (!isInjectable(constr)) {\n            throw new Error(`Button handlers should be @injectable: ${constr.name}`);\n        }\n        if (!context.isBound(constr)) {\n            context.bind(constr).toSelf();\n        }\n    }\n    context.bind(TYPES.IButtonHandlerRegistration).toDynamicValue(ctx => ({\n        TYPE: type,\n        factory: () => ctx.container.get(constr)\n    }));\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const fadeFeature = Symbol('fadeFeature');\n\nexport interface Fadeable extends SModelExtension {\n    opacity: number\n}\n\nexport function isFadeable(element: SModelElementImpl): element is SModelElementImpl & Fadeable {\n    return element.hasFeature(fadeFeature) && (element as any)['opacity'] !== undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { boundsFeature, layoutableChildFeature, SShapeElementImpl } from '../bounds/model';\nimport { fadeFeature } from '../fade/model';\nimport { SShapeElement as SShapeElementSchema } from 'sprotty-protocol';\n\nexport interface SButtonSchema extends SShapeElementSchema {\n    pressed: boolean\n    enabled: boolean\n}\n\nexport class SButtonImpl extends SShapeElementImpl {\n    static readonly DEFAULT_FEATURES = [boundsFeature, layoutableChildFeature, fadeFeature];\n\n    enabled = true;\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/** @deprecated Use `SButtonImpl` instead. */\nexport const SButton = SButtonImpl;\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const nameFeature = Symbol('nameableFeature');\n\nexport interface Nameable extends SModelExtension {\n    name: string\n}\n\nexport function isNameable(element: SModelElementImpl): element is SModelElementImpl & Nameable {\n    return element.hasFeature(nameFeature);\n}\n\nexport function name(element: SModelElementImpl): string|undefined {\n    if (isNameable(element)) {\n        return element.name;\n    } else {\n        return undefined;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, multiInject, optional } from \"inversify\";\nimport { CenterAction, SelectAction, SelectAllAction } from \"sprotty-protocol/lib/actions\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { LabeledAction } from \"../../base/actions/action\";\nimport { SModelRootImpl } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { toArray } from \"../../utils/iterable\";\nimport { ILogger } from \"../../utils/logging\";\nimport { isNameable, name } from \"../nameable/model\";\n\nexport interface ICommandPaletteActionProvider {\n    getActions(root: Readonly<SModelRootImpl>, text: string, lastMousePosition?: Point, index?: number): Promise<LabeledAction[]>;\n}\n\n@injectable()\nexport class CommandPaletteActionProviderRegistry implements ICommandPaletteActionProvider {\n\n    constructor(@multiInject(TYPES.ICommandPaletteActionProvider) @optional() protected actionProviders: ICommandPaletteActionProvider[] = []) {\n    }\n\n    getActions(root: Readonly<SModelRootImpl>, text: string, lastMousePosition?: Point, index?: number) {\n        const actionLists = this.actionProviders.map(provider => provider.getActions(root, text, lastMousePosition, index));\n        return Promise.all(actionLists).then(p => p.reduce((acc, promise) => promise !== undefined ? acc.concat(promise) : acc));\n    }\n}\n\n@injectable()\nexport class RevealNamedElementActionProvider implements ICommandPaletteActionProvider {\n\n    constructor(@inject(TYPES.ILogger) protected logger: ILogger) { }\n\n    getActions(root: Readonly<SModelRootImpl>, text: string, lastMousePosition?: Point, index?: number) {\n        if (index !== undefined && index % 2 === 0)\n            return Promise.resolve(this.createSelectActions(root));\n        else\n            return Promise.resolve([new LabeledAction(\"Select all\", [SelectAllAction.create()])]);\n    }\n\n    createSelectActions(modelRoot: SModelRootImpl): LabeledAction[] {\n        const nameables = toArray(modelRoot.index.all().filter(element => isNameable(element)));\n        return nameables.map(nameable => new LabeledAction(`Reveal ${name(nameable)}`,\n            [SelectAction.create({ selectedElementsIDs: [nameable.id] }), CenterAction.create([nameable.id])], 'eye'));\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport const ACTION_ITEM = 'action-item';\nexport const ANIMATION_SPIN = 'animation-spin';\n\nexport function codiconCSSString(codiconId: string, actionItem = false, animationSpin = false, additionalCSS: string[] = []): string {\n    return codiconCSSClasses(codiconId, actionItem, animationSpin, additionalCSS).join(' ');\n}\n\nexport function codiconCSSClasses(codiconId: string, actionItem = false, animationSpin = false, additionalCSS: string[] = []): string[] {\n    const cssClassArray = ['codicon', `codicon-${codiconId}`];\n    if (actionItem) {\n        cssClassArray.push(ACTION_ITEM);\n    }\n    if (animationSpin) {\n        cssClassArray.push(ANIMATION_SPIN);\n    }\n    if (additionalCSS.length > 0) {\n        cssClassArray.push(...additionalCSS);\n    }\n    return cssClassArray;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const selectFeature = Symbol('selectFeature');\n\nexport interface Selectable extends SModelExtension {\n    selected: boolean\n}\n\nexport function isSelectable(element: SModelElementImpl): element is SModelElementImpl & Selectable {\n    return element.hasFeature(selectFeature);\n}\n\nexport function isSelected(element: SModelElementImpl | undefined): element is SModelElementImpl & Selectable {\n    return element !== undefined && isSelectable(element) && element.selected;\n}\n", "/*\n * https://github.com/kraaden/autocomplete\n * Copyright (c) 2016 Denys Krasnoshchok\n * MIT License\n */\n\nexport const enum EventTrigger {\n    Keyboard = 0,\n    Focus = 1\n}\n\nexport interface AutocompleteItem {\n    label?: string;\n    group?: string;\n}\n\nexport interface AutocompleteSettings<T extends AutocompleteItem> {\n    /**\n     * Autocomplete will be attached to this element.\n     */\n    input: HTMLInputElement | HTMLTextAreaElement;\n\n    /**\n     * Provide your own container for the widget.\n     * If not specified, a new DIV element will be created.\n     */\n    container?: HTMLDivElement;\n\n    /**\n     * This method allows you to override the default rendering function for items.\n     * It must return a DIV element or undefined to skip rendering.\n     */\n    render?: (item: T, currentValue: string, index: number) => HTMLDivElement | undefined;\n\n    /**\n     * This method allows you to override the default rendering function for item groups.\n     * It must return a DIV element or undefined to skip rendering.\n     */\n    renderGroup?: (name: string, currentValue: string) => HTMLDivElement | undefined;\n\n    /**\n     * If specified, the autocomplete DOM element will have this class assigned to it.\n     */\n    className?: string;\n\n    /**\n     * Specify the minimum text length required to show autocomplete.\n     */\n    minLength?: number;\n\n    /**\n     * The message that will be showed when there are no suggestions that match the entered value.\n     */\n    emptyMsg?: string;\n\n    /**\n     * This method will be called when user choose an item in autocomplete. The selected item will be passed as the first parameter.\n     */\n    onSelect: (item: T, input: HTMLInputElement | HTMLTextAreaElement) => void;\n\n    /**\n     * Show autocomplete on focus event. Focus event will ignore the `minLength` property and will always call `fetch`.\n     */\n    showOnFocus?: boolean;\n\n    /**\n     * This method will be called to prepare suggestions and then pass them to autocomplete.\n     * @param {string} text - text in the input field\n     * @param {(items: T[] | false) => void} update - a callback function that must be called after suggestions are prepared\n     * @param {EventTrigger} trigger - type of the event that triggered the fetch\n     * @param {number} cursorPos - position of the cursor in the input field\n     */\n    fetch: (text: string, update: (items: T[] | false) => void, trigger: EventTrigger, cursorPos: number) => void;\n\n    /**\n     * Enforces that the fetch function will only be called once within the specified time frame (in milliseconds) and\n     * delays execution. This prevents flooding your server with AJAX requests.\n     */\n    debounceWaitMs?: number;\n\n    /**\n     * Callback for additional autocomplete customization\n     * @param {HTMLInputElement | HTMLTextAreaElement} input - input box associated with autocomplete\n     * @param {ClientRect | DOMRect} inputRect - size of the input box and its position relative to the viewport\n     * @param {HTMLDivElement} container - container with suggestions\n     * @param {number} maxHeight - max height that can be used by autocomplete\n     */\n    customize?: (input: HTMLInputElement | HTMLTextAreaElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => void;\n\n    /**\n     * Prevents automatic form submit when ENTER is pressed\n     */\n    preventSubmit?: boolean;\n\n    /**\n     * Prevents the first item in the list from being selected automatically. This option allows you\n     * to submit a custom text by pressing ENTER even when autocomplete is displayed.\n     */\n    disableAutoSelect?: boolean;\n\n    /**\n     * Keys that will be ignored and not trigger the fetch callback.\n     */\n    keysToIgnore?: Keys[];\n}\n\nexport interface AutocompleteResult {\n    destroy: () => void;\n}\n\nexport const enum Keys {\n    Enter = 13,\n    Esc = 27,\n    Up = 38,\n    Down = 40,\n    Left = 37,\n    Right = 39,\n    Shift = 16,\n    Ctrl = 17,\n    Alt = 18,\n    CapsLock = 20,\n    WindowsKey = 91,\n    Tab = 9,\n    F1 = 112,\n    F12 = 123\n}\n\nexport default function autocomplete<T extends AutocompleteItem>(settings: AutocompleteSettings<T>): AutocompleteResult {\n\n    // just an alias to minimize JS file size\n    const doc = document;\n\n    const container: HTMLDivElement = settings.container || doc.createElement(\"div\");\n    container.id = container.id || \"autocomplete-\" + uid();\n    const containerStyle = container.style;\n    const debounceWaitMs = settings.debounceWaitMs || 0;\n    const preventSubmit = settings.preventSubmit || false;\n    const disableAutoSelect = settings.disableAutoSelect || false;\n\n    let items: T[] = [];\n    let inputValue = \"\";\n    let minLen = 2;\n    const showOnFocus = settings.showOnFocus;\n    let selected: T | undefined;\n    let keypressCounter = 0;\n    let debounceTimer: number | undefined;\n\n    if (settings.minLength !== undefined) {\n        minLen = settings.minLength;\n    }\n\n    if (!settings.input) {\n        throw new Error(\"input undefined\");\n    }\n\n    const input: HTMLInputElement | HTMLTextAreaElement = settings.input;\n\n    container.className = \"autocomplete \" + (settings.className || \"\");\n    container.setAttribute(\"role\", \"listbox\");\n\n    input.setAttribute(\"role\", \"combobox\");\n    input.setAttribute(\"aria-expanded\", \"false\");\n    input.setAttribute(\"aria-autocomplete\", \"list\");\n    input.setAttribute(\"aria-controls\", container.id);\n    input.setAttribute(\"aria-owns\", container.id);\n    input.setAttribute(\"aria-activedescendant\", \"\");\n    input.setAttribute(\"aria-haspopup\", \"listbox\");\n\n    // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\n    containerStyle.position = \"absolute\";\n\n    /**\n     * Generate a unique ID\n     */\n    function uid(): string {\n        return Date.now().toString(36) + Math.random().toString(36).substring(2);\n    }\n\n    /**\n     * Detach the container from DOM\n     */\n    function detach(): void {\n        const parent = container.parentNode;\n        if (parent) {\n            parent.removeChild(container);\n        }\n    }\n\n    /**\n     * Clear debouncing timer if assigned\n     */\n    function clearDebounceTimer(): void {\n        if (debounceTimer) {\n            window.clearTimeout(debounceTimer);\n        }\n    }\n\n    /**\n     * Attach the container to DOM\n     */\n    function attach(): void {\n        if (!container.parentNode) {\n            doc.body.appendChild(container);\n        }\n    }\n\n    /**\n     * Check if container for autocomplete is displayed\n     */\n    function containerDisplayed(): boolean {\n        return !!container.parentNode;\n    }\n\n    /**\n     * Clear autocomplete state and hide container\n     */\n    function clear(): void {\n        // prevent the update call if there are pending AJAX requests\n        keypressCounter++;\n\n        items = [];\n        inputValue = \"\";\n        selected = undefined;\n        input.setAttribute(\"aria-activedescendant\", \"\");\n        input.setAttribute(\"aria-expanded\", \"false\");\n        detach();\n    }\n\n    /**\n     * Update autocomplete position\n     */\n    function updatePosition(): void {\n        if (!containerDisplayed()) {\n            return;\n        }\n\n        input.setAttribute(\"aria-expanded\", \"true\");\n\n        containerStyle.height = \"auto\";\n        containerStyle.width = input.offsetWidth + \"px\";\n\n        let maxHeight = 0;\n        let inputRect: ClientRect | DOMRect | undefined;\n\n        function calc() {\n            const docEl = doc.documentElement as HTMLElement;\n            const clientTop = docEl.clientTop || doc.body.clientTop || 0;\n            const clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;\n            const scrollTop = window.pageYOffset || docEl.scrollTop;\n            const scrollLeft = window.pageXOffset || docEl.scrollLeft;\n\n            inputRect = input.getBoundingClientRect();\n\n            const top = inputRect.top + input.offsetHeight + scrollTop - clientTop;\n            const left = inputRect.left + scrollLeft - clientLeft;\n\n            containerStyle.top = top + \"px\";\n            containerStyle.left = left + \"px\";\n\n            maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\n\n            if (maxHeight < 0) {\n                maxHeight = 0;\n            }\n\n            containerStyle.top = top + \"px\";\n            containerStyle.bottom = \"\";\n            containerStyle.left = left + \"px\";\n            containerStyle.maxHeight = maxHeight + \"px\";\n        }\n\n        // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)\n        calc();\n        calc();\n\n        if (settings.customize && inputRect) {\n            settings.customize(input, inputRect, container, maxHeight);\n        }\n    }\n\n    /**\n     * Redraw the autocomplete div element with suggestions\n     */\n    function update(): void {\n\n        // delete all children from autocomplete DOM container\n        while (container.firstChild) {\n            container.removeChild(container.firstChild);\n        }\n\n        input.setAttribute(\"aria-activedescendant\", \"\");\n\n        // function for rendering autocomplete suggestions\n        let render = function (item: T, _: string, __: number): HTMLDivElement | undefined {\n            const itemElement = doc.createElement(\"div\");\n            itemElement.textContent = item.label || \"\";\n            return itemElement;\n        };\n        if (settings.render) {\n            render = settings.render;\n        }\n\n        // function to render autocomplete groups\n        let renderGroup = function (groupName: string, _: string): HTMLDivElement | undefined {\n            const groupDiv = doc.createElement(\"div\");\n            groupDiv.textContent = groupName;\n            return groupDiv;\n        };\n        if (settings.renderGroup) {\n            renderGroup = settings.renderGroup;\n        }\n\n        const fragment = doc.createDocumentFragment();\n        let prevGroup = \"#9?$\";\n\n        items.forEach(function (item: T, index: number): void {\n            if (item.group && item.group !== prevGroup) {\n                prevGroup = item.group;\n                const groupDiv = renderGroup(item.group, inputValue);\n                if (groupDiv) {\n                    groupDiv.className += \" group\";\n                    fragment.appendChild(groupDiv);\n                }\n            }\n            const div = render(item, inputValue, index);\n            if (div) {\n                div.id = `${container.id}_${index}`;\n                div.setAttribute(\"role\", \"option\");\n                div.addEventListener(\"click\", function (ev: MouseEvent): void {\n                    settings.onSelect(item, input);\n                    clear();\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                });\n                if (item === selected) {\n                    div.className += \" selected\";\n                    div.setAttribute(\"aria-selected\", \"true\");\n                    input.setAttribute(\"aria-activedescendant\", div.id);\n                }\n                fragment.appendChild(div);\n            }\n        });\n        container.appendChild(fragment);\n        if (items.length < 1) {\n            if (settings.emptyMsg) {\n                const empty = doc.createElement(\"div\");\n                empty.id = `${container.id}_${uid()}`;\n                empty.className = \"empty\";\n                empty.textContent = settings.emptyMsg;\n                container.appendChild(empty);\n                input.setAttribute(\"aria-activedescendant\", empty.id);\n            } else {\n                clear();\n                return;\n            }\n        }\n\n        attach();\n        updatePosition();\n\n        updateScroll();\n    }\n\n    function updateIfDisplayed(): void {\n        if (containerDisplayed()) {\n            update();\n        }\n    }\n\n    function resizeEventHandler(): void {\n        updateIfDisplayed();\n    }\n\n    function scrollEventHandler(e: Event): void {\n        if (e.target !== container) {\n            updateIfDisplayed();\n        } else {\n            e.preventDefault();\n        }\n    }\n\n    function keyupEventHandler(ev: KeyboardEvent): void {\n        const keyCode = ev.which || ev.keyCode || 0;\n\n        const ignore = settings.keysToIgnore || [Keys.Up, Keys.Enter, Keys.Esc, Keys.Right, Keys.Left, Keys.Shift, Keys.Ctrl, Keys.Alt, Keys.CapsLock, Keys.WindowsKey, Keys.Tab];\n        for (const key of ignore) {\n            if (keyCode === key) {\n                return;\n            }\n        }\n\n        if (keyCode >= Keys.F1 && keyCode <= Keys.F12 && !settings.keysToIgnore) {\n            return;\n        }\n\n        // the down key is used to open autocomplete\n        if (keyCode === Keys.Down && containerDisplayed()) {\n            return;\n        }\n\n        startFetch(EventTrigger.Keyboard);\n    }\n\n    /**\n     * Automatically move scroll bar if selected item is not visible\n     */\n    function updateScroll(): void {\n        const elements = container.getElementsByClassName(\"selected\");\n        if (elements.length > 0) {\n            let element = elements[0] as HTMLDivElement;\n\n            // make group visible\n            const previous = element.previousElementSibling as HTMLDivElement;\n            if (previous && previous.className.indexOf(\"group\") !== -1 && !previous.previousElementSibling) {\n                element = previous;\n            }\n\n            if (element.offsetTop < container.scrollTop) {\n                container.scrollTop = element.offsetTop;\n            } else {\n                const selectBottom = element.offsetTop + element.offsetHeight;\n                const containerBottom = container.scrollTop + container.offsetHeight;\n                if (selectBottom > containerBottom) {\n                    container.scrollTop += selectBottom - containerBottom;\n                }\n            }\n        }\n    }\n\n    /**\n     * Select the previous item in suggestions\n     */\n    function selectPrev(): void {\n        if (items.length < 1) {\n            selected = undefined;\n        } else {\n            if (selected === items[0]) {\n                selected = items[items.length - 1];\n            } else {\n                for (let i = items.length - 1; i > 0; i--) {\n                    if (selected === items[i] || i === 1) {\n                        selected = items[i - 1];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Select the next item in suggestions\n     */\n    function selectNext(): void {\n        if (items.length < 1) {\n            selected = undefined;\n        }\n        if (!selected || selected === items[items.length - 1]) {\n            selected = items[0];\n            return;\n        }\n        for (let i = 0; i < (items.length - 1); i++) {\n            if (selected === items[i]) {\n                selected = items[i + 1];\n                break;\n            }\n        }\n    }\n\n    function keydownEventHandler(ev: KeyboardEvent): void {\n        const keyCode = ev.which || ev.keyCode || 0;\n\n        if (keyCode === Keys.Up || keyCode === Keys.Down || keyCode === Keys.Esc) {\n            const containerIsDisplayed = containerDisplayed();\n\n            if (keyCode === Keys.Esc) {\n                clear();\n            } else {\n                if (!containerIsDisplayed || items.length < 1) {\n                    return;\n                }\n                keyCode === Keys.Up\n                    ? selectPrev()\n                    : selectNext();\n                update();\n            }\n\n            ev.preventDefault();\n            if (containerIsDisplayed) {\n                ev.stopPropagation();\n            }\n\n            return;\n        }\n\n        if (keyCode === Keys.Enter) {\n            if (selected) {\n                settings.onSelect(selected, input);\n                clear();\n            }\n\n            if (preventSubmit) {\n                ev.preventDefault();\n            }\n        }\n    }\n\n    function focusEventHandler(): void {\n        if (showOnFocus) {\n            startFetch(EventTrigger.Focus);\n        }\n    }\n\n    function startFetch(trigger: EventTrigger) {\n        // If multiple keys were pressed, before we get an update from server,\n        // this may cause redrawing autocomplete multiple times after the last key was pressed.\n        // To avoid this, the number of times keyboard was pressed will be saved and checked before redraw.\n        const savedKeypressCounter = ++keypressCounter;\n\n        const inputText = input.value;\n        const cursorPos = input.selectionStart || 0;\n\n        if (inputText.length >= minLen || trigger === EventTrigger.Focus) {\n            clearDebounceTimer();\n            debounceTimer = window.setTimeout(function (): void {\n                settings.fetch(inputText, function (elements: T[] | false): void {\n                    if (keypressCounter === savedKeypressCounter && elements) {\n                        items = elements;\n                        inputValue = inputText;\n                        selected = (items.length < 1 || disableAutoSelect) ? undefined : items[0];\n                        update();\n                    }\n                }, trigger, cursorPos);\n            }, trigger === EventTrigger.Keyboard ? debounceWaitMs : 0);\n        } else {\n            clear();\n        }\n    }\n\n    function blurEventHandler(): void {\n        // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\n        setTimeout(() => {\n            if (doc.activeElement !== input) {\n                clear();\n            }\n        }, 200);\n    }\n\n    /**\n     * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\n     */\n    container.addEventListener(\"mousedown\", function (evt: Event) {\n        evt.stopPropagation();\n        evt.preventDefault();\n    });\n\n    /**\n     * Fixes #30: autocomplete closes when scrollbar is clicked in IE\n     * See: https://stackoverflow.com/a/9210267/13172349\n     */\n    container.addEventListener(\"focus\", () => input.focus());\n\n    /**\n     * This function will remove DOM elements and clear event handlers\n     */\n    function destroy(): void {\n        input.removeEventListener(\"focus\", focusEventHandler);\n        input.removeEventListener(\"keydown\", keydownEventHandler as EventListenerOrEventListenerObject);\n        input.removeEventListener(\"keyup\", keyupEventHandler as EventListenerOrEventListenerObject);\n        input.removeEventListener(\"blur\", blurEventHandler);\n        window.removeEventListener(\"resize\", resizeEventHandler);\n        doc.removeEventListener(\"scroll\", scrollEventHandler, true);\n        input.removeAttribute(\"role\");\n        input.removeAttribute(\"aria-expanded\");\n        input.removeAttribute(\"aria-autocomplete\");\n        input.removeAttribute(\"aria-controls\");\n        input.removeAttribute(\"aria-activedescendant\");\n        input.removeAttribute(\"aria-owns\");\n        input.removeAttribute(\"aria-haspopup\");\n        clearDebounceTimer();\n        clear();\n    }\n\n    // setup event handlers\n    input.addEventListener(\"keydown\", keydownEventHandler as EventListenerOrEventListenerObject);\n    input.addEventListener(\"keyup\", keyupEventHandler as EventListenerOrEventListenerObject);\n    input.addEventListener(\"blur\", blurEventHandler);\n    input.addEventListener(\"focus\", focusEventHandler);\n    window.addEventListener(\"resize\", resizeEventHandler);\n    doc.addEventListener(\"scroll\", scrollEventHandler, true);\n\n    return {\n        destroy\n    };\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { AutocompleteResult, AutocompleteSettings } from \"autocompleter\";\nimport { inject, injectable } from \"inversify\";\nimport { Action, isAction } from 'sprotty-protocol/lib/actions';\nimport { LabeledAction, isLabeledAction } from \"../../base/actions/action\";\nimport { IActionDispatcherProvider } from \"../../base/actions/action-dispatcher\";\nimport { SModelElementImpl, SModelRootImpl } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { AbstractUIExtension } from \"../../base/ui-extensions/ui-extension\";\nimport { SetUIExtensionVisibilityAction } from \"../../base/ui-extensions/ui-extension-registry\";\nimport { DOMHelper } from \"../../base/views/dom-helper\";\nimport { KeyListener } from \"../../base/views/key-tool\";\nimport { ViewerOptions } from \"../../base/views/viewer-options\";\nimport { codiconCSSClasses, codiconCSSString } from \"../../utils/codicon\";\nimport { toArray } from \"../../utils/iterable\";\nimport { matchesKeystroke } from \"../../utils/keyboard\";\nimport { getAbsoluteClientBounds } from \"../bounds/model\";\nimport { isSelectable } from \"../select/model\";\nimport { CommandPaletteActionProviderRegistry } from \"./action-providers\";\nimport { MousePositionTracker } from \"../../base/views/mouse-tool\";\nimport configureAutocomplete from \"autocompleter\";\n\n@injectable()\nexport class CommandPalette extends AbstractUIExtension {\n    static readonly ID = \"command-palette\";\n    static readonly isInvokePaletteKey = (event: KeyboardEvent) => matchesKeystroke(event, 'Space', 'ctrl');\n\n    protected loadingIndicatorClasses = codiconCSSClasses('loading', false, true, ['loading']);\n    protected xOffset = 20;\n    protected yOffset = 20;\n    protected defaultWidth = 400;\n    protected debounceWaitMs = 100;\n    protected noCommandsMsg = \"No commands available\";\n\n    protected inputElement: HTMLInputElement;\n    protected loadingIndicator: HTMLSpanElement;\n    protected autoCompleteResult: AutocompleteResult;\n    protected paletteIndex = 0;\n    protected contextActions?: LabeledAction[];\n\n    @inject(TYPES.IActionDispatcherProvider) protected actionDispatcherProvider: IActionDispatcherProvider;\n    @inject(TYPES.ICommandPaletteActionProviderRegistry) protected actionProviderRegistry: CommandPaletteActionProviderRegistry;\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\n    @inject(MousePositionTracker) protected mousePositionTracker: MousePositionTracker;\n\n    public id() { return CommandPalette.ID; }\n    public containerClass() { return \"command-palette\"; }\n\n    override show(root: Readonly<SModelRootImpl>, ...contextElementIds: string[]) {\n        super.show(root, ...contextElementIds);\n        this.paletteIndex = 0;\n        this.contextActions = undefined;\n        this.inputElement!.value = \"\";\n        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));\n        this.inputElement.focus();\n    }\n\n    protected initializeContents(containerElement: HTMLElement) {\n        containerElement.style.position = \"absolute\";\n        this.inputElement = document.createElement('input');\n        this.inputElement.style.width = '100%';\n        this.inputElement.addEventListener('keydown', (event) => this.hideIfEscapeEvent(event));\n        this.inputElement.addEventListener('keydown', (event) => this.cylceIfInvokePaletteKey(event));\n        this.inputElement.onblur = () => window.setTimeout(() => this.hide(), 200);\n        containerElement.appendChild(this.inputElement);\n    }\n\n    protected hideIfEscapeEvent(event: KeyboardEvent): any {\n        if (matchesKeystroke(event, 'Escape')) { this.hide(); }\n    }\n\n    protected cylceIfInvokePaletteKey(event: KeyboardEvent): any {\n        if (CommandPalette.isInvokePaletteKey(event)) { this.cycle(); }\n    }\n\n    protected cycle() {\n        this.contextActions = undefined;\n        this.paletteIndex++;\n    }\n\n    protected override onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRootImpl>, ...selectedElementIds: string[]) {\n        let x = this.xOffset;\n        let y = this.yOffset;\n        const selectedElements = toArray(root.index.all().filter(e => isSelectable(e) && e.selected));\n        if (selectedElements.length === 1) {\n            const bounds = getAbsoluteClientBounds(selectedElements[0], this.domHelper, this.viewerOptions);\n            x += bounds.x + bounds.width;\n            y += bounds.y;\n        } else {\n            const bounds = getAbsoluteClientBounds(root, this.domHelper, this.viewerOptions);\n            x += bounds.x;\n            y += bounds.y;\n        }\n        containerElement.style.left = `${x}px`;\n        containerElement.style.top = `${y}px`;\n        containerElement.style.width = `${this.defaultWidth}px`;\n    }\n\n    protected autocompleteSettings(root: Readonly<SModelRootImpl>): AutocompleteSettings<LabeledAction> {\n        return {\n            input: this.inputElement,\n            emptyMsg: this.noCommandsMsg,\n            className: \"command-palette-suggestions\",\n            debounceWaitMs: this.debounceWaitMs,\n            showOnFocus: true,\n            minLength: -1,\n            fetch: (text: string, update: (items: LabeledAction[]) => void) =>\n                this.updateAutoCompleteActions(update, text, root),\n            onSelect: (item: LabeledAction) => this.onSelect(item),\n            render: (item: LabeledAction, currentValue: string): HTMLDivElement | undefined =>\n                this.renderLabeledActionSuggestion(item, currentValue),\n            customize: (input: HTMLInputElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => {\n                this.customizeSuggestionContainer(container, inputRect, maxHeight);\n            }\n        };\n    }\n\n    protected onSelect(item: LabeledAction) {\n        this.executeAction(item);\n        this.hide();\n    }\n\n    protected updateAutoCompleteActions(update: (items: LabeledAction[]) => void, text: string, root: Readonly<SModelRootImpl>) {\n        this.onLoading();\n        if (this.contextActions) {\n            update(this.filterActions(text, this.contextActions));\n            this.onLoaded('success');\n        } else {\n            this.actionProviderRegistry\n                .getActions(root, text, this.mousePositionTracker.lastPositionOnDiagram, this.paletteIndex)\n                .then(actions => {\n                    this.contextActions = actions;\n                    update(this.filterActions(text, actions));\n                    this.onLoaded('success');\n                })\n                .catch((reason) => {\n                    this.logger.error(this, \"Failed to obtain actions from command palette action providers\", reason);\n                    this.onLoaded('error');\n                });\n        }\n    }\n\n    protected onLoading() {\n        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {\n            return;\n        }\n        this.loadingIndicator = document.createElement('span');\n        this.loadingIndicator.classList.add(...this.loadingIndicatorClasses);\n        this.containerElement.appendChild(this.loadingIndicator);\n    }\n\n    protected onLoaded(success: 'success' | 'error') {\n        if (this.containerElement.contains(this.loadingIndicator)) {\n            this.containerElement.removeChild(this.loadingIndicator);\n        }\n    }\n\n    protected renderLabeledActionSuggestion(item: LabeledAction, value: string) {\n        const itemElement = document.createElement(\"div\");\n        const wordMatcher = espaceForRegExp(value).split(\" \").join(\"|\");\n        const regex = new RegExp(wordMatcher, \"gi\");\n        if (item.icon) {\n            this.renderIcon(itemElement, item.icon);\n        }\n        if (value.length > 0) {\n            itemElement.innerHTML += item.label.replace(regex, (match) => \"<em>\" + match + \"</em>\").replace(/ /g, '&nbsp;');\n        } else {\n            itemElement.innerHTML += item.label.replace(/ /g, '&nbsp;');\n        }\n        return itemElement;\n    }\n\n    protected renderIcon(itemElement: HTMLDivElement, iconId: string) {\n        itemElement.innerHTML += `<span class=\"icon ${this.getCodicon(iconId)}\"></span>`;\n    }\n\n    protected getFontAwesomeIcon(iconId: string) {\n        return `fa fa-${iconId}`;\n    }\n\n    protected getCodicon(iconId: string) {\n        return codiconCSSString(iconId);\n    }\n\n    protected filterActions(filterText: string, actions: LabeledAction[]): LabeledAction[] {\n        return toArray(actions.filter(action => {\n            const label = action.label.toLowerCase();\n            const searchWords = filterText.split(' ');\n            return searchWords.every(word => label.indexOf(word.toLowerCase()) !== -1);\n        }));\n    }\n\n    protected customizeSuggestionContainer(container: HTMLDivElement, inputRect: ClientRect | DOMRect, maxHeight: number) {\n        // move container into our command palette container as this is already positioned correctly\n        if (this.containerElement) {\n            this.containerElement.appendChild(container);\n        }\n    }\n\n    override hide() {\n        super.hide();\n        if (this.autoCompleteResult) {\n            this.autoCompleteResult.destroy();\n        }\n    }\n\n    protected executeAction(input: LabeledAction | Action[] | Action) {\n        this.actionDispatcherProvider()\n            .then((actionDispatcher) => actionDispatcher.dispatchAll(toActionArray(input)))\n            .catch((reason) => this.logger.error(this, 'No action dispatcher available to execute command palette action', reason));\n    }\n}\n\nfunction toActionArray(input: LabeledAction | Action[] | Action): Action[] {\n    if (isLabeledAction(input)) {\n        return input.actions;\n    } else if (isAction(input)) {\n        return [input];\n    }\n    return [];\n}\n\nfunction espaceForRegExp(value: string): string {\n    return value.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n\nexport class CommandPaletteKeyListener extends KeyListener {\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'Escape')) {\n            return [SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: false, contextElementsId: [] })];\n        } else if (CommandPalette.isInvokePaletteKey(event)) {\n            const selectedElements = toArray(element.index.all().filter(e => isSelectable(e) && e.selected).map(e => e.id));\n            return [SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: true, contextElementsId: selectedElements })];\n        }\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { LabeledAction } from \"../../base/actions/action\";\n\nexport interface MenuItem extends LabeledAction {\n    /** Technical id of the menu item. */\n    readonly id: string;\n    /** String indicating the order. */\n    readonly sortString?: string;\n    /** String indicating the grouping (separators). Items with equal group will be in the same group. */\n    readonly group?: string;\n    /**\n     * The optional parent id can be used to add this element as a child of another element provided by anohter menu provider.\n     * The `parentId` must be fully qualified in the form of `a.b.c`, whereas `a`, `b` and `c` are referring to the IDs of other elements.\n     * Note that this attribute will only be considered for root items of a provider and not for children of provided items.\n     */\n    readonly parentId?: string;\n    /** Function determining whether the element is enabled. */\n    readonly isEnabled?: () => boolean;\n    /** Function determining whether the element is visible. */\n    readonly isVisible?: () => boolean;\n    /** Function determining whether the element is toggled on or off. */\n    readonly isToggled?: () => boolean;\n    /** Children of this item. If this item has children, they will be added into a submenu of this item. */\n    children?: MenuItem[];\n}\n\nexport type Anchor = MouseEvent | { x: number, y: number };\n\nexport function toAnchor(anchor: HTMLElement | { x: number, y: number }): Anchor {\n    return anchor instanceof HTMLElement ? { x: anchor.offsetLeft, y: anchor.offsetTop } : anchor;\n}\n\nexport interface IContextMenuService {\n    show(items: MenuItem[], anchor: Anchor, onHide?: () => void): void;\n}\n\nexport type IContextMenuServiceProvider = () => Promise<IContextMenuService>;\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Action, DeleteElementAction as ProtocolDeleteElementAction} from 'sprotty-protocol/lib/actions';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { SModelElementImpl, SParentElementImpl, SChildElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { TYPES } from '../../base/types';\n\nexport const deletableFeature = Symbol('deletableFeature');\n\nexport interface Deletable extends SModelExtension {\n}\n\nexport function isDeletable<T extends SModelElementImpl>(element: T): element is T & Deletable & SChildElementImpl {\n    return element instanceof SChildElementImpl && element.hasFeature(deletableFeature);\n}\n\nexport class ResolvedDelete {\n    child: SChildElementImpl;\n    parent: SParentElementImpl;\n}\n\n@injectable()\nexport class DeleteElementCommand extends Command {\n    static readonly KIND = ProtocolDeleteElementAction.KIND;\n\n    resolvedDeletes: ResolvedDelete[] = [];\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolDeleteElementAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        for (const id of this.action.elementIds) {\n            const element = index.getById(id);\n            if (element && isDeletable(element)) {\n                this.resolvedDeletes.push({ child: element, parent: element.parent });\n                element.parent.remove(element);\n            }\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        for (const resolvedDelete of this.resolvedDeletes)\n            resolvedDelete.parent.add(resolvedDelete.child);\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        for (const resolvedDelete of this.resolvedDeletes)\n            resolvedDelete.parent.remove(resolvedDelete.child);\n        return context.root;\n    }\n}\n\n// // Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Delete a set of elements identified by their IDs.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface DeleteElementAction extends Action {\n    kind: typeof DeleteElementAction.KIND\n    elementIds: string[]\n}\nexport namespace DeleteElementAction {\n    export const KIND = 'delete';\n\n    export function create(elementIds: string[]): DeleteElementAction {\n        return {\n            kind: KIND,\n            elementIds\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional } from 'inversify';\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { MenuItem } from './context-menu-service';\nimport { SModelRootImpl } from '../../base/model/smodel';\nimport { LabeledAction } from '../../base/actions/action';\nimport { TYPES } from '../../base/types';\nimport { isDeletable } from '../edit/delete';\nimport { isSelected } from '../select/model';\nimport { DeleteElementAction } from 'sprotty-protocol';\n\nexport interface IContextMenuItemProvider {\n    getItems(root: Readonly<SModelRootImpl>, lastMousePosition?: Point): Promise<LabeledAction[]>;\n}\n\n@injectable()\nexport class ContextMenuProviderRegistry implements IContextMenuItemProvider {\n\n    constructor(@multiInject(TYPES.IContextMenuItemProvider) @optional() protected menuProviders: IContextMenuItemProvider[] = []) { }\n\n    getItems(root: Readonly<SModelRootImpl>, lastMousePosition?: Point) {\n        const menues = this.menuProviders.map(provider => provider.getItems(root, lastMousePosition));\n        return Promise.all(menues).then(this.flattenAndRestructure);\n    }\n\n    private flattenAndRestructure(p: MenuItem[][]): MenuItem[] {\n        let menuItems = p.reduce((acc, promise) => promise !== undefined ? acc.concat(promise) : acc, []);\n        const menuItemsWithParentId = menuItems.filter(menuItem => menuItem.parentId);\n        for (const menuItem of menuItemsWithParentId) {\n            if (menuItem.parentId) {\n                const fragments = menuItem.parentId.split('.');\n                let matchingParent: MenuItem | undefined = undefined;\n                let nextParents = menuItems;\n                for (const fragment of fragments) {\n                    matchingParent = nextParents.find(item => fragment === item.id);\n                    if (matchingParent && matchingParent.children)\n                        nextParents = matchingParent.children;\n                }\n                if (matchingParent) {\n                    if (matchingParent.children) {\n                        matchingParent.children.push(menuItem);\n                    } else {\n                        matchingParent.children = [menuItem];\n                    }\n                    menuItems = menuItems.filter(item => item !== menuItem);\n                }\n            }\n        }\n        return menuItems;\n    }\n}\n\n@injectable()\nexport class DeleteContextMenuItemProvider implements IContextMenuItemProvider {\n    getItems(root: Readonly<SModelRootImpl>, lastMousePosition?: Point): Promise<MenuItem[]> {\n        const selectedElements = Array.from(root.index.all().filter(isSelected).filter(isDeletable));\n        return Promise.resolve([\n            {\n                id: 'delete',\n                label: 'Delete',\n                sortString: 'd',\n                group: 'edit',\n                actions: [DeleteElementAction.create(selectedElements.map(e => e.id))],\n                isEnabled: () => selectedElements.length > 0\n            }\n        ]);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject } from \"inversify\";\nimport { Action, SelectAction } from \"sprotty-protocol/lib/actions\";\nimport { IActionDispatcher } from \"../../base/actions/action-dispatcher\";\nimport { SModelElementImpl } from \"../../base/model/smodel\";\nimport { findParentByFeature } from \"../../base/model/smodel-utils\";\nimport { TYPES } from \"../../base/types\";\nimport { MouseListener } from \"../../base/views/mouse-tool\";\nimport { isSelectable, isSelected } from \"../select/model\";\nimport { IContextMenuService, IContextMenuServiceProvider } from \"./context-menu-service\";\nimport { ContextMenuProviderRegistry } from \"./menu-providers\";\n\nexport class ContextMenuMouseListener extends MouseListener {\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n    constructor(\n        @inject(TYPES.IContextMenuServiceProvider) protected readonly contextMenuService: IContextMenuServiceProvider,\n        @inject(TYPES.IContextMenuProviderRegistry) protected readonly menuProvider: ContextMenuProviderRegistry) {\n        super();\n    }\n\n    override contextMenu(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.showContextMenu(target, event);\n        return [];\n    }\n\n    protected async showContextMenu(target: SModelElementImpl, event: MouseEvent): Promise<void> {\n        let menuService: IContextMenuService;\n        try {\n            menuService = await this.contextMenuService();\n        } catch (rejected) {\n            // IContextMenuService is not bound => do nothing\n            return;\n        }\n\n        let isTargetSelected = false;\n        const selectableTarget = findParentByFeature(target, isSelectable);\n        if (selectableTarget) {\n            isTargetSelected = selectableTarget.selected;\n            selectableTarget.selected = true;\n        }\n\n        const root = target.root;\n        const mousePosition = { x: event.x, y: event.y };\n        if (target.id === root.id || isSelected(selectableTarget)) {\n            const menuItems = await this.menuProvider.getItems(root, mousePosition);\n            const restoreSelection = () => { if (selectableTarget) selectableTarget.selected = isTargetSelected; };\n            menuService.show(menuItems, mousePosition, restoreSelection);\n        } else {\n            if (isSelectable(target)) {\n                const options = { selectedElementsIDs: [target.id], deselectedElementsIDs: Array.from(root.index.all().filter(isSelected), (val) => { return val.id; }) };\n                await this.actionDispatcher.dispatch(SelectAction.create(options));\n            }\n            const items = await this.menuProvider.getItems(root, mousePosition);\n            menuService.show(items, mousePosition);\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const hoverFeedbackFeature = Symbol('hoverFeedbackFeature');\n\nexport interface Hoverable extends SModelExtension {\n    hoverFeedback: boolean\n}\n\nexport function isHoverable(element: SModelElementImpl): element is SModelElementImpl & Hoverable {\n    return element.hasFeature(hoverFeedbackFeature);\n}\n\nexport const popupFeature = Symbol('popupFeature');\n\nexport function hasPopupFeature(element: SModelElementImpl): boolean {\n    return element.hasFeature(popupFeature);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const moveFeature = Symbol('moveFeature');\n\n/**\n * An element that can be placed at a specific location using its position\n * property.\n */\nexport interface Locateable extends SModelExtension {\n    position: Point\n}\n\nexport function isLocateable(element: SModelElementImpl): element is SModelElementImpl & Locateable {\n    return (element as any)['position'] !== undefined;\n}\n\nexport function isMoveable(element: SModelElementImpl): element is SModelElementImpl & Locateable {\n    return element.hasFeature(moveFeature) && isLocateable(element);\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SChildElementImpl, SModelElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { FluentIterable } from '../../utils/iterable';\nimport { SShapeElementImpl } from '../bounds/model';\nimport { deletableFeature } from '../edit/delete';\nimport { Selectable, selectFeature } from '../select/model';\nimport { Hoverable, hoverFeedbackFeature } from '../hover/model';\nimport { moveFeature } from '../move/model';\n\nexport abstract class SRoutableElementImpl extends SChildElementImpl {\n\n    routerKind?: string;\n    routingPoints: Point[] = [];\n    sourceId: string;\n    targetId: string;\n    sourceAnchorCorrection?: number;\n    targetAnchorCorrection?: number;\n\n    get source(): SConnectableElementImpl | undefined {\n        return this.index.getById(this.sourceId) as SConnectableElementImpl;\n    }\n\n    get target(): SConnectableElementImpl | undefined {\n        return this.index.getById(this.targetId) as SConnectableElementImpl;\n    }\n\n    get bounds(): Bounds {\n        // this should also work for splines, which have the convex hull property\n        return this.routingPoints.reduce<Bounds>((bounds, routingPoint) => Bounds.combine(bounds, {\n            x: routingPoint.x,\n            y: routingPoint.y,\n            width: 0,\n            height: 0\n        }), Bounds.EMPTY);\n    }\n}\n\nexport const connectableFeature = Symbol('connectableFeature');\n\nexport interface Connectable extends SModelExtension {\n    canConnect(routable: SRoutableElementImpl, role: 'source' | 'target'): boolean;\n}\n\nexport function isConnectable<T extends SModelElementImpl>(element: T): element is Connectable & T {\n    return element.hasFeature(connectableFeature) && (element as any).canConnect;\n}\n\nexport function getAbsoluteRouteBounds(model: Readonly<SRoutableElementImpl>, route: Point[] = model.routingPoints): Bounds {\n    let bounds = getRouteBounds(route);\n    let current: SModelElementImpl = model;\n    while (current instanceof SChildElementImpl) {\n        const parent = current.parent;\n        bounds = parent.localToParent(bounds);\n        current = parent;\n    }\n    return bounds;\n}\n\nexport function getRouteBounds(route: Point[]): Bounds {\n    const bounds = { x: NaN, y: NaN, width: 0, height: 0};\n    for (const point of route) {\n        if (isNaN(bounds.x)) {\n            bounds.x = point.x;\n            bounds.y = point.y;\n        } else {\n            if (point.x < bounds.x) {\n                bounds.width += bounds.x - point.x;\n                bounds.x = point.x;\n            } else if (point.x > bounds.x + bounds.width) {\n                bounds.width = point.x - bounds.x;\n            }\n            if (point.y < bounds.y) {\n                bounds.height += bounds.y - point.y;\n                bounds.y = point.y;\n            } else if (point.y > bounds.y + bounds.height) {\n                bounds.height = point.y - bounds.y;\n            }\n        }\n    }\n    return bounds;\n}\n\n/**\n * A connectable element is one that can have outgoing and incoming edges, i.e. it can be the source\n * or target element of an edge. There are two kinds of connectable elements: nodes (`SNode`) and\n * ports (`SPort`). A node represents a main entity, while a port is a connection point inside a node.\n */\nexport abstract class SConnectableElementImpl extends SShapeElementImpl implements Connectable {\n\n    get anchorKind(): string | undefined{\n         return undefined;\n     }\n\n    strokeWidth: number = 0;\n\n    /**\n     * The incoming edges of this connectable element. They are resolved by the index, which must\n     * be an `SGraphIndex` for efficient lookup.\n     */\n    get incomingEdges(): FluentIterable<SRoutableElementImpl> {\n        const allEdges = this.index.all().filter(e => e instanceof SRoutableElementImpl) as FluentIterable<SRoutableElementImpl>;\n        return allEdges.filter(e => e.targetId === this.id);\n    }\n\n    /**\n     * The outgoing edges of this connectable element. They are resolved by the index, which must\n     * be an `SGraphIndex` for efficient lookup.\n     */\n    get outgoingEdges(): FluentIterable<SRoutableElementImpl> {\n        const allEdges = this.index.all().filter(e => e instanceof SRoutableElementImpl) as FluentIterable<SRoutableElementImpl>;\n        return allEdges.filter(e => e.sourceId === this.id);\n    }\n\n    canConnect(routable: SRoutableElementImpl, role: 'source' | 'target') {\n        return true;\n    }\n}\n\n\nexport type RoutingHandleKind = 'junction' | 'line' | 'source' | 'target' | 'manhattan-50%' |\n    'bezier-control-after' | 'bezier-control-before' | 'bezier-junction' | 'bezier-add' | 'bezier-remove';\n\nexport class SRoutingHandleImpl extends SChildElementImpl implements Selectable, Hoverable {\n    static readonly DEFAULT_FEATURES = [selectFeature, moveFeature, hoverFeedbackFeature];\n\n    /**\n     * 'junction' is a point where two line segments meet,\n     * 'line' is a volatile handle placed on a line segment,\n     * 'source' and 'target' are the respective anchors.\n     */\n    kind: RoutingHandleKind;\n    /** The actual routing point index (junction) or the previous point index (line). */\n    pointIndex: number;\n    /** Whether the routing point is being dragged. */\n    editMode: boolean = false;\n\n    hoverFeedback: boolean = false;\n    selected: boolean = false;\n    danglingAnchor?: SDanglingAnchorImpl;\n\n    /**\n     * SRoutingHandles are created using the constructor, so we hard-wire the\n     * default features\n     */\n    override hasFeature(feature: symbol): boolean {\n        return SRoutingHandleImpl.DEFAULT_FEATURES.indexOf(feature) !== -1;\n    }\n}\n\nexport class SDanglingAnchorImpl extends SConnectableElementImpl {\n    static readonly DEFAULT_FEATURES = [deletableFeature];\n\n    original?: SModelElementImpl;\n    override type = 'dangling-anchor';\n\n    constructor() {\n        super();\n        this.size = { width: 0, height: 0 };\n    }\n}\n\nexport const edgeInProgressID = 'edge-in-progress';\nexport const edgeInProgressTargetHandleID = edgeInProgressID + '-target-anchor';\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/** @deprecated Use `SRoutableElementImpl` instead. */\nexport const SRoutableElement = SRoutableElementImpl;\n\n\n/** @deprecated Use `SConnectableElementImpl` instead. */\nexport const SConnectableElement = SConnectableElementImpl;\n\n\n/** @deprecated Use `SRoutingHandleImpl` instead. */\nexport const SRoutingHandle = SRoutingHandleImpl;\n\n/** @deprecated Use `SDanglingAnchorImpl` instead. */\nexport const SDanglingAnchor = SDanglingAnchorImpl;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { SModelElementImpl, SChildElementImpl } from '../../base/model/smodel';\nimport { BoundsAware, isBoundsAware } from '../bounds/model';\nimport { SRoutableElementImpl } from '../routing/model';\n\nexport const edgeLayoutFeature = Symbol('edgeLayout');\n\nexport interface EdgeLayoutable extends SModelExtension {\n    edgePlacement: EdgePlacement\n}\n\nexport function isEdgeLayoutable<T extends SModelElementImpl>(element: T): element is T & SChildElementImpl & BoundsAware & EdgeLayoutable {\n    return element instanceof SChildElementImpl\n        && element.parent instanceof SRoutableElementImpl\n        && checkEdgeLayoutable(element)\n        && isBoundsAware(element)\n        && element.hasFeature(edgeLayoutFeature);\n}\n\nfunction checkEdgeLayoutable(element: SChildElementImpl): element is SChildElementImpl & EdgeLayoutable{\n    return 'edgePlacement' in element;\n}\n\nexport type EdgeSide = 'left' | 'right' | 'top' | 'bottom' | 'on';\n\nexport class EdgePlacement extends Object {\n    /**\n     * true, if the label should be rotated to touch the edge tangentially\n     */\n    rotate: boolean;\n\n    /**\n     * where is the label relative to the line's direction\n     */\n    side: EdgeSide;\n\n    /**\n     * between 0 (source anchor) and 1 (target anchor)\n     */\n    position: number;\n\n    /**\n     * space between label and edge/connected nodes\n     */\n    offset: number;\n}\n\nexport const DEFAULT_EDGE_PLACEMENT: EdgePlacement = {\n    rotate: true,\n    side: 'top',\n    position: 0.5,\n    offset: 7\n};\n", "/********************************************************************************\n * Copyright (c) 2017-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { SRoutableElementImpl } from '../routing/model';\n\nexport const editFeature = Symbol('editFeature');\n\nexport function canEditRouting(element: SModelElementImpl): element is SRoutableElementImpl {\n    return element instanceof SRoutableElementImpl && element.hasFeature(editFeature);\n}\n\nexport const editLabelFeature = Symbol('editLabelFeature');\n\nexport interface EditableLabel extends SModelExtension {\n    text: string;\n    readonly isMultiLine?: boolean;\n    readonly editControlDimension?: Dimension;\n    readonly editControlPositionCorrection?: Point;\n}\n\nexport function isEditableLabel<T extends SModelElementImpl>(element: T): element is T & EditableLabel {\n    return 'text' in element && element.hasFeature(editLabelFeature);\n}\n\nexport const withEditLabelFeature = Symbol('withEditLabelFeature');\n\nexport interface WithEditableLabel extends SModelExtension {\n    readonly editableLabel?: EditableLabel & SModelElementImpl;\n}\n\nexport function isWithEditableLabel<T extends SModelElementImpl>(element: T): element is T & WithEditableLabel {\n    return 'editableLabel' in element && element.hasFeature(withEditLabelFeature);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds as ProtocolBounds, Point as ProtocolPoint, toDegrees as protocolToDegrees } from \"sprotty-protocol\";\n\n/**\n * Represents an object's insets, for top, bottom, left and right\n */\nexport interface Insets {\n    top: number\n    bottom: number\n    left: number\n    right: number\n}\n\nexport type Orientation = 'north' | 'south' | 'east' | 'west';\n\n/**\n * A diamond or rhombus is a quadrilateral whose four sides all have the same length.\n * It consists of four points, a `topPoint`, `rightPoint`, `bottomPoint`, and a `leftPoint`,\n * which are connected by four lines -- the `topRightSideLight`, `topLeftSideLine`, `bottomRightSideLine`,\n * and the `bottomLeftSideLine`.\n */\nexport class Diamond {\n\n    constructor(protected bounds: ProtocolBounds) { }\n\n    get topPoint(): ProtocolPoint {\n        return {\n            x: this.bounds.x + this.bounds.width / 2,\n            y: this.bounds.y\n        };\n    }\n\n    get rightPoint(): ProtocolPoint {\n        return {\n            x: this.bounds.x + this.bounds.width,\n            y: this.bounds.y + this.bounds.height / 2\n        };\n    }\n\n    get bottomPoint(): ProtocolPoint {\n        return {\n            x: this.bounds.x + this.bounds.width / 2,\n            y: this.bounds.y + this.bounds.height\n        };\n    }\n\n    get leftPoint(): ProtocolPoint {\n        return {\n            x: this.bounds.x,\n            y: this.bounds.y + this.bounds.height / 2\n        };\n    }\n\n    get topRightSideLine(): Line {\n        return new PointToPointLine(this.topPoint, this.rightPoint);\n    }\n\n    get topLeftSideLine(): Line {\n        return new PointToPointLine(this.topPoint, this.leftPoint);\n    }\n\n    get bottomRightSideLine(): Line {\n        return new PointToPointLine(this.bottomPoint, this.rightPoint);\n    }\n\n    get bottomLeftSideLine(): Line {\n        return new PointToPointLine(this.bottomPoint, this.leftPoint);\n    }\n\n    /**\n     * Return the closest side of this diamond to the specified `refPoint`.\n     * @param {Point} refPoint a reference point\n     * @returns {Line} a line representing the closest side\n     */\n    closestSideLine(refPoint: ProtocolPoint): Line {\n        const c = ProtocolBounds.center(this.bounds);\n        if (refPoint.x > c.x) {\n            if (refPoint.y > c.y) {\n                return this.bottomRightSideLine;\n            } else {\n                return this.topRightSideLine;\n            }\n        } else {\n            if (refPoint.y > c.y) {\n                return this.bottomLeftSideLine;\n            } else {\n                return this.topLeftSideLine;\n            }\n        }\n    }\n}\n\n/**\n * A line represented in its standard form `a*x + b*y = c`.\n */\nexport interface Line {\n    readonly a: number\n    readonly b: number\n    readonly c: number\n}\n\nexport type CardinalDirection =\n    'north' | 'north-east' | 'east' | 'south-east' |\n    'south' | 'south-west' | 'west' | 'north-west';\n\n/**\n * A line made up from two points.\n */\nexport class PointToPointLine implements Line {\n\n    constructor(public p1: ProtocolPoint, public p2: ProtocolPoint) { }\n\n    get a(): number {\n        return this.p1.y - this.p2.y;\n    }\n\n    get b(): number {\n        return this.p2.x - this.p1.x;\n    }\n\n    get c(): number {\n        return this.p2.x * this.p1.y - this.p1.x * this.p2.y;\n    }\n\n    /**\n     * The counter-clockwise angle of this line relative to the x-axis.\n     */\n    get angle(): number {\n        return Math.atan2(-this.a, this.b);\n    }\n\n    /**\n     * The slope of the line.\n     * A vertical line returns `undefined`.\n     */\n    get slope(): number | undefined {\n        if (this.b === 0) return undefined;\n        return this.a / this.b;\n    }\n\n    /**\n     * The slope of the line or `Number.MAX_SAFE_INTEGER` if vertical.\n     */\n    get slopeOrMax(): number {\n        if (this.slope === undefined) {\n            return Number.MAX_SAFE_INTEGER;\n        }\n        return this.slope;\n    }\n\n    /**\n     * The direction of this line, such as 'north', 'south', or 'south-west'.\n     */\n    get direction(): CardinalDirection {\n        const hDegrees = protocolToDegrees(this.angle);\n        const degrees = hDegrees < 0 ? 360 + hDegrees : hDegrees;\n        // degrees are relative to the x-axis\n        if (degrees === 90) {\n            return 'south';\n        } else if (degrees === 0 || degrees === 360) {\n            return 'east';\n        } else if (degrees === 270) {\n            return 'north';\n        } else if (degrees === 180) {\n            return 'west';\n        } else if (degrees > 0 && degrees < 90) {\n            return 'south-east';\n        } else if (degrees > 90 && degrees < 180) {\n            return 'south-west';\n        } else if (degrees > 180 && degrees < 270) {\n            return 'north-west';\n        } else if (degrees > 270 && degrees < 360) {\n            return 'north-east';\n        }\n        throw new Error(`Cannot determine direction of line (${this.p1.x},${this.p1.y}) to (${this.p2.x},${this.p2.y})`);\n    }\n\n    /**\n     * @param otherLine the other line\n     * @returns the intersection point between `this` line and the `otherLine` if exists, or `undefined`.\n     */\n    intersection(otherLine: PointToPointLine): ProtocolPoint | undefined {\n        if (this.hasIndistinctPoints(otherLine)) {\n            return undefined;\n        }\n\n        const x1 = this.p1.x;\n        const y1 = this.p1.y;\n        const x2 = this.p2.x;\n        const y2 = this.p2.y;\n        const x3 = otherLine.p1.x;\n        const y3 = otherLine.p1.y;\n        const x4 = otherLine.p2.x;\n        const y4 = otherLine.p2.y;\n\n        const denominator = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n        if (denominator === 0) {\n            return undefined;\n        }\n        const numeratorA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n        const numeratorB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n        if (numeratorA === 0 && numeratorB === 0) {\n            return undefined;\n        }\n\n        const determinantA = numeratorA / denominator;\n        const determinantB = numeratorB / denominator;\n        if (determinantA < 0 || determinantA > 1 || determinantB < 0 || determinantB > 1) {\n            return undefined;\n        }\n\n        const x = x1 + (determinantA * (x2 - x1));\n        const y = y1 + (determinantA * (y2 - y1));\n        return { x, y };\n    }\n\n    /**\n     * @param otherLine the other line\n     * @returns whether the start and end point of this line is does not have distinct start\n     * or end points with the `otherLine`\n     */\n    hasIndistinctPoints(otherLine: PointToPointLine): boolean {\n        return ProtocolPoint.equals(this.p1, otherLine.p1) ||\n            ProtocolPoint.equals(this.p1, otherLine.p2) ||\n            ProtocolPoint.equals(this.p2, otherLine.p1) ||\n            ProtocolPoint.equals(this.p2, otherLine.p2);\n    }\n}\n\n/**\n * Returns the intersection of two lines `l1` and `l2`\n * @param {Line} l1 - A line\n * @param {Line} l2 - Another line\n * @returns {Point} The intersection point of `l1` and `l2`\n */\nexport function intersection(l1: Line, l2: Line): ProtocolPoint {\n    return {\n        x: (l1.c * l2.b - l2.c * l1.b) / (l1.a * l2.b - l2.a * l1.b),\n        y: (l1.a * l2.c - l2.a * l1.c) / (l1.a * l2.b - l2.a * l1.b)\n    };\n}\n\n/**\n * Enumeration of possible directions (left, right, up, down)\n * @deprecated do we use this? We should rather use a string type\n */\nexport enum Direction { left, right, up, down }\n\n/**\n * A minimum and maximum value of a numeric type.\n */\nexport interface Limits {\n    min: number\n    max: number\n}\n\n/**\n * Limits a value to the specified `limits`.\n * @param {number} value - The value to limit\n * @param {Limits} limits - The minimum and maximum limits\n */\nexport function limit(value: number, limits: Limits): number {\n    if (value < limits.min) {\n        return limits.min;\n    }\n    if (value > limits.max) {\n        return limits.max;\n    }\n    return value;\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isBounds(element: any): element is Bounds {\n    return 'x' in element\n        && 'y' in element\n        && 'width' in element\n        && 'height' in element;\n}\n\n/**\n * Combines the bounds of two objects into one, so that the new bounds\n * are the minimum bounds that covers both of the original bounds.\n * @param {Bounds} b0 - First bounds object\n * @param {Bounds} b1 - Second bounds object\n * @returns {Bounds} The combined bounds\n *\n * @deprecated Use `Bounds.combine` from `sprotty-protocol` instead.\n */\nexport function combine(b0: Bounds, b1: Bounds): Bounds {\n    if (!isValidDimension(b0))\n        return isValidDimension(b1) ? b1 : EMPTY_BOUNDS;\n    if (!isValidDimension(b1))\n        return b0;\n    const minX = Math.min(b0.x, b1.x);\n    const minY = Math.min(b0.y, b1.y);\n    const maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));\n    const maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));\n    return {\n        x: minX, y: minY, width: maxX - minX, height: maxY - minY\n    };\n}\n\n/**\n * Translates the given bounds.\n * @param {Bounds} b - Bounds object\n * @param {Point} p - Vector by which to translate the bounds\n * @returns {Bounds} The translated bounds\n *\n * @deprecated Use `Bounds.translate` from `sprotty-protocol` instead.\n */\nexport function translate(b: Bounds, p: Point): Bounds {\n    return {\n        x: b.x + p.x,\n        y: b.y + p.y,\n        width: b.width,\n        height: b.height\n    };\n}\n\n/**\n * Returns the center point of the bounds of an object\n * @param {Bounds} b - Bounds object\n * @returns {Point} the center point\n *\n * @deprecated Use `Bounds.center` from `sprotty-protocol` instead.\n */\nexport function center(b: Bounds): Point {\n    return {\n        x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),\n        y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)\n    };\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function centerOfLine(s: Point, e: Point): Point {\n    const b: Bounds = {\n        x: s.x > e.x ? e.x : s.x,\n        y: s.y > e.y ? e.y : s.y,\n        width: Math.abs(e.x - s.x),\n        height: Math.abs(e.y - s.y)\n    };\n    return center(b);\n}\n\n/**\n * Checks whether the point p is included in the bounds b.\n *\n * @deprecated Use `Bounds.includes` from `sprotty-protocol` instead.\n */\nexport function includes(b: Bounds, p: Point): boolean {\n    return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;\n}\n/**\n * Returns the \"straight line\" distance between two points.\n * @param {Point} a - First point\n * @param {Point} b - Second point\n * @returns {number} The Eucledian distance\n *\n * @deprecated Use `Point.euclideanDistance` from `sprotty-protocol` instead.\n */\nexport function euclideanDistance(a: Point, b: Point): number {\n    const dx = b.x - a.x;\n    const dy = b.y - a.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n * Returns the distance between two points in a grid, using a\n * strictly vertical and/or horizontal path (versus straight line).\n * @param {Point} a - First point\n * @param {Point} b - Second point\n * @returns {number} The Manhattan distance\n *\n * @deprecated Use `Point.manhattanDistance` from `sprotty-protocol` instead.\n */\nexport function manhattanDistance(a: Point, b: Point): number {\n    return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);\n}\n\n/**\n * Returns the maximum of the horizontal and the vertical distance.\n * @param {Point} a - First point\n * @param {Point} b - Second point\n * @returns {number} The maximum distance\n *\n * @deprecated Use `Point.maxDistance` from `sprotty-protocol` instead.\n */\nexport function maxDistance(a: Point, b: Point): number {\n    return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\n}\n\n/**\n * Computes the angle in radians of the given point to the x-axis of the coordinate system.\n * The result is in the range [-pi, pi].\n * @param {Point} p - A point in the Eucledian plane\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function angleOfPoint(p: Point): number {\n    return Math.atan2(p.y, p.x);\n}\n\n/**\n * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).\n * The result is in the range [0, pi]. Returns NaN if the points are equal.\n * @param {Point} a - First point\n * @param {Point} b - Second point\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function angleBetweenPoints(a: Point, b: Point): number {\n    const lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));\n    if (isNaN(lengthProduct) || lengthProduct === 0)\n        return NaN;\n    const dotProduct = a.x * b.x + a.y * b.y;\n    return Math.acos(dotProduct / lengthProduct);\n}\n\n/**\n * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.\n * @param {Point} point - Point to shift\n * @param {Point} refPoint - Point to shift towards\n * @param {Point} distance - Distance to shift\n *\n * @deprecated Use `Point.shiftTowards` from `sprotty-protocol` instead.\n */\nexport function shiftTowards(point: Point, refPoint: Point, distance: number): Point {\n    const diff = subtract(refPoint, point);\n    const normalized = normalize(diff);\n    const shift = { x: normalized.x * distance, y: normalized.y * distance };\n    return add(point, shift);\n}\n\n/**\n * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.\n * @param {Point} point - Point representing the vector to be normalized\n * @returns {Point} The normalized point\n *\n * @deprecated Use `Point.normalize` from `sprotty-protocol` instead.\n */\nexport function normalize(point: Point): Point {\n    const mag = magnitude(point);\n    if (mag === 0 || mag === 1) {\n        return ORIGIN_POINT;\n    }\n    return {\n        x: point.x / mag,\n        y: point.y / mag\n    };\n}\n\n/**\n * Computes the magnitude of the vector given in `point`.\n * @param {Point} point - Point representing the vector to compute the magnitude for\n * @returns {number} The magnitude or also known as length of the `point`\n *\n * @deprecated Use `Point.magnitude` from `sprotty-protocol` instead.\n */\nexport function magnitude(point: Point): number {\n    return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n}\n\n/**\n * Converts from radians to degrees\n * @param {number} a - A value in radians\n * @returns {number} The converted value\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function toDegrees(a: number): number {\n    return a * 180 / Math.PI;\n}\n\n/**\n * Converts from degrees to radians\n * @param {number} a - A value in degrees\n * @returns {number} The converted value\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function toRadians(a: number): number {\n    return a * Math.PI / 180;\n}\n\n/**\n * Returns whether two numbers are almost equal, within a small margin (0.001)\n * @param {number} a - First number\n * @param {number} b - Second number\n * @returns {boolean} True if the two numbers are almost equal\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function almostEquals(a: number, b: number): boolean {\n    return Math.abs(a - b) < 1e-3;\n}\n\n/**\n * Calculates a linear combination of p0 and p1 using lambda, i.e.\n *   (1-lambda) * p0 + lambda * p1\n *\n * @deprecated Use `Point.linear` from `sprotty-protocol` instead.\n */\nexport function linear(p0: Point, p1: Point, lambda: number): Point {\n    return {\n        x: (1 - lambda) * p0.x + lambda * p1.x,\n        y: (1 - lambda) * p0.y + lambda * p1.y\n    };\n}\n\n/**\n * A Point is composed of the (x,y) coordinates of an object.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Point {\n    readonly x: number\n    readonly y: number\n}\n\n/**\n * (x,y) coordinates of the origin.\n *\n * @deprecated Use `Point.ORIGIN` from `sprotty-protocol` instead.\n */\nexport const ORIGIN_POINT: Point = Object.freeze({\n    x: 0,\n    y: 0\n});\n\n/**\n * Adds two points.\n * @param {Point} p1 - First point\n * @param {Point} p2 - Second point\n * @returns {Point} The sum of the two points\n *\n * @deprecated Use `Point.add` from `sprotty-protocol` instead.\n */\nexport function add(p1: Point, p2: Point): Point {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}\n\n/**\n * Subtracts two points.\n * @param {Point} p1 - First point\n * @param {Point} p2 - Second point\n * @returns {Point} The difference of the two points\n *\n * @deprecated Use `Point.subtract` from `sprotty-protocol` instead.\n */\nexport function subtract(p1: Point, p2: Point): Point {\n    return {\n        x: p1.x - p2.x,\n        y: p1.y - p2.y\n    };\n}\n\n/**\n * Specifies whether a point has exactly the same coordinates as another point.\n * @param {Point} point1 a point\n * @param {Point} point2 another point\n * @returns {boolean} `true` if `point1` has exactly the same `x` and `y` values as `point2`, `false` otherwise.\n *\n * @deprecated Use `Point.equals` from `sprotty-protocol` instead.\n */\nexport function pointEquals(point1: Point, point2: Point): boolean {\n    return point1.x === point2.x && point1.y === point2.y;\n}\n\n/**\n * The Dimension of an object is composed of its width and height.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Dimension {\n    readonly width: number\n    readonly height: number\n}\n\n/**\n * A dimension with both width and height set to a negative value, which is considered as undefined.\n *\n * @deprecated Use `Dimension.EMPTY` from `sprotty-protocol` instead.\n */\nexport const EMPTY_DIMENSION: Dimension = Object.freeze({\n    width: -1,\n    height: -1\n});\n\n/**\n * Checks whether the given dimention is valid, i.e. the width and height are non-zero.\n * @param {Dimension} b - Dimension object\n * @returns {boolean}\n *\n * @deprecated Use `Dimension.isValid` from `sprotty-protocol` instead.\n */\nexport function isValidDimension(d: Dimension): boolean {\n    return d.width >= 0 && d.height >= 0;\n}\n\n/**\n * The bounds are the position (x, y) and dimension (width, height) of an object.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Bounds extends Point, Dimension {\n}\n\n/**\n * @deprecated Use `Bounds.EMPTY` from `sprotty-protocol` instead.\n */\nexport const EMPTY_BOUNDS: Bounds = Object.freeze({\n    x: 0,\n    y: 0,\n    width: -1,\n    height: -1\n});\n", "/********************************************************************************\n * Copyright (c) 2017-2023 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Dimension } from 'sprotty-protocol';\nimport { Scrollable, Zoomable, Viewport as ProtocolViewport } from 'sprotty-protocol/lib/model';\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { limit, Limits } from '../../utils/geometry';\n\nexport const viewportFeature = Symbol('viewportFeature');\n\n/**\n * Determine whether the given model element has a viewport.\n */\nexport function isViewport(element: SModelElementImpl): element is SModelRootImpl & ProtocolViewport {\n    return element instanceof SModelRootImpl\n        && element.hasFeature(viewportFeature)\n        && 'zoom' in element\n        && 'scroll' in element;\n}\n\n/**\n * Apply limits to the given viewport.\n */\nexport function limitViewport(viewport: ProtocolViewport,\n    canvasBounds: Bounds | undefined,\n    horizontalScrollLimits: Limits | undefined,\n    verticalScrollLimits: Limits | undefined,\n    zoomLimits: Limits | undefined): ProtocolViewport {\n    if (canvasBounds && !Dimension.isValid(canvasBounds)) {\n        canvasBounds = undefined;\n    }\n    // Limit the zoom factor\n    let zoom = zoomLimits ? limit(viewport.zoom, zoomLimits) : viewport.zoom;\n    if (canvasBounds && horizontalScrollLimits) {\n        const minZoom = canvasBounds.width / (horizontalScrollLimits.max - horizontalScrollLimits.min);\n        if (zoom < minZoom) {\n            zoom = minZoom;\n        }\n    }\n    if (canvasBounds && verticalScrollLimits) {\n        const minZoom = canvasBounds.height / (verticalScrollLimits.max - verticalScrollLimits.min);\n        if (zoom < minZoom) {\n            zoom = minZoom;\n        }\n    }\n    // Limit the horizontal scroll position\n    let scrollX: number;\n    if (horizontalScrollLimits) {\n        const min = horizontalScrollLimits.min;\n        const max = canvasBounds ? horizontalScrollLimits.max - canvasBounds.width / zoom : horizontalScrollLimits.max;\n        scrollX = limit(viewport.scroll.x, { min, max });\n    } else {\n        scrollX = viewport.scroll.x;\n    }\n    // Limit the vertical scroll position\n    let scrollY: number;\n    if (verticalScrollLimits) {\n        const min = verticalScrollLimits.min;\n        const max = canvasBounds ? verticalScrollLimits.max - canvasBounds.height / zoom : verticalScrollLimits.max;\n        scrollY = limit(viewport.scroll.y, { min, max });\n    } else {\n        scrollY = viewport.scroll.y;\n    }\n    return { scroll: { x: scrollX, y: scrollY }, zoom };\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Viewport extends Scrollable, Zoomable {\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElementImpl } from '../../base/model/smodel';\n\nexport const exportFeature = Symbol('exportFeature');\n\nexport function isExportable(element: SModelElementImpl): boolean {\n     return element.hasFeature(exportFeature);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelRoot as SModelRootSchema, Viewport } from 'sprotty-protocol/lib/model';\nimport { Bounds, Dimension, isBounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelRootImpl, ModelIndexImpl } from '../../base/model/smodel';\nimport { viewportFeature } from \"./model\";\nimport { exportFeature } from \"../export/model\";\nimport { BoundsAware } from \"../bounds/model\";\n\nexport interface ViewportRootElementSchema extends SModelRootSchema {\n    scroll?: Point\n    zoom?: number\n    position?: Point\n    size?: Dimension\n}\n\n/**\n * Model root element that defines a viewport, so it transforms the coordinate system with\n * a `scroll` translation and a `zoom` scaling.\n */\nexport class ViewportRootElement extends SModelRootImpl implements Viewport, BoundsAware {\n    static readonly DEFAULT_FEATURES = [viewportFeature, exportFeature];\n\n    scroll: Point = { x: 0, y: 0 };\n    zoom: number = 1;\n    position: Point = Point.ORIGIN;\n    size: Dimension = Dimension.EMPTY;\n\n    constructor(index?: ModelIndexImpl) {\n        super(index);\n    }\n\n    get bounds(): Bounds {\n        return {\n            x: this.position.x,\n            y: this.position.y,\n            width: this.size.width,\n            height: this.size.height\n        };\n    }\n\n    set bounds(newBounds: Bounds) {\n        this.position = {\n            x: newBounds.x,\n            y: newBounds.y\n        };\n        this.size = {\n            width: newBounds.width,\n            height: newBounds.height\n        };\n    }\n\n    override localToParent(point: Point | Bounds): Bounds {\n        const result = {\n            x: (point.x - this.scroll.x) * this.zoom,\n            y: (point.y - this.scroll.y) * this.zoom,\n            width: -1,\n            height: -1\n        };\n        if (isBounds(point)) {\n            result.width = point.width * this.zoom;\n            result.height = point.height * this.zoom;\n        }\n        return result;\n    }\n\n    override parentToLocal(point: Point | Bounds): Bounds {\n        const result = {\n            x: (point.x / this.zoom) + this.scroll.x,\n            y: (point.y / this.zoom) + this.scroll.y,\n            width: -1,\n            height: -1\n        };\n        if (isBounds(point) && Dimension.isValid(point)) {\n            result.width = point.width / this.zoom;\n            result.height = point.height / this.zoom;\n        }\n        return result;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {\n    SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema, SShapeElement as SShapeElementSchema\n} from 'sprotty-protocol/lib/model';\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { ModelIndexImpl, SChildElementImpl, SModelElementImpl } from '../base/model/smodel';\nimport {\n    Alignable, alignFeature, BoundsAware, boundsFeature, layoutableChildFeature, layoutContainerFeature,\n    ModelLayoutOptions, SShapeElementImpl\n} from '../features/bounds/model';\nimport { edgeLayoutFeature, EdgePlacement } from '../features/edge-layout/model';\nimport { deletableFeature } from '../features/edit/delete';\nimport { editFeature } from '../features/edit/model';\nimport { Fadeable, fadeFeature } from '../features/fade/model';\nimport { Hoverable, hoverFeedbackFeature, popupFeature } from '../features/hover/model';\nimport { moveFeature } from '../features/move/model';\nimport { connectableFeature, SConnectableElementImpl, SRoutableElementImpl } from '../features/routing/model';\nimport { Selectable, selectFeature } from '../features/select/model';\nimport { ViewportRootElement } from '../features/viewport/viewport-root';\nimport { FluentIterable, FluentIterableImpl } from '../utils/iterable';\n\n/**\n * Root element for graph-like models.\n */\nexport class SGraphImpl extends ViewportRootElement {\n    layoutOptions?: ModelLayoutOptions;\n\n    constructor(index = new SGraphIndex()) {\n        super(index);\n    }\n}\n\n/**\n * Model element class for nodes, which are the main entities in a graph. A node can be connected to\n * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of\n * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.\n */\nexport class SNodeImpl extends SConnectableElementImpl implements Selectable, Fadeable, Hoverable {\n    static readonly DEFAULT_FEATURES = [connectableFeature, deletableFeature, selectFeature, boundsFeature,\n        moveFeature, layoutContainerFeature, fadeFeature, hoverFeedbackFeature, popupFeature];\n\n    override children: SChildElementImpl[];\n    layout?: string;\n    selected: boolean = false;\n    hoverFeedback: boolean = false;\n    opacity: number = 1;\n\n    override canConnect(routable: SRoutableElementImpl, role: string) {\n        return this.children.find(c => c instanceof SPortImpl) === undefined;\n    }\n\n    override get incomingEdges(): FluentIterable<SEdgeImpl> {\n        const index = this.index;\n        if (index instanceof SGraphIndex) {\n            return index.getIncomingEdges(this);\n        }\n        const allEdges = this.index.all().filter(e => e instanceof SEdgeImpl) as FluentIterable<SEdgeImpl>;\n        return allEdges.filter(e => e.targetId === this.id);\n    }\n\n    override get outgoingEdges(): FluentIterable<SEdgeImpl> {\n        const index = this.index;\n        if (index instanceof SGraphIndex) {\n            return index.getOutgoingEdges(this);\n        }\n        const allEdges = this.index.all().filter(e => e instanceof SEdgeImpl) as FluentIterable<SEdgeImpl>;\n        return allEdges.filter(e => e.sourceId === this.id);\n    }\n\n}\n\n/**\n * A port is a connection point for edges. It should always be contained in an SNode.\n */\nexport class SPortImpl extends SConnectableElementImpl implements Selectable, Fadeable, Hoverable {\n    static readonly DEFAULT_FEATURES = [connectableFeature, selectFeature, boundsFeature, fadeFeature,\n        hoverFeedbackFeature];\n\n    selected: boolean = false;\n    hoverFeedback: boolean = false;\n    opacity: number = 1;\n\n    override get incomingEdges(): FluentIterable<SEdgeImpl> {\n        const index = this.index;\n        if (index instanceof SGraphIndex) {\n            return index.getIncomingEdges(this);\n        }\n        return super.incomingEdges.filter(e => e instanceof SEdgeImpl) as FluentIterable<SEdgeImpl>;\n    }\n\n    override get outgoingEdges(): FluentIterable<SEdgeImpl> {\n        const index = this.index;\n        if (index instanceof SGraphIndex) {\n            return index.getOutgoingEdges(this);\n        }\n        return super.outgoingEdges.filter(e => e instanceof SEdgeImpl) as FluentIterable<SEdgeImpl>;\n    }\n\n}\n\n\n\n/**\n * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,\n * each of which can be either a node or a port. The source and target elements are referenced via their\n * ids and can be resolved with the index stored in the root element.\n */\nexport class SEdgeImpl extends SRoutableElementImpl implements Fadeable, Selectable, Hoverable, BoundsAware {\n    static readonly DEFAULT_FEATURES = [editFeature, deletableFeature, selectFeature, fadeFeature,\n        hoverFeedbackFeature];\n\n    selected: boolean = false;\n    hoverFeedback: boolean = false;\n    opacity: number = 1;\n\n}\n\n/**\n * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.\n */\nexport class SLabelImpl extends SShapeElementImpl implements Selectable, Alignable, Fadeable {\n    static readonly DEFAULT_FEATURES = [boundsFeature, alignFeature, layoutableChildFeature,\n        edgeLayoutFeature, fadeFeature];\n\n    text: string;\n    selected: boolean = false;\n    alignment: Point = Point.ORIGIN;\n    opacity = 1;\n    edgePlacement?: EdgePlacement;\n\n}\n\n/**\n * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`\n * or `hbox` layout is used to arrange these children.\n */\nexport class SCompartmentImpl extends SShapeElementImpl implements Fadeable {\n    static readonly DEFAULT_FEATURES = [boundsFeature, layoutContainerFeature, layoutableChildFeature,\n        fadeFeature];\n\n    override children: SChildElementImpl[];\n    layout?: string;\n    override layoutOptions?: {[key: string]: string | number | boolean};\n    opacity = 1;\n\n}\n\n\n\n/**\n * A specialized model index that tracks outgoing and incoming edges.\n */\nexport class SGraphIndex extends ModelIndexImpl {\n\n    private outgoing: Map<string, SEdgeImpl[]> = new Map;\n    private incoming: Map<string, SEdgeImpl[]> = new Map;\n\n    override add(element: SModelElementImpl): void {\n        super.add(element);\n        if (element instanceof SEdgeImpl) {\n            // Register the edge in the outgoing map\n            if (element.sourceId) {\n                const sourceArr = this.outgoing.get(element.sourceId);\n                if (sourceArr === undefined)\n                    this.outgoing.set(element.sourceId, [element]);\n                else\n                    sourceArr.push(element);\n            }\n            // Register the edge in the incoming map\n            if (element.targetId) {\n                const targetArr = this.incoming.get(element.targetId);\n                if (targetArr === undefined)\n                    this.incoming.set(element.targetId, [element]);\n                else\n                    targetArr.push(element);\n            }\n        }\n    }\n\n    override remove(element: SModelElementImpl): void {\n        super.remove(element);\n        if (element instanceof SEdgeImpl) {\n            // Remove the edge from the outgoing map\n            const sourceArr = this.outgoing.get(element.sourceId);\n            if (sourceArr !== undefined) {\n                const index = sourceArr.indexOf(element);\n                if (index >= 0) {\n                    if (sourceArr.length === 1)\n                        this.outgoing.delete(element.sourceId);\n                    else\n                        sourceArr.splice(index, 1);\n                }\n            }\n            // Remove the edge from the incoming map\n            const targetArr = this.incoming.get(element.targetId);\n            if (targetArr !== undefined) {\n                const index = targetArr.indexOf(element);\n                if (index >= 0) {\n                    if (targetArr.length === 1)\n                        this.incoming.delete(element.targetId);\n                    else\n                        targetArr.splice(index, 1);\n                }\n            }\n        }\n    }\n\n    override getAttachedElements(element: SModelElementImpl): FluentIterable<SModelElementImpl> {\n        return new FluentIterableImpl(\n            () => ({\n                outgoing: this.outgoing.get(element.id),\n                incoming: this.incoming.get(element.id),\n                nextOutgoingIndex: 0,\n                nextIncomingIndex: 0\n            }),\n            (state) => {\n                let index = state.nextOutgoingIndex;\n                if (state.outgoing !== undefined && index < state.outgoing.length) {\n                    state.nextOutgoingIndex = index + 1;\n                    return { done: false, value: state.outgoing[index] };\n                }\n                index = state.nextIncomingIndex;\n                if (state.incoming !== undefined) {\n                    // Filter out self-loops: edges that are both outgoing and incoming\n                    while (index < state.incoming.length) {\n                        const edge = state.incoming[index];\n                        if (edge.sourceId !== edge.targetId) {\n                            state.nextIncomingIndex = index + 1;\n                            return { done: false, value: edge };\n                        }\n                        index++;\n                    }\n                }\n                return { done: true, value: undefined as any };\n            }\n        );\n    }\n\n    getIncomingEdges(element: SConnectableElementImpl): FluentIterable<SEdgeImpl> {\n        return this.incoming.get(element.id) || [];\n    }\n\n    getOutgoingEdges(element: SConnectableElementImpl): FluentIterable<SEdgeImpl> {\n        return this.outgoing.get(element.id) || [];\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Serializable schema for graph-like models.\n *\n * @deprecated Use `SGraph` from `sprotty-protocol` instead.\n */\nexport interface SGraphSchema extends SModelRootSchema {\n    children: SModelElementSchema[]\n    bounds?: Bounds\n    scroll?: Point\n    zoom?: number\n    layoutOptions?: ModelLayoutOptions\n}\n\n/** @deprecated Use `SCompartmentImpl` instead. */\nexport const SCompartment = SCompartmentImpl;\n\n/** @deprecated Use `SGraphImpl` instead. */\nexport const SGraph = SGraphImpl;\n\n/**\n * Serializable schema for SNode.\n *\n * @deprecated Use `SNode` from `sprotty-protocol` instead.\n */\nexport interface SNodeSchema extends SShapeElementSchema {\n    layout?: string\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n    anchorKind?: string\n}\n\n/** @deprecated Use `SNodeImpl` instead. */\nexport const SNode = SNodeImpl;\n\n/**\n * Serializable schema for SPort.\n *\n * @deprecated Use `SPort` from `sprotty-protocol` instead.\n */\nexport interface SPortSchema extends SShapeElementSchema {\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n    anchorKind?: string;\n}\n\n/** @deprecated Use `SPortImpl` instead. */\nexport const SPort = SPortImpl;\n\n/**\n * Serializable schema for SEdge.\n *\n * @deprecated Use `SEdge` from `sprotty-protocol` instead.\n */\nexport interface SEdgeSchema extends SModelElementSchema {\n    sourceId: string\n    targetId: string\n    routerKind?: string;\n    routingPoints?: Point[]\n    selected?: boolean\n    hoverFeedback?: boolean\n    opacity?: number\n}\n\n/** @deprecated Use `SEdgeImpl` instead. */\nexport const SEdge = SEdgeImpl;\n\n/**\n * Serializable schema for SLabel.\n *\n * @deprecated Use `SLabel` from `sprotty-protocol` instead.\n */\nexport interface SLabelSchema extends SShapeElementSchema {\n    text: string\n    selected?: boolean\n}\n\n/** @deprecated Use `SLabelImpl` instead. */\nexport const SLabel = SLabelImpl;\n\n/**\n * Serializable schema for SCompartment.\n *\n * @deprecated Use `SCompartment` from `sprotty-protocol` instead.\n */\nexport interface SCompartmentSchema extends SShapeElementSchema {\n    layout?: string\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject } from \"inversify\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { TYPES } from \"../../base/types\";\nimport { InstanceRegistry } from \"../../utils/registry\";\nimport { SConnectableElementImpl } from \"./model\";\n\nexport const DIAMOND_ANCHOR_KIND = 'diamond';\nexport const ELLIPTIC_ANCHOR_KIND = 'elliptic';\nexport const RECTANGULAR_ANCHOR_KIND = 'rectangular';\n\nexport interface IAnchorComputer {\n    readonly kind: string;\n\n    /**\n     * Compute an anchor position for routing an edge towards this element.\n     *\n     * The default implementation returns the element's center point. If edges should be connected\n     * differently, e.g. to some point on the boundary of the element's view, the according computation\n     * should be implemented in a subclass by overriding this method.\n     *\n     * @param connectable The node or port an edge should be connected to.\n     * @param referencePoint The point from which the edge is routed towards this elemet, in the same\n     *                       coordintae system as the connectable.\n     * @param offset An optional offset value to be considered in the anchor computation;\n     *               positive values should shift the anchor away from this element, negative values\n     *               should shift the anchor more to the inside. Use this to adapt ot arrow heads.\n     */\n    getAnchor(connectable: SConnectableElementImpl, referencePoint: Point, offset?: number): Point;\n}\n\n\n@injectable()\nexport class AnchorComputerRegistry extends InstanceRegistry<IAnchorComputer> {\n\n    constructor(@multiInject(TYPES.IAnchorComputer) anchors: IAnchorComputer[]) {\n        super();\n        anchors.forEach(anchor => this.register(anchor.kind, anchor));\n    }\n\n    protected get defaultAnchorKind() {\n        return RECTANGULAR_ANCHOR_KIND;\n    }\n\n    override get(routerKind: string, anchorKind?: string): IAnchorComputer {\n        return super.get(`${routerKind}:${anchorKind || this.defaultAnchorKind}`);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelElementImpl, SParentElementImpl } from \"../../base/model/smodel\";\nimport { translateBounds, translatePoint } from \"../../base/model/smodel-utils\";\nimport { ResolvedHandleMove } from \"../move/move\";\nimport { RoutingHandleKind, SDanglingAnchorImpl, SRoutingHandleImpl, edgeInProgressID, edgeInProgressTargetHandleID } from \"./model\";\nimport { AnchorComputerRegistry, IAnchorComputer } from \"./anchor\";\nimport { SConnectableElementImpl, SRoutableElementImpl } from \"./model\";\nimport { EdgeSnapshot, IEdgeRouter, RoutedPoint } from \"./routing\";\n\nexport interface LinearRouteOptions {\n    minimalPointDistance: number\n    standardDistance: number\n    selfEdgeOffset: number\n}\n\nexport enum Side { RIGHT, LEFT, TOP, BOTTOM }\n\nexport class DefaultAnchors {\n    readonly bounds: Bounds;\n    readonly left: RoutedPoint;\n    readonly right: RoutedPoint;\n    readonly top: RoutedPoint;\n    readonly bottom: RoutedPoint;\n\n    constructor(readonly element: SConnectableElementImpl, edgeParent: SParentElementImpl, readonly kind: 'source' | 'target') {\n        const bounds = element.bounds;\n        this.bounds = translateBounds(bounds, element.parent, edgeParent);\n        this.left = { x: this.bounds.x, y: this.bounds.y + 0.5 * this.bounds.height, kind };\n        this.right = { x: this.bounds.x + this.bounds.width, y: this.bounds.y + 0.5 * this.bounds.height, kind };\n        this.top = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y, kind };\n        this.bottom = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y + this.bounds.height, kind };\n    }\n\n    get(side: Side): RoutedPoint {\n        return (this as any)[Side[side].toLowerCase()];\n    }\n\n    getNearestSide(point: Point): Side {\n        const leftDistance = Point.euclideanDistance(point, this.left);\n        const rightDistance = Point.euclideanDistance(point, this.right);\n        const topDistance = Point.euclideanDistance(point, this.top);\n        const bottomDistance = Point.euclideanDistance(point, this.bottom);\n        let currentNearestSide = Side.LEFT;\n        let currentMinDist = leftDistance;\n        if (rightDistance < currentMinDist) {\n            currentMinDist = rightDistance;\n            currentNearestSide = Side.RIGHT;\n        }\n        if (topDistance < currentMinDist) {\n            currentMinDist = topDistance;\n            currentNearestSide = Side.TOP;\n        }\n        if (bottomDistance < currentMinDist) {\n            currentMinDist = bottomDistance;\n            currentNearestSide = Side.BOTTOM;\n        }\n        return currentNearestSide;\n    }\n}\n\n@injectable()\nexport abstract class AbstractEdgeRouter implements IEdgeRouter {\n\n    @inject(AnchorComputerRegistry) anchorRegistry: AnchorComputerRegistry;\n\n    abstract get kind(): string;\n\n    abstract route(edge: SRoutableElementImpl): RoutedPoint[];\n\n    abstract createRoutingHandles(edge: SRoutableElementImpl): void;\n\n    protected abstract getOptions(edge: SRoutableElementImpl): LinearRouteOptions;\n\n    pointAt(edge: SRoutableElementImpl, t: number): Point | undefined {\n        const segments = this.calculateSegment(edge, t);\n        if (!segments)\n            return undefined;\n        const { segmentStart, segmentEnd, lambda } = segments;\n        return Point.linear(segmentStart, segmentEnd, lambda);\n    }\n\n    derivativeAt(edge: SRoutableElementImpl, t: number): Point | undefined {\n        const segments = this.calculateSegment(edge, t);\n        if (!segments)\n            return undefined;\n        const { segmentStart, segmentEnd } = segments;\n        return {\n            x: segmentEnd.x - segmentStart.x,\n            y: segmentEnd.y - segmentStart.y\n        };\n    }\n\n    protected calculateSegment(edge: SRoutableElementImpl, t: number): { segmentStart: Point, segmentEnd: Point, lambda: number} | undefined {\n        if (t < 0 || t > 1)\n            return undefined;\n        const routedPoints = this.route(edge);\n        if (routedPoints.length < 2)\n            return undefined;\n        const segmentLengths: number[] = [];\n        let totalLength = 0;\n        for (let i = 0; i < routedPoints.length - 1; ++i) {\n            segmentLengths[i] = Point.euclideanDistance(routedPoints[i], routedPoints[i + 1]);\n            totalLength += segmentLengths[i];\n        }\n        let currentLenght = 0;\n        const tAsLenght = t * totalLength;\n        for (let i = 0; i < routedPoints.length - 1; ++i) {\n            const newLength = currentLenght + segmentLengths[i];\n            // avoid division by (almost) zero\n            if (segmentLengths[i] > 1E-8) {\n                if (newLength >= tAsLenght) {\n                    const lambda = Math.max(0, (tAsLenght - currentLenght)) / segmentLengths[i];\n                    return {\n                        segmentStart: routedPoints[i],\n                        segmentEnd: routedPoints[i + 1],\n                        lambda\n                    };\n                }\n            }\n            currentLenght = newLength;\n        }\n        return {\n            segmentEnd: routedPoints.pop()!,\n            segmentStart: routedPoints.pop()!,\n            lambda: 1\n        };\n    }\n\n    protected addHandle(edge: SRoutableElementImpl, kind: RoutingHandleKind, type: string, routingPointIndex: number): SRoutingHandleImpl {\n        const handle = new SRoutingHandleImpl();\n        handle.kind = kind;\n        handle.pointIndex = routingPointIndex;\n        handle.type = type;\n        if (kind === 'target' && edge.id === edgeInProgressID)\n            handle.id = edgeInProgressTargetHandleID;\n        edge.add(handle);\n        return handle;\n    }\n\n    getHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl): Point | undefined {\n        switch (handle.kind) {\n            case 'source':\n                if (edge.source instanceof SDanglingAnchorImpl)\n                    return edge.source.position;\n                else\n                    return route[0];\n            case 'target':\n                if (edge.target instanceof SDanglingAnchorImpl)\n                    return edge.target.position;\n                 else {\n                    return route[route.length - 1];\n                }\n            default:\n                const position = this.getInnerHandlePosition(edge, route, handle);\n                if (position !== undefined)\n                    return position;\n                if (handle.pointIndex >= 0 && handle.pointIndex < edge.routingPoints.length)\n                    return edge.routingPoints[handle.pointIndex];\n        }\n        return undefined;\n    }\n\n    protected abstract getInnerHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl): Point | undefined;\n\n    protected findRouteSegment(edge: SRoutableElementImpl, route: RoutedPoint[], handleIndex: number): { start?: Point, end?: Point } {\n        const getIndex = (rp: RoutedPoint) => {\n            if (rp.pointIndex !== undefined)\n                return rp.pointIndex;\n            else if (rp.kind === 'target')\n                return edge.routingPoints.length;\n            else\n                return -2;\n        };\n        let start, end: RoutedPoint | undefined;\n        for (const rp of route) {\n            const i = getIndex(rp);\n            if (i <= handleIndex && (start === undefined || i > getIndex(start)))\n                start = rp;\n            if (i > handleIndex && (end === undefined || i < getIndex(end)))\n                end = rp;\n        }\n        return { start, end };\n    }\n\n    getTranslatedAnchor(connectable: SConnectableElementImpl, refPoint: Point, refContainer: SParentElementImpl, edge: SRoutableElementImpl, anchorCorrection: number = 0): Point {\n        const translatedRefPoint = translatePoint(refPoint, refContainer, connectable.parent);\n        const anchorComputer = this.getAnchorComputer(connectable);\n        const strokeCorrection = 0.5 * connectable.strokeWidth;\n        const anchor = anchorComputer.getAnchor(connectable, translatedRefPoint, anchorCorrection + strokeCorrection);\n        return translatePoint(anchor, connectable.parent, edge.parent);\n    }\n\n    protected getAnchorComputer(connectable: SConnectableElementImpl): IAnchorComputer {\n       return this.anchorRegistry.get(this.kind, connectable.anchorKind);\n    }\n\n    applyHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void {\n        const remainingMoves = moves.slice();\n        moves.forEach(move => {\n            const handle = move.handle;\n            if (handle.kind === 'source' && !(edge.source instanceof SDanglingAnchorImpl)) {\n                // detach source\n                const anchor = new SDanglingAnchorImpl();\n                anchor.id = edge.id + '_dangling-source';\n                anchor.original = edge.source;\n                anchor.position = move.toPosition;\n                handle.root.add(anchor);\n                handle.danglingAnchor = anchor;\n                edge.sourceId = anchor.id;\n            } else if (handle.kind === 'target' && !(edge.target instanceof SDanglingAnchorImpl)) {\n                // detach target\n                const anchor = new SDanglingAnchorImpl();\n                anchor.id = edge.id + '_dangling-target';\n                anchor.original = edge.target;\n                anchor.position = move.toPosition;\n                handle.root.add(anchor);\n                handle.danglingAnchor = anchor;\n                edge.targetId = anchor.id;\n            }\n            if (handle.danglingAnchor) {\n                handle.danglingAnchor.position = move.toPosition;\n                remainingMoves.splice(remainingMoves.indexOf(move), 1);\n            }\n        });\n        if (remainingMoves.length > 0)\n            this.applyInnerHandleMoves(edge, remainingMoves);\n        this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);\n    }\n\n    protected abstract applyInnerHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void;\n\n    cleanupRoutingPoints(edge: SRoutableElementImpl, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean) {\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, \"source\");\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, \"target\");\n        this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors);\n    }\n\n    protected resetRoutingPointsOnReconnect(edge: SRoutableElementImpl, routingPoints: Point[], updateHandles: boolean,\n        sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors): boolean {\n        if (routingPoints.length === 0 || edge.source instanceof SDanglingAnchorImpl || edge.target instanceof SDanglingAnchorImpl) {\n            const options = this.getOptions(edge);\n            const corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\n            routingPoints.splice(0, routingPoints.length, ...corners);\n            if (updateHandles) {\n                let maxPointIndex = -2;\n                edge.children.forEach(child => {\n                    if (child instanceof SRoutingHandleImpl) {\n                        if (child.kind === 'target')\n                            child.pointIndex = routingPoints.length;\n                        else if (child.kind === 'line' && child.pointIndex >= routingPoints.length)\n                            edge.remove(child);\n                        else\n                            maxPointIndex = Math.max(child.pointIndex, maxPointIndex);\n                    }\n                });\n                for (let i = maxPointIndex; i < routingPoints.length - 1; ++i)\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    applyReconnect(edge: SRoutableElementImpl, newSourceId?: string, newTargetId?: string) {\n        let hasChanged = false;\n        if (newSourceId) {\n            const newSource = edge.root.index.getById(newSourceId);\n            if (newSource instanceof SConnectableElementImpl) {\n                edge.sourceId = newSource.id;\n                hasChanged = true;\n            }\n        }\n        if (newTargetId) {\n            const newTarget = edge.root.index.getById(newTargetId);\n            if (newTarget instanceof SConnectableElementImpl) {\n                edge.targetId = newTarget.id;\n                hasChanged = true;\n            }\n        }\n        if (hasChanged) {\n            // reset attached elements in index\n            edge.index.remove(edge);\n            edge.index.add(edge);\n            if (this.getSelfEdgeIndex(edge) > -1) {\n                edge.routingPoints = [];\n                this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);\n            }\n        }\n    }\n\n    takeSnapshot(edge: SRoutableElementImpl): EdgeSnapshot {\n        return {\n            routingPoints: edge.routingPoints.slice(),\n            routingHandles: edge.children\n                .filter(child => child instanceof SRoutingHandleImpl)\n                .map(child => child as SRoutingHandleImpl),\n            routedPoints: this.route(edge),\n            router: this,\n            source: edge.source,\n            target: edge.target\n        };\n    }\n\n    applySnapshot(edge: SRoutableElementImpl, snapshot: EdgeSnapshot): void {\n        edge.routingPoints = snapshot.routingPoints;\n        edge.removeAll(child => child instanceof SRoutingHandleImpl);\n        edge.routerKind = snapshot.router.kind;\n        snapshot.routingHandles.forEach(handle => edge.add(handle));\n        if (snapshot.source)\n            edge.sourceId = snapshot.source.id;\n        if (snapshot.target)\n            edge.targetId = snapshot.target.id;\n        // update index\n        edge.root.index.remove(edge as SModelElementImpl);\n        edge.root.index.add(edge as SModelElementImpl);\n    }\n\n    protected calculateDefaultCorners(edge: SRoutableElementImpl, sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors, options: LinearRouteOptions): Point[] {\n        const selfEdgeIndex = this.getSelfEdgeIndex(edge);\n        if (selfEdgeIndex >= 0) {\n            const standardDist = options.standardDistance;\n            const delta = options.selfEdgeOffset * Math.min(sourceAnchors.bounds.width, sourceAnchors.bounds.height);\n            switch (selfEdgeIndex % 4) {\n                case 0:\n                    return [\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y + delta },\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\n                        { x: sourceAnchors.get(Side.BOTTOM).x + delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\n                    ];\n                case 1:\n                    return [\n                        { x: sourceAnchors.get(Side.BOTTOM).x - delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y + delta},\n                    ];\n                case 2:\n                    return [\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y - delta },\n                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },\n                        { x: sourceAnchors.get(Side.TOP).x - delta, y: sourceAnchors.get(Side.TOP).y - standardDist },\n                    ];\n                case 3:\n                    return [\n                        { x: sourceAnchors.get(Side.TOP).x + delta, y: sourceAnchors.get(Side.TOP).y - standardDist },\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },\n                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y - delta },\n                    ];\n            }\n        }\n        return [];\n    }\n\n    protected getSelfEdgeIndex(edge: SRoutableElementImpl): number {\n        if (!edge.source || edge.source !== edge.target)\n            return -1;\n        return edge.source.outgoingEdges\n            .filter(otherEdge => otherEdge.target === edge.source)\n            .indexOf(edge);\n    }\n\n    protected commitRoute(edge: SRoutableElementImpl, routedPoints: RoutedPoint[]) {\n        const newRoutingPoints: Point[] = [];\n        for (let i = 1; i < routedPoints.length - 1; ++i)\n            newRoutingPoints.push({ x: routedPoints[i].x, y: routedPoints[i].y });\n        edge.routingPoints = newRoutingPoints;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { angleBetweenPoints, Bounds, centerOfLine, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SRoutingHandleImpl } from \"./model\";\nimport { ResolvedHandleMove } from \"../move/move\";\nimport { AnchorComputerRegistry } from \"./anchor\";\nimport { AbstractEdgeRouter, LinearRouteOptions } from \"./abstract-edge-router\";\nimport { SRoutableElementImpl } from \"./model\";\nimport { RoutedPoint } from \"./routing\";\n\nexport interface PolylineRouteOptions extends LinearRouteOptions {\n    /** The angle in radians below which a routing handle is removed. */\n    removeAngleThreshold: number;\n}\n\n@injectable()\nexport class PolylineEdgeRouter extends AbstractEdgeRouter {\n\n    @inject(AnchorComputerRegistry) override anchorRegistry: AnchorComputerRegistry;\n\n    static readonly KIND = 'polyline';\n\n    get kind() {\n        return PolylineEdgeRouter.KIND;\n    }\n\n    protected getOptions(edge: SRoutableElementImpl): PolylineRouteOptions {\n        return {\n            minimalPointDistance: 2,\n            removeAngleThreshold: 0.1,\n            standardDistance: 20,\n            selfEdgeOffset: 0.25\n        };\n    }\n\n    route(edge: SRoutableElementImpl): RoutedPoint[] {\n        const source = edge.source;\n        const target = edge.target;\n        if (source === undefined || target === undefined) {\n            return [];\n        }\n\n        let sourceAnchor: Point;\n        let targetAnchor: Point;\n        const options = this.getOptions(edge);\n        const routingPoints = edge.routingPoints.length > 0\n            ? edge.routingPoints\n            : [];\n        this.cleanupRoutingPoints(edge, routingPoints, false, false);\n        const rpCount = routingPoints !== undefined ? routingPoints.length : 0;\n        if (rpCount === 0) {\n            // Use the target center as start anchor reference\n            const startRef = Bounds.center(target.bounds);\n            sourceAnchor = this.getTranslatedAnchor(source, startRef, target.parent, edge, edge.sourceAnchorCorrection);\n            // Use the source center as end anchor reference\n            const endRef = Bounds.center(source.bounds);\n            targetAnchor = this.getTranslatedAnchor(target, endRef, source.parent, edge, edge.targetAnchorCorrection);\n        } else {\n            // Use the first routing point as start anchor reference\n            const p0 = routingPoints[0];\n            sourceAnchor = this.getTranslatedAnchor(source, p0, edge.parent, edge, edge.sourceAnchorCorrection);\n            // Use the last routing point as end anchor reference\n            const pn = routingPoints[rpCount - 1];\n            targetAnchor = this.getTranslatedAnchor(target, pn, edge.parent, edge, edge.targetAnchorCorrection);\n        }\n\n        const result: RoutedPoint[] = [];\n        result.push({ kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y });\n        for (let i = 0; i < rpCount; i++) {\n            const p = routingPoints[i];\n            if (i > 0 && i < rpCount - 1\n                || i === 0 && Point.maxDistance(sourceAnchor, p) >= options.minimalPointDistance + (edge.sourceAnchorCorrection || 0)\n                || i === rpCount - 1 && Point.maxDistance(p, targetAnchor) >= options.minimalPointDistance + (edge.targetAnchorCorrection || 0)) {\n                result.push({ kind: 'linear', x: p.x, y: p.y, pointIndex: i });\n            }\n        }\n        result.push({ kind: 'target', x: targetAnchor.x, y: targetAnchor.y });\n            return this.filterEditModeHandles(result, edge, options);\n    }\n\n    /**\n     * Remove routed points that are in edit mode and for which the angle between the preceding and\n     * following points falls below a threshold.\n     */\n    protected filterEditModeHandles(route: RoutedPoint[], edge: SRoutableElementImpl, options: PolylineRouteOptions): RoutedPoint[] {\n        if (edge.children.length === 0)\n            return route;\n\n        let i = 0;\n        while (i < route.length) {\n            const curr = route[i];\n            if (curr.pointIndex !== undefined) {\n                const handle: SRoutingHandleImpl | undefined = edge.children.find(child =>\n                    child instanceof SRoutingHandleImpl && child.kind === 'junction' && child.pointIndex === curr.pointIndex) as any;\n                if (handle !== undefined && handle.editMode && i > 0 && i < route.length - 1) {\n                    const prev = route[i - 1], next = route[i + 1];\n                    const prevDiff: Point = { x: prev.x - curr.x, y: prev.y - curr.y };\n                    const nextDiff: Point = { x: next.x - curr.x, y: next.y - curr.y };\n                    const angle = angleBetweenPoints(prevDiff, nextDiff);\n                    if (Math.abs(Math.PI - angle) < options.removeAngleThreshold) {\n                        route.splice(i, 1);\n                        continue;\n                    }\n                }\n            }\n            i++;\n        }\n        return route;\n    }\n\n    createRoutingHandles(edge: SRoutableElementImpl): void {\n        const rpCount = edge.routingPoints.length;\n        this.addHandle(edge, 'source', 'routing-point', -2);\n        this.addHandle(edge, 'line', 'volatile-routing-point', -1);\n        for (let i = 0; i < rpCount; i++) {\n            this.addHandle(edge, 'junction', 'routing-point', i);\n            this.addHandle(edge, 'line', 'volatile-routing-point', i);\n        }\n        this.addHandle(edge, 'target', 'routing-point', rpCount);\n    }\n\n    getInnerHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl) {\n        if (handle.kind === 'line') {\n            const { start, end } = this.findRouteSegment(edge, route, handle.pointIndex);\n            if (start !== undefined && end !== undefined)\n                return centerOfLine(start, end);\n        }\n        return undefined;\n    }\n\n    applyInnerHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]) {\n        moves.forEach(move => {\n            const handle = move.handle;\n            const points = edge.routingPoints;\n            let index = handle.pointIndex;\n            if (handle.kind === 'line') {\n                // Upgrade to a proper routing point\n                handle.kind = 'junction';\n                handle.type = 'routing-point';\n                points.splice(index + 1, 0, move.fromPosition || points[Math.max(index, 0)]);\n                edge.children.forEach(child => {\n                    if (child instanceof SRoutingHandleImpl && (child === handle || child.pointIndex > index))\n                        child.pointIndex++;\n                });\n                this.addHandle(edge, 'line', 'volatile-routing-point', index);\n                index++;\n                this.addHandle(edge, 'line', 'volatile-routing-point', index);\n            }\n            if (index >= 0 && index < points.length) {\n                points[index] = move.toPosition;\n            }\n        });\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, multiInject, optional } from \"inversify\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SParentElementImpl } from \"../../base/model/smodel\";\nimport { TYPES } from \"../../base/types\";\nimport { findArgValue, IViewArgs } from \"../../base/views/view\";\nimport { InstanceRegistry } from \"../../utils/registry\";\nimport { ResolvedHandleMove } from \"../move/move\";\nimport { SRoutingHandleImpl } from \"../routing/model\";\nimport { SConnectableElementImpl, SRoutableElementImpl } from \"./model\";\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\n\n/**\n * A point describing the shape of an edge.\n *\n * The <code>RoutedPoints</code> of an edge are derived from the <code>routingPoints</code>\n * which plain <code>Points</code> stored in the SModel by the <code>IEdgeRouter</code>.\n * As opposed to the originals, they also contain the source and target anchor points.\n * The router may also add or remove points in order to satisfy the constraints\n * the constraints of the routing algorithm or in order to to filter out points which are\n * obsolete, e.g. to close to each other.\n */\nexport interface RoutedPoint extends Point {\n    kind: 'source' | 'target' | 'linear' | 'bezier-control-before' | 'bezier-junction' | 'bezier-control-after'\n    pointIndex?: number\n}\n\n/**\n * Stores the state of an edge at a specific time.\n */\nexport interface EdgeSnapshot {\n    routingHandles: SRoutingHandleImpl[]\n    routingPoints: Point[]\n    routedPoints: RoutedPoint[]\n    router: IEdgeRouter\n    source?: SConnectableElementImpl\n    target?: SConnectableElementImpl\n}\n\nexport interface EdgeMemento {\n    edge: SRoutableElementImpl\n    before: EdgeSnapshot\n    after: EdgeSnapshot\n}\n\n/**\n * Encapsulates the logic of how the actual shape of an edge is derived from its routing points,\n * and how the user can modify it.\n */\nexport interface IEdgeRouter {\n\n    readonly kind: string;\n\n    /**\n     * Calculates the route of the given edge.\n     */\n    route(edge: SRoutableElementImpl): RoutedPoint[]\n\n    /**\n     * Calculates a point on the edge\n     *\n     * @param t a value between 0 (sourceAnchor) and 1 (targetAnchor)\n     * @returns the point or undefined if t is out of bounds or it cannot be computed\n     */\n    pointAt(edge: SRoutableElementImpl, t: number): Point | undefined\n\n    /**\n     * Calculates the derivative at a point on the edge.\n     *\n     * @param t a value between 0 (sourceAnchor) and 1 (targetAnchor)\n     * @returns the point or undefined if t is out of bounds or it cannot be computed\n     */\n    derivativeAt(edge: SRoutableElementImpl, t: number): Point | undefined\n\n    /**\n     * Retuns the position of the given handle based on the routing points of the edge.\n     */\n    getHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl): Point | undefined\n\n    /**\n     * Creates the routing handles for the given target.\n     */\n    createRoutingHandles(edge: SRoutableElementImpl): void\n\n    /**\n     * Updates the routing points and handles of the given edge with regard to the given moves.\n     */\n    applyHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void\n\n    /**\n     * Updates the routing points and handles of the given edge with regard to the given moves.\n     */\n    applyReconnect(edge: SRoutableElementImpl, newSourceId?: string, newTargetId?: string): void\n\n    /**\n     * Remove/add points in order to keep routing constraints consistent, or reset RPs on reconnect.\n     */\n    cleanupRoutingPoints(edge: SRoutableElementImpl, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean): void;\n    /**\n     * Creates a snapshot of the given edge, storing all the data needed to restore it to\n     * its current state.\n     */\n    takeSnapshot(edge: SRoutableElementImpl): EdgeSnapshot;\n\n    /**\n     * Applies a snapshot to the current edge.\n     */\n    applySnapshot(edge: SRoutableElementImpl, edgeSnapshot: EdgeSnapshot): void;\n}\n\nexport interface IMultipleEdgesRouter extends IEdgeRouter {\n    routeAll(\n        edges: SRoutableElementImpl[],\n        parent: Readonly<SParentElementImpl>\n    ): EdgeRouting;\n}\n\nfunction isMultipleEdgesRouter(\n    router: IEdgeRouter | IMultipleEdgesRouter\n): router is IMultipleEdgesRouter {\n    return (router as IMultipleEdgesRouter).routeAll !== undefined;\n}\n\n/** A postprocessor that is applied to all routes, once they are computed. */\nexport interface IEdgeRoutePostprocessor {\n    apply(routing: EdgeRouting): void;\n}\n\n@injectable()\nexport class EdgeRouterRegistry extends InstanceRegistry<IEdgeRouter> {\n\n    @multiInject(TYPES.IEdgeRoutePostprocessor) @optional()\n    protected postProcessors: IEdgeRoutePostprocessor[];\n\n    constructor(@multiInject(TYPES.IEdgeRouter) edgeRouters: IEdgeRouter[]) {\n        super();\n        edgeRouters.forEach(router => this.register(router.kind, router));\n    }\n\n    protected get defaultKind() {\n        return PolylineEdgeRouter.KIND;\n    }\n\n    override get(kind: string | undefined): IEdgeRouter {\n        return super.get(kind || this.defaultKind);\n    }\n\n    /**\n     * Computes the routes of all edges contained by the specified `parent`.\n     * After all routes are available, it'll apply the registered `EdgeRoutePostProcessors`.\n     * @param parent the parent to traverse for edges\n     * @returns the routes of all edges that are children of `parent`\n     */\n    routeAllChildren(parent: Readonly<SParentElementImpl>): EdgeRouting {\n        const routing = this.doRouteAllChildren(parent);\n        for (const postProcessor of this.postProcessors) {\n            postProcessor.apply(routing);\n        }\n        return routing;\n    }\n\n    /**\n     * Recursively traverses the children of `parent`, collects children grouped by router kind,\n     * and then routes them either.\n     * @param parent the parent to traverse for edges\n     * @returns the routes of all edges that are children of `parent`\n     */\n    protected doRouteAllChildren(parent: Readonly<SParentElementImpl>) {\n        const routing = new EdgeRouting();\n        const routersEdges = new Map<string, SRoutableElementImpl[]>();\n\n        const elementsToProcess = [parent];\n        while (elementsToProcess.length > 0) {\n            const element = elementsToProcess.shift() as SParentElementImpl;\n            for (const child of element.children) {\n                if (child instanceof SRoutableElementImpl) {\n                    const routerKind = child.routerKind || this.defaultKind;\n                    if (routersEdges.has(routerKind)) {\n                        (routersEdges.get(routerKind) as SRoutableElementImpl[]).push(child);\n                    } else {\n                        routersEdges.set(routerKind, [child]);\n                    }\n                }\n                if (child instanceof SParentElementImpl) {\n                    elementsToProcess.push(child);\n                }\n            }\n        }\n\n        routersEdges.forEach((edges, routerKind) => {\n            const childRouter = this.get(routerKind);\n            if (isMultipleEdgesRouter(childRouter)) {\n                routing.setAll(childRouter.routeAll(edges, parent));\n            } else {\n                for (const edge of  edges) {\n                    routing.set(edge.id, this.route(edge));\n                }\n            }\n        });\n\n        return routing;\n    }\n\n    /**\n     * Computes or obtains the route of a single edge.\n     * @param edge the edge to be routed\n     * @param args arguments that may contain an `EdgeRouting` already\n     * @returns the route of the specified `edge`\n     */\n    route(edge: Readonly<SRoutableElementImpl>, args?: IViewArgs): RoutedPoint[] {\n        const edgeRouting = findArgValue<EdgeRouting>(args, 'edgeRouting');\n        if (edgeRouting) {\n            const route = edgeRouting.get(edge.id);\n            if (route) {\n                return route;\n            }\n        }\n        const router = this.get(edge.routerKind);\n        return router.route(edge);\n    }\n\n}\n\n/** Any object that contains a routing, such as an argument object passed to views for rendering. */\nexport interface EdgeRoutingContainer {\n    edgeRouting: EdgeRouting;\n}\n\n/**\n * Map of edges and their computed routes.\n */\nexport class EdgeRouting {\n\n    protected routesMap = new Map<string, RoutedPoint[]>();\n\n    set(routableId: string, route: RoutedPoint[]): void {\n        this.routesMap.set(routableId, route);\n    }\n\n    setAll(otherRoutes: EdgeRouting): void {\n        otherRoutes.routes.forEach((route, routableId) => this.set(routableId, route));\n    }\n\n    get(routableId: string): RoutedPoint[] | undefined {\n        return this.routesMap.get(routableId);\n    }\n\n    get routes() {\n        return this.routesMap;\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Bounds, Point, toDegrees } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { setAttr } from \"../../base/views/vnode-utils\";\nimport { SEdgeImpl } from \"../../graph/sgraph\";\nimport { Orientation } from \"../../utils/geometry\";\nimport { isAlignable, BoundsAware } from \"../bounds/model\";\nimport { DEFAULT_EDGE_PLACEMENT, isEdgeLayoutable, EdgeLayoutable, EdgePlacement } from \"./model\";\nimport { EdgeRouterRegistry } from \"../routing/routing\";\n\n@injectable()\nexport class EdgeLayoutPostprocessor implements IVNodePostprocessor {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (isEdgeLayoutable(element) && element.parent instanceof SEdgeImpl) {\n            if (element.bounds !== Bounds.EMPTY) {\n                const placement = this.getEdgePlacement(element);\n                const edge = element.parent;\n                const position = Math.min(1, Math.max(0, placement.position));\n                const router = this.edgeRouterRegistry.get(edge.routerKind);\n                const pointOnEdge = router.pointAt(edge, position);\n                const derivativeOnEdge = router.derivativeAt(edge, position);\n                let transform = '';\n                if (pointOnEdge && derivativeOnEdge) {\n                    transform += `translate(${pointOnEdge.x}, ${pointOnEdge.y})`;\n                    const angle = toDegrees(Math.atan2(derivativeOnEdge.y, derivativeOnEdge.x));\n                    if (placement.rotate) {\n                        let flippedAngle = angle;\n                        if (Math.abs(angle) > 90) {\n                             if (angle < 0)\n                                flippedAngle += 180;\n                            else if (angle > 0)\n                                flippedAngle -= 180;\n                        }\n                        transform += ` rotate(${flippedAngle})`;\n                        const alignment = this.getRotatedAlignment(element, placement, flippedAngle !== angle);\n                        transform += ` translate(${alignment.x}, ${alignment.y})`;\n                    } else {\n                        const alignment = this.getAlignment(element, placement, angle);\n                        transform += ` translate(${alignment.x}, ${alignment.y})`;\n                    }\n                    setAttr(vnode, 'transform', transform);\n                }\n            }\n        }\n        return vnode;\n    }\n\n    protected getRotatedAlignment(element: EdgeLayoutable & SModelElementImpl & BoundsAware, placement: EdgePlacement, flip: boolean) {\n        let x = isAlignable(element) ? element.alignment.x : 0;\n        let y = isAlignable(element) ? element.alignment.y : 0;\n        const bounds = element.bounds;\n        if (placement.side === 'on')\n            return { x: x - 0.5 * bounds.height, y: y - 0.5 * bounds.height};\n        if (flip) {\n            if (placement.position < 0.3333333)\n                x -= bounds.width + placement.offset;\n            else if (placement.position < 0.6666666)\n                x -= 0.5 * bounds.width;\n            else\n                x += placement.offset;\n            switch (placement.side) {\n                case 'left':\n                case 'bottom':\n                    y -= placement.offset + bounds.height;\n                    break;\n                case 'right':\n                case 'top':\n                    y += placement.offset;\n            }\n        } else {\n            if (placement.position < 0.3333333)\n                x += placement.offset;\n            else if (placement.position < 0.6666666)\n                x -= 0.5 * bounds.width;\n            else\n                x -= bounds.width + placement.offset;\n            switch (placement.side) {\n                case 'right':\n                case 'bottom':\n                    y += - placement.offset - bounds.height;\n                    break;\n                case 'left':\n                case 'top':\n                    y += placement.offset;\n            }\n        }\n        return { x, y };\n    }\n\n    protected getEdgePlacement(element: SModelElementImpl): EdgePlacement {\n        let current = element;\n        const allPlacements: EdgePlacement[] = [];\n        while (current !== undefined) {\n            const placement = (current as any).edgePlacement;\n            if (placement !== undefined)\n                allPlacements.push(placement);\n            if (current instanceof SChildElementImpl)\n                current = current.parent;\n            else\n                break;\n        }\n        return allPlacements.reverse().reduce(\n            (a, b) => { return {...a, ...b}; }, DEFAULT_EDGE_PLACEMENT);\n    }\n\n    protected getAlignment(label: EdgeLayoutable & SModelElementImpl & BoundsAware, placement: EdgePlacement, angle: number): Point {\n        const bounds = label.bounds;\n        const x = isAlignable(label) ? label.alignment.x - bounds.width : 0;\n        const y = isAlignable(label) ? label.alignment.y - bounds.height : 0;\n        if (placement.side === 'on') {\n            return { x: x + 0.5 * bounds.width, y: y + 0.5 * bounds.height};\n        }\n        const quadrant = this.getQuadrant(angle);\n        const midLeft = { x: placement.offset, y: y + 0.5 * bounds.height };\n        const topLeft = { x: placement.offset, y: y + bounds.height + placement.offset };\n        const topRight = { x: -bounds.width - placement.offset, y: y + bounds.height + placement.offset};\n        const midRight = { x: -bounds.width - placement.offset, y: y + 0.5 * bounds.height };\n        const bottomRight = { x: -bounds.width - placement.offset, y: y - placement.offset};\n        const bottomLeft = { x: placement.offset, y: y - placement.offset};\n        switch (placement.side) {\n            case 'left':\n                switch (quadrant.orientation) {\n                    case 'west':\n                        return Point.linear(topLeft, topRight, quadrant.position);\n                    case 'north':\n                        return Point.linear(topRight, bottomRight, quadrant.position);\n                    case 'east':\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\n                    case 'south':\n                        return Point.linear(bottomLeft, topLeft, quadrant.position);\n                }\n                break;\n            case 'right':\n                switch (quadrant.orientation) {\n                    case 'west':\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\n                    case 'north':\n                        return Point.linear(bottomLeft, topLeft, quadrant.position);\n                    case 'east':\n                        return Point.linear(topLeft, topRight, quadrant.position);\n                    case 'south':\n                        return Point.linear(topRight, bottomRight, quadrant.position);\n                }\n                break;\n            case 'top':\n                switch (quadrant.orientation) {\n                    case 'west':\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\n                    case 'north':\n                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);\n                    case 'east':\n                        return Point.linear(bottomRight, bottomLeft, quadrant.position);\n                    case 'south':\n                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);\n                }\n                break;\n            case 'bottom':\n                switch (quadrant.orientation) {\n                    case 'west':\n                        return Point.linear(topLeft, topRight, quadrant.position);\n                    case 'north':\n                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);\n                    case 'east':\n                        return Point.linear(topLeft, topRight, quadrant.position);\n                    case 'south':\n                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);\n                }\n                break;\n        }\n        return {x: 0, y: 0};\n    }\n\n    protected getQuadrant(angle: number): {orientation: Orientation, position: number} {\n        if (Math.abs(angle) > 135)\n            return { orientation: 'west', position: (angle > 0 ? angle - 135 : angle + 225) / 90 };\n        else if (angle < -45)\n            return { orientation: 'north', position: (angle + 135) / 90 };\n        else if (angle < 45)\n            return { orientation: 'east', position: (angle + 45) / 90 };\n        else\n            return { orientation: 'south', position: (angle - 45) / 90 };\n    }\n\n    protected linearFlip(p0: Point, p1: Point, p2: Point, p3: Point, position: number) {\n        return position < 0.5 ? Point.linear(p0, p1, 2 * position) : Point.linear(p2, p3, 2 * position - 1);\n    }\n\n    postUpdate(): void {}\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { EdgeLayoutPostprocessor } from \"./edge-layout\";\n\nconst edgeLayoutModule = new ContainerModule(bind => {\n    bind(EdgeLayoutPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(EdgeLayoutPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).toService(EdgeLayoutPostprocessor);\n});\n\nexport default edgeLayoutModule;\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Action, CreateElementAction as ProtocolCreateElementAction } from 'sprotty-protocol/lib/actions';\nimport { SModelElement as SModelElementSchema } from 'sprotty-protocol/lib/model';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { SParentElementImpl, SChildElementImpl } from '../../base/model/smodel';\nimport { TYPES } from '../../base/types';\n\n\n@injectable()\nexport class CreateElementCommand extends Command {\n    static readonly KIND = ProtocolCreateElementAction.KIND;\n\n    container: SParentElementImpl;\n    newElement: SChildElementImpl;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolCreateElementAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const container = context.root.index.getById(this.action.containerId);\n        if (container instanceof SParentElementImpl) {\n            this.container = container;\n            this.newElement = context.modelFactory.createElement(this.action.elementSchema);\n            this.container.add(this.newElement);\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        this.container.remove(this.newElement);\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        this.container.add(this.newElement);\n        return context.root;\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Create an element with the given schema and add it to the diagram.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface CreateElementAction extends Action {\n    kind: typeof CreateElementAction.KIND\n    containerId: string\n    elementSchema: SModelElementSchema\n}\nexport namespace CreateElementAction {\n    export const KIND = 'createElement';\n\n    export function create(elementSchema: SModelElementSchema, options: { containerId: string }): CreateElementAction {\n        return {\n            kind: KIND,\n            elementSchema,\n            containerId: options.containerId\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { SModelElementImpl } from \"../../base/model/smodel\";\nimport { SModelExtension } from \"../../base/model/smodel-extension\";\n\nexport const creatingOnDragFeature = Symbol('creatingOnDragFeature');\n\nexport interface CreatingOnDrag extends SModelExtension {\n    createAction(id: string): Action;\n}\n\nexport function isCreatingOnDrag<T extends SModelElementImpl>(element: T): element is T & CreatingOnDrag {\n    return element.hasFeature(creatingOnDragFeature) && (element as any).createAction !== undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { svg }\u00A0from './jsx';\n\nimport { VNode } from \"snabbdom\";\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { IView, IViewArgs, RenderingContext } from \"../base/views/view\";\nimport { SNodeImpl, SPortImpl } from \"../graph/sgraph\";\nimport { ViewportRootElement } from \"../features/viewport/viewport-root\";\nimport { SShapeElementImpl } from '../features/bounds/model';\nimport { ShapeView } from '../features/bounds/views';\nimport { Hoverable } from '../features/hover/model';\nimport { Selectable } from '../features/select/model';\nimport { Diamond } from '../utils/geometry';\nimport { SModelElementImpl } from '../base/model/smodel';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class SvgViewportView implements IView {\n    render(model: Readonly<ViewportRootElement>, context: RenderingContext, args?: IViewArgs): VNode {\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\n        return <svg>\n            <g transform={transform}>\n                {context.renderChildren(model)}\n            </g>\n        </svg>;\n    }\n}\n\n@injectable()\nexport class CircularNodeView extends ShapeView {\n    render(node: Readonly<SShapeElementImpl & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        if (!this.isVisible(node, context)) {\n            return undefined;\n        }\n        const radius = this.getRadius(node);\n        return <g>\n            <circle class-sprotty-node={node instanceof SNodeImpl} class-sprotty-port={node instanceof SPortImpl}\n                    class-mouseover={node.hoverFeedback} class-selected={node.selected}\n                    r={radius} cx={radius} cy={radius}></circle>\n            {context.renderChildren(node)}\n        </g>;\n    }\n\n    protected getRadius(node: SShapeElementImpl): number {\n        const d = Math.min(node.size.width, node.size.height);\n        return d > 0 ? d / 2 : 0;\n    }\n}\n\n@injectable()\nexport class RectangularNodeView extends ShapeView {\n    render(node: Readonly<SShapeElementImpl & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        if (!this.isVisible(node, context)) {\n            return undefined;\n        }\n        return <g>\n            <rect class-sprotty-node={node instanceof SNodeImpl} class-sprotty-port={node instanceof SPortImpl}\n                  class-mouseover={node.hoverFeedback} class-selected={node.selected}\n                  x=\"0\" y=\"0\" width={Math.max(node.size.width, 0)} height={Math.max(node.size.height, 0)}></rect>\n            {context.renderChildren(node)}\n        </g>;\n    }\n}\n\n@injectable()\nexport class DiamondNodeView extends ShapeView {\n    render(node: Readonly<SShapeElementImpl & Hoverable & Selectable>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        if (!this.isVisible(node, context)) {\n            return undefined;\n        }\n        const diamond = new Diamond({ height: Math.max(node.size.height, 0), width: Math.max(node.size.width, 0), x: 0, y: 0 });\n        const points = `${svgStr(diamond.topPoint)} ${svgStr(diamond.rightPoint)} ${svgStr(diamond.bottomPoint)} ${svgStr(diamond.leftPoint)}`;\n        return <g>\n            <polygon class-sprotty-node={node instanceof SNodeImpl} class-sprotty-port={node instanceof SPortImpl}\n                  class-mouseover={node.hoverFeedback} class-selected={node.selected}\n                  points={points} />\n            {context.renderChildren(node)}\n        </g>;\n    }\n}\n\nfunction svgStr(point: Point) {\n    return `${point.x},${point.y}`;\n}\n\n@injectable()\nexport class EmptyGroupView implements IView {\n    render(model: Readonly<SModelElementImpl>, context: RenderingContext): VNode {\n        return <g></g>;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject } from 'inversify';\nimport { Action, isAction, ApplyLabelEditAction as ProtocolApplyLabelEditAction } from 'sprotty-protocol/lib/actions';\nimport { CommandExecutionContext, CommandReturn, Command } from '../../base/commands/command';\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { TYPES } from '../../base/types';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { isSelectable } from '../select/model';\nimport { toArray } from '../../utils/iterable';\nimport { EditableLabel, isEditableLabel, isWithEditableLabel } from './model';\n\nexport interface EditLabelAction extends Action {\n    kind: typeof EditLabelAction.KIND\n    labelId: string\n}\nexport namespace EditLabelAction {\n    export const KIND = 'EditLabel';\n\n    export function create(labelId: string): EditLabelAction {\n        return {\n            kind: KIND,\n            labelId\n        };\n    }\n}\n\nexport function isEditLabelAction(element?: any): element is EditLabelAction {\n    return isAction(element) && element.kind === EditLabelAction.KIND && 'labelId' in element;\n}\n\nexport function isApplyLabelEditAction(element?: any): element is ProtocolApplyLabelEditAction {\n    return isAction(element) && element.kind === ProtocolApplyLabelEditAction.KIND && 'labelId' in element && 'text' in element;\n}\n\nexport class ResolvedLabelEdit {\n    label: EditableLabel;\n    oldLabel: string;\n    newLabel: string;\n}\n\nexport class ApplyLabelEditCommand extends Command {\n    static readonly KIND = ProtocolApplyLabelEditAction.KIND;\n\n    protected resolvedLabelEdit: ResolvedLabelEdit;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolApplyLabelEditAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        const label = index.getById(this.action.labelId);\n        if (label && isEditableLabel(label)) {\n            this.resolvedLabelEdit = { label, oldLabel: label.text, newLabel: this.action.text };\n            label.text = this.action.text;\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        if (this.resolvedLabelEdit) {\n            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.oldLabel;\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        if (this.resolvedLabelEdit) {\n            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.newLabel;\n        }\n        return context.root;\n    }\n\n}\n\nexport interface IEditLabelValidator {\n    validate(value: string, label: EditableLabel & SModelElementImpl): Promise<EditLabelValidationResult>;\n}\n\nexport interface EditLabelValidationResult {\n    readonly severity: Severity;\n    readonly message?: string;\n}\n\nexport type Severity = 'ok' | 'warning' | 'error';\n\nexport class EditLabelMouseListener extends MouseListener {\n    override doubleClick(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        const editableLabel = getEditableLabel(target);\n        if (editableLabel) {\n            return [EditLabelAction.create(editableLabel.id)];\n        }\n        return [];\n    }\n}\n\nexport class EditLabelKeyListener extends KeyListener {\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'F2')) {\n            const editableLabels = toArray(element.index.all()\n                .filter(e => isSelectable(e) && e.selected)).map(getEditableLabel)\n                .filter((e): e is EditableLabel & SModelElementImpl => e !== undefined);\n            if (editableLabels.length === 1) {\n                return [EditLabelAction.create(editableLabels[0].id)];\n            }\n        }\n        return [];\n    }\n}\n\nexport function getEditableLabel(element: SModelElementImpl): EditableLabel & SModelElementImpl | undefined {\n    if (isEditableLabel(element)) {\n        return element;\n    } else if (isWithEditableLabel(element) && element.editableLabel) {\n        return element.editableLabel;\n    }\n    return undefined;\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ApplyLabelEditAction extends Action {\n    kind: typeof ApplyLabelEditAction.KIND;\n    labelId: string,\n    text: string\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport namespace ApplyLabelEditAction {\n    export const KIND = 'applyLabelEdit';\n\n    export function create(labelId: string, text: string): ApplyLabelEditAction {\n        return {\n            kind: KIND,\n            labelId,\n            text\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { RequestAction, ResponseAction } from 'sprotty-protocol/lib/actions';\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\nimport { ViewerOptions } from '../../base/views/viewer-options';\nimport { isBoundsAware } from '../bounds/model';\nimport { ActionDispatcher } from '../../base/actions/action-dispatcher';\nimport { TYPES } from '../../base/types';\nimport { SModelRootImpl } from '../../base/model/smodel';\nimport { ILogger } from '../../utils/logging';\n\nexport interface ExportSvgAction extends ResponseAction {\n    kind: typeof ExportSvgAction.KIND;\n    svg: string\n    responseId: string\n}\nexport namespace ExportSvgAction {\n    export const KIND = 'exportSvg';\n\n    export function create(svg: string, requestId: string): ExportSvgAction {\n        return {\n            kind: KIND,\n            svg,\n            responseId: requestId\n        };\n    }\n}\n\n@injectable()\nexport class SvgExporter {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: ActionDispatcher;\n    @inject(TYPES.ILogger) protected log: ILogger;\n\n    export(root: SModelRootImpl, request?: RequestAction<ExportSvgAction>): void {\n        if (typeof document !== 'undefined') {\n            const div = document.getElementById(this.options.hiddenDiv);\n            if (div !== null && div.firstElementChild && div.firstElementChild.tagName === 'svg') {\n                const svgElement = div.firstElementChild as SVGSVGElement;\n                const svg = this.createSvg(svgElement, root);\n                this.actionDispatcher.dispatch(ExportSvgAction.create(svg, request ? request.requestId : ''));\n            }\n        }\n    }\n\n    protected createSvg(svgElementOrig: SVGSVGElement, root: SModelRootImpl): string {\n        const serializer = new XMLSerializer();\n        const svgCopy = serializer.serializeToString(svgElementOrig);\n        const iframe: HTMLIFrameElement = document.createElement('iframe');\n        document.body.appendChild(iframe);\n        if (!iframe.contentWindow)\n            throw new Error('IFrame has no contentWindow');\n        const docCopy = iframe.contentWindow.document;\n        docCopy.open();\n        docCopy.write(svgCopy);\n        docCopy.close();\n        const svgElementNew = docCopy.getElementById(svgElementOrig.id)!;\n        svgElementNew.removeAttribute('opacity');\n        this.copyStyles(svgElementOrig, svgElementNew, ['width', 'height', 'opacity']);\n        svgElementNew.setAttribute('version', '1.1');\n        const bounds = this.getBounds(root);\n        svgElementNew.setAttribute('viewBox', `${bounds.x} ${bounds.y} ${bounds.width} ${bounds.height}`);\n        const svgCode = serializer.serializeToString(svgElementNew);\n        document.body.removeChild(iframe);\n        return svgCode;\n    }\n\n    protected copyStyles(source: Element, target: Element, skipedProperties: string[]) {\n        const sourceStyle = getComputedStyle(source);\n        const targetStyle = getComputedStyle(target);\n        let diffStyle = '';\n        for (let i = 0; i < sourceStyle.length; i++) {\n            const key = sourceStyle[i];\n            if (skipedProperties.indexOf(key) === -1) {\n                const value = sourceStyle.getPropertyValue(key);\n                if (targetStyle.getPropertyValue(key) !== value) {\n                    diffStyle += key + \":\" + value + \";\";\n                }\n            }\n        }\n        if (diffStyle !== '')\n            target.setAttribute('style', diffStyle);\n        // IE doesn't retrun anything on source.children\n        for (let i = 0; i < source.childNodes.length; ++i) {\n            const sourceChild = source.childNodes[i];\n            const targetChild = target.childNodes[i];\n            if (sourceChild instanceof Element)\n                this.copyStyles(sourceChild, targetChild as Element, []);\n        }\n    }\n\n    protected getBounds(root: SModelRootImpl) {\n        const allBounds: Bounds[] = [ Bounds.EMPTY ];\n        root.children.forEach(element => {\n            if (isBoundsAware(element)) {\n                allBounds.push(element.bounds);\n            }\n        });\n        return allBounds.reduce((one, two) => Bounds.combine(one, two));\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Action, ComputedBoundsAction, RequestModelAction } from \"sprotty-protocol/lib/actions\";\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { Dimension, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelIndex } from \"sprotty-protocol/lib/utils/model-utils\";\nimport { IActionDispatcher } from \"../base/actions/action-dispatcher\";\nimport { ActionHandlerRegistry, IActionHandler, IActionHandlerInitializer } from \"../base/actions/action-handler\";\nimport { ICommand } from \"../base/commands/command\";\nimport { TYPES } from \"../base/types\";\nimport { ViewerOptions } from \"../base/views/viewer-options\";\nimport { ExportSvgAction } from '../features/export/svg-exporter';\n\n/**\n * A model source is serving the model to the event cycle. It represents\n * the entry point to the client for external sources, such as model\n * editors.\n *\n * As an `IActionHandler` it listens to actions in and reacts to them with\n * commands or actions if necessary. This way, you can implement action\n * protocols between the client and the outside world.\n *\n * There are two default implementations for a ModelSource:\n *\n *  - The `LocalModelSource` handles the actions to calculate bounds and\n *    set/update the model\n *  - the `DiagramServerProxy` connects via websocket to a remote source.\n *    It can be used to connect to a model editor that provides the model,\n *    layouts diagrams, transfers selection and answers model queries from\n *    the client.\n */\n@injectable()\nexport abstract class ModelSource implements IActionHandler, IActionHandlerInitializer {\n\n    @inject(TYPES.IActionDispatcher) readonly actionDispatcher: IActionDispatcher;\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n\n    initialize(registry: ActionHandlerRegistry): void {\n        // Register this model source\n        registry.register(RequestModelAction.KIND, this);\n        registry.register(ExportSvgAction.KIND, this);\n    }\n\n    abstract get model(): SModelRootSchema;\n\n    abstract handle(action: Action): ICommand | Action | void;\n\n    /**\n     * Commit changes from the internal SModel back to the currentModel.\n     *\n     * This method is meant to be called only by CommitModelCommand and other commands\n     * that need to feed the current internal model back to the model source. It does\n     * not have any side effects such as triggering layout or bounds computation, as the\n     * internal model is already current. See `CommitModelAction` for details.\n     *\n     * @param newRoot the new model.\n     * @return the previous model.\n     */\n    abstract commitModel(newRoot: SModelRootSchema): Promise<SModelRootSchema> | SModelRootSchema;\n}\n\n\n@injectable()\nexport class ComputedBoundsApplicator {\n    apply(root: SModelRootSchema, action: ComputedBoundsAction): SModelIndex {\n        const index = new SModelIndex();\n        index.add(root);\n        for (const b of action.bounds) {\n            const element = index.getById(b.elementId);\n            if (element !== undefined)\n                this.applyBounds(element, b.newPosition, b.newSize);\n        }\n        if (action.alignments !== undefined) {\n            for (const a of action.alignments) {\n                const element = index.getById(a.elementId);\n                if (element !== undefined)\n                    this.applyAlignment(element, a.newAlignment);\n            }\n        }\n        return index;\n    }\n\n    protected applyAlignment(element: SModelElementSchema, newAlignment: Point) {\n        const e = element as any;\n        e.alignment = { x: newAlignment.x, y: newAlignment.y };\n    }\n\n    protected applyBounds(element: SModelElementSchema, newPosition: Point | undefined, newSize: Dimension) {\n        const e = element as any;\n        if (newPosition)\n            e.position = {...newPosition};\n        e.size = {...newSize};\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { CommandExecutionContext, CommandReturn, SystemCommand } from \"../base/commands/command\";\nimport { SModelRootImpl } from \"../base/model/smodel\";\nimport { TYPES } from \"../base/types\";\nimport { ModelSource } from \"./model-source\";\n\n/**\n * Commit the current SModel back to the model source.\n *\n * The SModel (AKA internal model) contains a lot of dirty/transitional state, such\n * as intermediate move postions or handles. When a user interaction that spans multiple\n * commands finishes, it fires a CommitModelAction to write the final changes back to\n * the model source.\n */\nexport interface CommitModelAction extends Action {\n    kind: typeof CommitModelAction.KIND;\n}\nexport namespace CommitModelAction {\n    export const KIND = 'commitModel';\n\n    export function create(): CommitModelAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n@injectable()\nexport class CommitModelCommand extends SystemCommand {\n    static readonly KIND = CommitModelAction.KIND;\n\n    @inject(TYPES.ModelSource) modelSource: ModelSource;\n\n    originalModel: SModelRootSchema;\n    newModel: SModelRootSchema;\n\n    constructor(@inject(TYPES.Action) protected readonly action: CommitModelAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.newModel = context.modelFactory.createSchema(context.root);\n        return this.doCommit(this.newModel, context.root, true);\n    }\n\n    protected doCommit(model: SModelRootSchema, result: SModelRootImpl, doSetOriginal: boolean): CommandReturn {\n        const commitResult = this.modelSource.commitModel(model);\n        if (commitResult instanceof Promise) {\n            return commitResult.then(originalModel => {\n                if (doSetOriginal)\n                    this.originalModel = originalModel;\n                return result;\n            });\n        } else {\n            if (doSetOriginal)\n                this.originalModel = commitResult;\n            return result;\n        }\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return this.doCommit(this.originalModel, context.root, false);\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.doCommit(this.newModel, context.root, false);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2023 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject } from 'inversify';\nimport { Action, SetViewportAction } from 'sprotty-protocol/lib/actions';\nimport { Viewport } from 'sprotty-protocol/lib/model';\nimport { almostEquals, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { TYPES } from '../../base/types';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { ViewerOptions } from '../../base/views/viewer-options';\nimport { getWindowScroll } from '../../utils/browser';\nimport { isViewport } from './model';\n\nexport function getZoom(label: SModelElementImpl) {\n    let zoom = 1;\n    const viewport = findParentByFeature(label, isViewport);\n    if (viewport) {\n        zoom = viewport.zoom;\n    }\n    return zoom;\n}\n\nexport class ZoomMouseListener extends MouseListener {\n\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n\n    override wheel(target: SModelElementImpl, event: WheelEvent): Action[] {\n        const viewport = findParentByFeature(target, isViewport);\n        if (!viewport) {\n            return [];\n        }\n        const newViewport = this.isScrollMode(event) ? this.processScroll(viewport, event) : this.processZoom(viewport, target, event);\n        if (newViewport) {\n            return [SetViewportAction.create(viewport.id, newViewport, { animate: false })];\n        }\n        return [];\n    }\n\n    protected isScrollMode(event: WheelEvent) {\n        return event.altKey;\n    }\n\n    protected processScroll(viewport: Viewport, event: WheelEvent): Viewport {\n        return {\n            scroll: {\n                x: viewport.scroll.x + event.deltaX,\n                y: viewport.scroll.y + event.deltaY\n            },\n            zoom: viewport.zoom\n        };\n    }\n\n    protected processZoom(viewport: Viewport, target: SModelElementImpl, event: WheelEvent): Viewport | undefined {\n        const zoomFactor = this.getZoomFactor(event);\n        if (zoomFactor > 1 && almostEquals(viewport.zoom, this.viewerOptions.zoomLimits.max)\n            || zoomFactor < 1 && almostEquals(viewport.zoom, this.viewerOptions.zoomLimits.min)) {\n            return;\n        }\n        const zoom = viewport.zoom * zoomFactor;\n        const viewportOffset = this.getViewportOffset(target.root, event);\n        const offsetFactor = 1.0 / zoom - 1.0 / viewport.zoom;\n        return {\n            scroll: {\n                x: viewport.scroll.x - offsetFactor * viewportOffset.x,\n                y: viewport.scroll.y - offsetFactor * viewportOffset.y\n            },\n            zoom\n        };\n    }\n\n    protected getViewportOffset(root: SModelRootImpl, event: WheelEvent): Point {\n        const canvasBounds = root.canvasBounds;\n        const windowScroll = getWindowScroll();\n        return {\n            x: event.clientX + windowScroll.x - canvasBounds.x,\n            y: event.clientY + windowScroll.y - canvasBounds.y\n        };\n    }\n\n    protected getZoomFactor(event: WheelEvent): number {\n        if (event.deltaMode === event.DOM_DELTA_PAGE)\n            return Math.exp(-event.deltaY * 0.5);\n        else if (event.deltaMode === event.DOM_DELTA_LINE)\n            return Math.exp(-event.deltaY * 0.05);\n        else // deltaMode === DOM_DELTA_PIXEL\n            return Math.exp(-event.deltaY * 0.005);\n    }\n\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Zoomable extends SModelExtension {\n    zoom: number\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isZoomable(element: SModelElementImpl | Zoomable): element is Zoomable {\n    return 'zoom' in element;\n}\n", "/********************************************************************************\n * Copyright (c) 2019-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, optional } from 'inversify';\nimport { Action, ApplyLabelEditAction } from 'sprotty-protocol/lib/actions';\nimport { IActionDispatcherProvider } from '../../base/actions/action-dispatcher';\nimport { IActionHandler } from '../../base/actions/action-handler';\nimport { ICommand } from '../../base/commands/command';\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { TYPES } from '../../base/types';\nimport { AbstractUIExtension } from '../../base/ui-extensions/ui-extension';\nimport { SetUIExtensionVisibilityAction } from '../../base/ui-extensions/ui-extension-registry';\nimport { DOMHelper } from '../../base/views/dom-helper';\nimport { ViewerOptions } from '../../base/views/viewer-options';\nimport { CommitModelAction } from '../../model-source/commit-model';\nimport { matchesKeystroke, KeyCode, KeyboardModifier } from '../../utils/keyboard';\nimport { getAbsoluteClientBounds } from '../bounds/model';\nimport { getZoom } from '../viewport/zoom';\nimport { EditLabelValidationResult, IEditLabelValidator, isEditLabelAction, Severity } from './edit-label';\nimport { EditableLabel, isEditableLabel } from './model';\n\n/** Shows a UI extension for editing a label on emitted `EditLabelAction`s. */\n@injectable()\nexport class EditLabelActionHandler implements IActionHandler {\n    handle(action: Action): void | Action | ICommand {\n        if (isEditLabelAction(action)) {\n            return SetUIExtensionVisibilityAction.create({ extensionId: EditLabelUI.ID, visible: true, contextElementsId: [action.labelId] });\n        }\n    }\n}\n\nexport interface IEditLabelValidationDecorator {\n    decorate(input: HTMLInputElement | HTMLTextAreaElement, validationResult: EditLabelValidationResult): void;\n    dispose(input: HTMLInputElement | HTMLTextAreaElement): void;\n}\n\n@injectable()\nexport class EditLabelUI extends AbstractUIExtension {\n    static readonly ID = 'editLabelUi';\n\n    @inject(TYPES.IActionDispatcherProvider) public actionDispatcherProvider: IActionDispatcherProvider;\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n    @inject(TYPES.DOMHelper) protected domHelper: DOMHelper;\n    @inject(TYPES.IEditLabelValidator) @optional() public labelValidator: IEditLabelValidator;\n    @inject(TYPES.IEditLabelValidationDecorator) @optional() public validationDecorator: IEditLabelValidationDecorator;\n\n    protected inputElement: HTMLInputElement;\n    protected textAreaElement: HTMLTextAreaElement;\n\n    protected label?: EditableLabel & SModelElementImpl;\n    protected labelElement: HTMLElement | null;\n    protected validationTimeout?: number = undefined;\n    protected isActive: boolean = false;\n    protected blockApplyEditOnInvalidInput = true;\n    protected isCurrentLabelValid: boolean = true;\n    protected previousLabelContent?: string;\n\n    public id() { return EditLabelUI.ID; }\n    public containerClass() { return 'label-edit'; }\n\n    protected get labelId() { return this.label ? this.label.id : 'unknown'; }\n\n    protected initializeContents(containerElement: HTMLElement) {\n        containerElement.style.position = 'absolute';\n        this.inputElement = document.createElement('input');\n        this.textAreaElement = document.createElement('textarea');\n        [this.inputElement, this.textAreaElement].forEach((element) => {\n            element.onkeydown = event => this.applyLabelEditOnEvent(event, 'Enter');\n            this.configureAndAdd(element, containerElement);\n        });\n    }\n\n    protected configureAndAdd(element: HTMLInputElement | HTMLTextAreaElement, containerElement: HTMLElement) {\n        element.style.visibility = 'hidden';\n        element.style.position = 'absolute';\n        element.style.top = '0px';\n        element.style.left = '0px';\n        element.addEventListener('keydown', (event: KeyboardEvent) => this.hideIfEscapeEvent(event));\n        element.addEventListener('keyup', (event: KeyboardEvent) => this.validateLabelIfContentChange(event, element.value));\n        element.addEventListener('blur', () => window.setTimeout(() => this.applyLabelEdit(), 200));\n        containerElement.appendChild(element);\n    }\n\n    get editControl(): HTMLInputElement | HTMLTextAreaElement {\n        if (this.label && this.label.isMultiLine) {\n            return this.textAreaElement;\n        }\n        return this.inputElement;\n    }\n\n    protected hideIfEscapeEvent(event: KeyboardEvent) {\n        if (matchesKeystroke(event, 'Escape')) { this.hide(); }\n    }\n\n    protected applyLabelEditOnEvent(event: KeyboardEvent, code?: KeyCode, ...modifiers: KeyboardModifier[]) {\n        if (matchesKeystroke(event, code ? code : 'Enter', ...modifiers)) {\n            event.preventDefault();\n            this.applyLabelEdit();\n        }\n    }\n\n    protected validateLabelIfContentChange(event: KeyboardEvent, value: string) {\n        if (this.previousLabelContent === undefined || this.previousLabelContent !== value) {\n            this.previousLabelContent = value;\n            this.performLabelValidation(event, this.editControl.value);\n        }\n    }\n\n    protected async applyLabelEdit() {\n        if (!this.isActive) {\n            return;\n        }\n        if (this.label?.text === this.editControl.value) {\n            // no action necessary\n            this.hide();\n            return;\n        }\n        if (this.blockApplyEditOnInvalidInput) {\n            const result = await this.validateLabel(this.editControl.value);\n            if ('error' === result.severity) {\n                this.editControl.focus();\n                return;\n            }\n        }\n        this.actionDispatcherProvider()\n            .then((actionDispatcher) => actionDispatcher.dispatchAll([ApplyLabelEditAction.create(this.labelId, this.editControl.value), CommitModelAction.create()]))\n            .catch((reason) => this.logger.error(this, 'No action dispatcher available to execute apply label edit action', reason));\n        this.hide();\n    }\n\n    protected performLabelValidation(event: KeyboardEvent, value: string) {\n        if (this.validationTimeout) {\n            window.clearTimeout(this.validationTimeout);\n        }\n        this.validationTimeout = window.setTimeout(() => this.validateLabel(value), 200);\n    }\n\n    protected async validateLabel(value: string): Promise<EditLabelValidationResult> {\n        if (this.labelValidator && this.label) {\n            try {\n                const result = await this.labelValidator.validate(value, this.label);\n                this.isCurrentLabelValid = 'error' !== result.severity;\n                this.showValidationResult(result);\n                return result;\n            } catch (reason) {\n                this.logger.error(this, 'Error validating edited label', reason);\n            }\n        }\n        this.isCurrentLabelValid = true;\n        return { severity: <Severity>'ok', message: undefined };\n    }\n\n    protected showValidationResult(result: EditLabelValidationResult) {\n        this.clearValidationResult();\n        if (this.validationDecorator) {\n            this.validationDecorator.decorate(this.editControl, result);\n        }\n    }\n\n    protected clearValidationResult() {\n        if (this.validationDecorator) {\n            this.validationDecorator.dispose(this.editControl);\n        }\n    }\n\n    override show(root: Readonly<SModelRootImpl>, ...contextElementIds: string[]) {\n        if (!hasEditableLabel(contextElementIds, root) || this.isActive) {\n            return;\n        }\n        super.show(root, ...contextElementIds);\n        this.isActive = true;\n    }\n\n    override hide(): void {\n        this.editControl.style.visibility = 'hidden';\n        super.hide();\n        this.clearValidationResult();\n        this.isActive = false;\n        this.isCurrentLabelValid = true;\n        this.previousLabelContent = undefined;\n        if (this.labelElement) {\n            this.labelElement.style.visibility = 'visible';\n        }\n    }\n\n    protected override onBeforeShow(containerElement: HTMLElement, root: Readonly<SModelRootImpl>, ...contextElementIds: string[]) {\n        this.label = getEditableLabels(contextElementIds, root)[0];\n        this.previousLabelContent = this.label.text;\n        this.setPosition(containerElement);\n        this.applyTextContents();\n        this.applyFontStyling();\n        this.editControl.style.visibility = 'visible';\n        this.editControl.focus();\n    }\n\n    protected setPosition(containerElement: HTMLElement) {\n        let x = 0;\n        let y = 0;\n        let width = 100;\n        let height = 20;\n\n        if (this.label) {\n            const zoom = getZoom(this.label);\n            const bounds = getAbsoluteClientBounds(this.label, this.domHelper, this.viewerOptions);\n            x = bounds.x + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.x : 0) * zoom;\n            y = bounds.y + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.y : 0) * zoom;\n            height = (this.label.editControlDimension ? this.label.editControlDimension.height : height) * zoom;\n            width = (this.label.editControlDimension ? this.label.editControlDimension.width : width) * zoom;\n        }\n\n        containerElement.style.left = `${x}px`;\n        containerElement.style.top = `${y}px`;\n        containerElement.style.width = `${width}px`;\n        this.editControl.style.width = `${width}px`;\n        containerElement.style.height = `${height}px`;\n        this.editControl.style.height = `${height}px`;\n    }\n\n    protected applyTextContents() {\n        if (this.label) {\n            this.editControl.value = this.label.text;\n            if (this.editControl instanceof HTMLTextAreaElement) {\n                this.editControl.selectionStart = 0;\n                this.editControl.selectionEnd = 0;\n                this.editControl.scrollTop = 0;\n                this.editControl.scrollLeft = 0;\n            } else {\n                this.editControl.setSelectionRange(0, this.editControl.value.length);\n            }\n        }\n    }\n\n    protected applyFontStyling() {\n        if (this.label) {\n            this.labelElement = document.getElementById(this.domHelper.createUniqueDOMElementId(this.label));\n            if (this.labelElement) {\n                this.labelElement.style.visibility = 'hidden';\n                const style = window.getComputedStyle(this.labelElement);\n                this.editControl.style.font = style.font;\n                this.editControl.style.fontStyle = style.fontStyle;\n                this.editControl.style.fontFamily = style.fontFamily;\n                this.editControl.style.fontSize = scaledFont(style.fontSize, getZoom(this.label));\n                this.editControl.style.fontWeight = style.fontWeight;\n                this.editControl.style.lineHeight = style.lineHeight;\n            }\n        }\n    }\n}\n\nfunction hasEditableLabel(contextElementIds: string[], root: Readonly<SModelRootImpl>) {\n    return getEditableLabels(contextElementIds, root).length === 1;\n}\n\nfunction getEditableLabels(contextElementIds: string[], root: Readonly<SModelRootImpl>) {\n    return contextElementIds.map(id => root.index.getById(id)).filter(isEditableLabel);\n}\n\nfunction scaledFont(font: string, zoom: number): string {\n    return font.replace(/\\d+(\\.\\d+)?/, (match) => {\n        return String(Number.parseInt(match, 10) * zoom);\n    });\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { Action } from \"sprotty-protocol/lib/actions\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { Command, CommandExecutionContext, CommandReturn } from \"../../base/commands/command\";\nimport { SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../../base/model/smodel';\nimport { TYPES } from \"../../base/types\";\nimport { SRoutableElementImpl, SRoutingHandleImpl } from \"../routing/model\";\nimport { EdgeRouterRegistry } from \"../routing/routing\";\nimport { canEditRouting } from './model';\n\nexport interface SwitchEditModeAction extends Action {\n    kind: typeof SwitchEditModeAction.KIND;\n    elementsToActivate: string[]\n    elementsToDeactivate: string[]\n}\nexport namespace SwitchEditModeAction {\n    export const KIND = \"switchEditMode\";\n\n    export function create(options: { elementsToActivate?: string[], elementsToDeactivate?: string[] }): SwitchEditModeAction {\n        return {\n            kind: KIND,\n            elementsToActivate: options.elementsToActivate ?? [],\n            elementsToDeactivate: options.elementsToDeactivate ?? []\n        };\n    }\n}\n\n@injectable()\nexport class SwitchEditModeCommand extends Command {\n    static readonly KIND: string = SwitchEditModeAction.KIND;\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    protected elementsToActivate: SModelElementImpl[] = [];\n    protected elementsToDeactivate: SModelElementImpl[] = [];\n    protected handlesToRemove: { handle: SRoutingHandleImpl, parent: SRoutableElementImpl, point?: Point }[] = [];\n\n    constructor(@inject(TYPES.Action) protected readonly action: SwitchEditModeAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        this.action.elementsToActivate.forEach(id => {\n            const element = index.getById(id);\n            if (element !== undefined )\n                this.elementsToActivate.push(element);\n        });\n        this.action.elementsToDeactivate.forEach(id => {\n            const element = index.getById(id);\n            if (element !== undefined)\n                this.elementsToDeactivate.push(element);\n            if (element instanceof SRoutingHandleImpl && element.parent instanceof SRoutableElementImpl) {\n                const parent = element.parent;\n                if (this.shouldRemoveHandle(element, parent)) {\n                    this.handlesToRemove.push({ handle: element, parent });\n                    this.elementsToDeactivate.push(parent);\n                    this.elementsToActivate.push(parent);\n                }\n            }\n        });\n        return this.doExecute(context);\n    }\n\n    protected doExecute(context: CommandExecutionContext): SModelRootImpl {\n        this.handlesToRemove.forEach(entry => {\n            entry.point = entry.parent.routingPoints.splice(entry.handle.pointIndex, 1)[0];\n        });\n        this.elementsToDeactivate.forEach(element => {\n            if (element instanceof SRoutableElementImpl)\n                element.removeAll(child => child instanceof SRoutingHandleImpl);\n            else if (element instanceof SRoutingHandleImpl) {\n                element.editMode = false;\n                if (element.danglingAnchor) {\n                    if (element.parent instanceof SRoutableElementImpl && element.danglingAnchor.original)  {\n                        if (element.parent.source === element.danglingAnchor)\n                            element.parent.sourceId = element.danglingAnchor.original.id;\n                        else if (element.parent.target === element.danglingAnchor)\n                            element.parent.targetId = element.danglingAnchor.original.id;\n                        element.danglingAnchor.parent.remove(element.danglingAnchor);\n                        element.danglingAnchor = undefined;\n                    }\n                }\n            }\n        });\n        this.elementsToActivate.forEach(element => {\n            if (canEditRouting(element) && element instanceof SParentElementImpl) {\n                const router = this.edgeRouterRegistry.get(element.routerKind);\n                router.createRoutingHandles(element);\n            } else if (element instanceof SRoutingHandleImpl)\n                element.editMode = true;\n        });\n        return context.root;\n    }\n\n    protected shouldRemoveHandle(handle: SRoutingHandleImpl, parent: SRoutableElementImpl): boolean {\n        if (handle.kind === 'junction') {\n            const route = this.edgeRouterRegistry.route(parent);\n            return route.find(rp => rp.pointIndex === handle.pointIndex) === undefined;\n        }\n        return false;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        this.handlesToRemove.forEach(entry => {\n            if (entry.point !== undefined)\n                entry.parent.routingPoints.splice(entry.handle.pointIndex, 0, entry.point);\n        });\n        this.elementsToActivate.forEach(element => {\n            if (element instanceof SRoutableElementImpl)\n                element.removeAll(child => child instanceof SRoutingHandleImpl);\n            else if (element instanceof SRoutingHandleImpl)\n                element.editMode = false;\n        });\n        this.elementsToDeactivate.forEach(element => {\n            if (canEditRouting(element)) {\n                const router = this.edgeRouterRegistry.get(element.routerKind);\n                router.createRoutingHandles(element);\n            } else if (element instanceof SRoutingHandleImpl)\n                element.editMode = true;\n        });\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.doExecute(context);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Action, ReconnectAction as ProtocolReconnectAction} from 'sprotty-protocol/lib/actions';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { TYPES } from '../../base/types';\nimport { SRoutableElementImpl } from '../routing/model';\nimport { EdgeMemento, EdgeRouterRegistry } from '../routing/routing';\n\n@injectable()\nexport class ReconnectCommand extends Command {\n    static readonly KIND = ProtocolReconnectAction.KIND;\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    memento: EdgeMemento | undefined;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolReconnectAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.doExecute(context);\n        return context.root;\n    }\n\n    private doExecute(context: CommandExecutionContext) {\n        const index = context.root.index;\n        const edge = index.getById(this.action.routableId);\n        if (edge instanceof SRoutableElementImpl) {\n            const router = this.edgeRouterRegistry.get(edge.routerKind);\n            const before = router.takeSnapshot(edge);\n            router.applyReconnect(edge, this.action.newSourceId, this.action.newTargetId);\n            const after = router.takeSnapshot(edge);\n            this.memento = {\n                edge: edge,\n                before,\n                after\n            };\n        }\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        if (this.memento) {\n            const router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);\n            router.applySnapshot(this.memento.edge, this.memento.before);\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        if (this.memento) {\n            const router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);\n            router.applySnapshot(this.memento.edge, this.memento.after);\n        }\n        return context.root;\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ReconnectAction extends Action {\n    kind: typeof ReconnectAction.KIND\n    routableId: string\n    newSourceId?: string\n    newTargetId?: string\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport namespace ReconnectAction {\n    export const KIND = 'reconnect';\n\n    export function create(options: { routableId: string, newSourceId?: string, newTargetId?: string }): ReconnectAction {\n        return {\n            kind: KIND,\n            routableId: options.routableId,\n            newSourceId: options.newSourceId,\n            newTargetId: options.newTargetId\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { configureActionHandler } from \"../../base/actions/action-handler\";\nimport { configureModelElement } from \"../../base/views/view\";\nimport { SDanglingAnchorImpl } from \"../../features/routing/model\";\nimport { EmptyGroupView } from \"../../lib/svg-views\";\nimport { DeleteElementCommand } from \"./delete\";\nimport { EditLabelMouseListener, ApplyLabelEditCommand, EditLabelKeyListener, EditLabelAction } from \"./edit-label\";\nimport { EditLabelUI, EditLabelActionHandler } from \"./edit-label-ui\";\nimport { SwitchEditModeCommand } from \"./edit-routing\";\nimport { ReconnectCommand } from \"./reconnect\";\n\nexport const edgeEditModule = new ContainerModule((bind, _unbind, isBound) => {\n    const context = { bind, isBound };\n    configureCommand(context, SwitchEditModeCommand);\n    configureCommand(context, ReconnectCommand);\n    configureCommand(context, DeleteElementCommand);\n    configureModelElement(context, 'dangling-anchor', SDanglingAnchorImpl, EmptyGroupView);\n});\n\nexport const labelEditModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(EditLabelMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(EditLabelMouseListener);\n    bind(EditLabelKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(EditLabelKeyListener);\n    configureCommand({ bind, isBound }, ApplyLabelEditCommand);\n});\n\nexport const labelEditUiModule = new ContainerModule((bind, _unbind, isBound) => {\n    const context = { bind, isBound };\n    configureActionHandler(context, EditLabelAction.KIND, EditLabelActionHandler);\n    bind(EditLabelUI).toSelf().inSingletonScope();\n    bind(TYPES.IUIExtension).toService(EditLabelUI);\n});\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\n\nexport const expandFeature = Symbol('expandFeature');\n\n/**\n * Model elements that implement this interface can be expanded/collapsed\n */\nexport interface Expandable extends SModelExtension {\n    expanded: boolean\n}\n\nexport function isExpandable(element: SModelElementImpl): element is SModelElementImpl & Expandable {\n    return element.hasFeature(expandFeature) && 'expanded' in element;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Action, CollapseExpandAction as ProtocolCollapseExpandAction, CollapseExpandAllAction as ProtocolCollapseExpandAllAction} from 'sprotty-protocol/lib/actions';\nimport { SButtonImpl } from '../button/model';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { isExpandable } from './model';\nimport { IButtonHandler } from '../button/button-handler';\n\n@injectable()\nexport class ExpandButtonHandler implements IButtonHandler {\n    static TYPE = 'button:expand';\n\n    buttonPressed(button: SButtonImpl): Action[] {\n        const expandable = findParentByFeature(button, isExpandable);\n        if (expandable !== undefined) {\n            return [ ProtocolCollapseExpandAction.create({\n                expandIds:   expandable.expanded ? [] : [ expandable.id ],\n                collapseIds:  expandable.expanded ? [ expandable.id ] : []\n            })];\n        } else {\n            return [];\n        }\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Sent from the client to the model source to recalculate a diagram when elements\n * are collapsed/expanded by the client.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class CollapseExpandAction implements Action,ProtocolCollapseExpandAction {\n    static readonly KIND = 'collapseExpand';\n    readonly kind = CollapseExpandAction.KIND;\n\n    constructor(public readonly expandIds: string[],\n                public readonly collapseIds: string[]) {\n    }\n}\n\n/**\n * Programmatic action for expanding or collapsing all elements.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class CollapseExpandAllAction implements Action,ProtocolCollapseExpandAllAction {\n    static readonly KIND = 'collapseExpandAll';\n    readonly kind = CollapseExpandAllAction.KIND;\n\n    /**\n     * If `expand` is true, all elements are expanded, othewise they are collapsed.\n     */\n    constructor(public readonly expand: boolean = true) {\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n /** @jsx svg */\nimport { svg } from '../../lib/jsx';\n\nimport { VNode } from 'snabbdom';\nimport { IView, RenderingContext } from '../../base/views/view';\nimport { isExpandable } from './model';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { SButtonImpl } from '../button/model';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class ExpandButtonView implements IView {\n    render(button: SButtonImpl, context: RenderingContext): VNode {\n        const expandable = findParentByFeature(button, isExpandable);\n        const path = (expandable !== undefined && expandable.expanded)\n            ? 'M 1,5 L 8,12 L 15,5 Z'\n            : 'M 1,8 L 8,15 L 8,1 Z';\n        return <g class-sprotty-button=\"{true}\" class-enabled=\"{button.enabled}\">\n                <rect x={0} y={0} width={16} height={16} opacity={0}></rect>\n                <path d={path}></path>\n            </g>;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { VNode } from 'snabbdom';\nimport { Action, generateRequestId, RequestAction } from \"sprotty-protocol/lib/actions\";\nimport { CommandExecutionContext, HiddenCommand, CommandResult } from '../../base/commands/command';\nimport { IVNodePostprocessor } from '../../base/views/vnode-postprocessor';\nimport { isSelectable } from '../select/model';\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { isExportable } from './model';\nimport { SvgExporter, ExportSvgAction } from './svg-exporter';\nimport { isViewport } from '../viewport/model';\nimport { isHoverable } from '../hover/model';\nimport { TYPES } from '../../base/types';\n\n@injectable()\nexport class ExportSvgKeyListener extends KeyListener {\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyE', 'ctrlCmd', 'shift'))\n            return [ RequestExportSvgAction.create() ];\n        else\n            return [];\n    }\n}\n\nexport interface RequestExportSvgAction extends RequestAction<ExportSvgAction> {\n    kind: typeof RequestExportSvgAction.KIND\n}\nexport namespace RequestExportSvgAction {\n    export const KIND = 'requestExportSvg';\n\n    export function create(): RequestExportSvgAction {\n        return {\n            kind: KIND,\n            requestId: generateRequestId()\n        };\n    }\n}\n\nexport class ExportSvgCommand extends HiddenCommand {\n    static readonly KIND = RequestExportSvgAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected action: RequestExportSvgAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandResult {\n        if (isExportable(context.root)) {\n            const root = context.modelFactory.createRoot(context.root);\n            if (isExportable(root)) {\n                if (isViewport(root)) {\n                    root.zoom = 1;\n                    root.scroll = { x: 0, y: 0 };\n                }\n                root.index.all().forEach(element => {\n                    if (isSelectable(element) && element.selected)\n                        element.selected = false;\n                    if (isHoverable(element) && element.hoverFeedback)\n                        element.hoverFeedback = false;\n                });\n                return {\n                    model: root,\n                    modelChanged: true,\n                    cause: this.action\n                };\n            }\n        }\n        return {\n            model: context.root,\n            modelChanged: false\n        };\n    }\n}\n\n@injectable()\nexport class ExportSvgPostprocessor implements IVNodePostprocessor {\n\n    root: SModelRootImpl;\n\n    @inject(TYPES.SvgExporter) protected svgExporter: SvgExporter;\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (element instanceof SModelRootImpl)\n            this.root = element;\n        return vnode;\n    }\n\n    postUpdate(cause?: Action): void {\n        if (this.root && cause !== undefined && cause.kind === RequestExportSvgAction.KIND) {\n            this.svgExporter.export(this.root, cause as RequestExportSvgAction);\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { Animation } from \"../../base/animations/animation\";\nimport { CommandExecutionContext } from \"../../base/commands/command\";\nimport { SModelRootImpl, SModelElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { setAttr } from \"../../base/views/vnode-utils\";\nimport { Fadeable, isFadeable } from \"./model\";\n\nexport interface ResolvedElementFade {\n    element: SModelElementImpl & Fadeable\n    type: 'in' | 'out'\n}\n\nexport class FadeAnimation extends Animation {\n\n    constructor(protected model: SModelRootImpl,\n                public elementFades: ResolvedElementFade[],\n                context: CommandExecutionContext,\n                protected removeAfterFadeOut: boolean = false) {\n        super(context);\n    }\n\n    tween(t: number, context: CommandExecutionContext): SModelRootImpl {\n        for (const elementFade of this.elementFades) {\n            const element = elementFade.element;\n            if (elementFade.type === 'in') {\n                element.opacity = t;\n            } else if (elementFade.type === 'out') {\n                element.opacity = 1 - t;\n                if (t === 1 && this.removeAfterFadeOut && element instanceof SChildElementImpl) {\n                    element.parent.remove(element);\n                }\n            }\n        }\n        return this.model;\n    }\n\n}\n\n@injectable()\nexport class ElementFader implements IVNodePostprocessor {\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (isFadeable(element) && element.opacity !== 1) {\n            setAttr(vnode, 'opacity', element.opacity);\n        }\n        return vnode;\n    }\n\n    postUpdate(): void {\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport {\n    Action, generateRequestId, RequestAction,\n    ResponseAction, RequestPopupModelAction as ProtocolRequestPopupModelAction,\n    SetPopupModelAction as ProtocolSetPopupModelAction, HoverFeedbackAction as ProtocolHoverFeedbackAction\n} from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { TYPES } from \"../../base/types\";\nimport { SModelElementImpl, SModelRootImpl } from \"../../base/model/smodel\";\nimport { MouseListener } from \"../../base/views/mouse-tool\";\nimport { CommandExecutionContext, PopupCommand, SystemCommand, CommandReturn, ICommand } from \"../../base/commands/command\";\nimport { IActionHandler } from \"../../base/actions/action-handler\";\nimport { EMPTY_ROOT } from \"../../base/model/smodel-factory\";\nimport { KeyListener } from \"../../base/views/key-tool\";\nimport { findParentByFeature, findParent } from \"../../base/model/smodel-utils\";\nimport { ViewerOptions } from \"../../base/views/viewer-options\";\nimport { getAbsoluteBounds } from '../bounds/model';\nimport { hasPopupFeature, isHoverable } from \"./model\";\n\n\n\n@injectable()\nexport class HoverFeedbackCommand extends SystemCommand {\n    static readonly KIND = ProtocolHoverFeedbackAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolHoverFeedbackAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const model: SModelRootImpl = context.root;\n        const modelElement: SModelElementImpl | undefined = model.index.getById(this.action.mouseoverElement);\n\n        if (modelElement) {\n            if (isHoverable(modelElement)) {\n                modelElement.hoverFeedback = this.action.mouseIsOver;\n            }\n        }\n\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return context.root;\n    }\n}\n\n@injectable()\nexport class SetPopupModelCommand extends PopupCommand {\n    static readonly KIND = ProtocolSetPopupModelAction.KIND;\n\n    oldRoot: SModelRootImpl;\n    newRoot: SModelRootImpl;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolSetPopupModelAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.oldRoot = context.root;\n        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);\n\n        return this.newRoot;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return this.oldRoot;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.newRoot;\n    }\n}\n\nexport interface HoverState {\n    mouseOverTimer: number | undefined\n    mouseOutTimer: number | undefined\n    popupOpen: boolean\n    previousPopupElement: SModelElementImpl | undefined\n}\n\nexport abstract class AbstractHoverMouseListener extends MouseListener {\n\n    protected mouseIsDown: boolean;\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n    @inject(TYPES.HoverState) protected state: HoverState;\n\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.mouseIsDown = true;\n        return [];\n    }\n\n    override mouseUp(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.mouseIsDown = false;\n        return [];\n    }\n\n    protected stopMouseOutTimer(): void {\n        if (this.state.mouseOutTimer !== undefined) {\n            window.clearTimeout(this.state.mouseOutTimer);\n            this.state.mouseOutTimer = undefined;\n        }\n    }\n\n    protected startMouseOutTimer(): Promise<Action> {\n        this.stopMouseOutTimer();\n        return new Promise((resolve) => {\n            this.state.mouseOutTimer = window.setTimeout(() => {\n                this.state.popupOpen = false;\n                this.state.previousPopupElement = undefined;\n                resolve(ProtocolSetPopupModelAction.create({ type: EMPTY_ROOT.type, id: EMPTY_ROOT.id }));\n            }, this.options.popupCloseDelay);\n        });\n    }\n\n    protected stopMouseOverTimer(): void {\n        if (this.state.mouseOverTimer !== undefined) {\n            window.clearTimeout(this.state.mouseOverTimer);\n            this.state.mouseOverTimer = undefined;\n        }\n    }\n}\n\n@injectable()\nexport class HoverMouseListener extends AbstractHoverMouseListener {\n\n    protected lastHoverFeedbackElementId?: string;\n\n    @inject(TYPES.ViewerOptions) protected override options: ViewerOptions;\n\n    protected computePopupBounds(target: SModelElementImpl, mousePosition: Point): Bounds {\n        // Default position: below the mouse cursor\n        let offset: Point = { x: -5, y: 20 };\n\n        const targetBounds = getAbsoluteBounds(target);\n        const canvasBounds = target.root.canvasBounds;\n        const boundsInWindow = Bounds.translate(targetBounds, canvasBounds);\n        const distRight = boundsInWindow.x + boundsInWindow.width - mousePosition.x;\n        const distBottom = boundsInWindow.y + boundsInWindow.height - mousePosition.y;\n        if (distBottom <= distRight && this.allowSidePosition(target, 'below', distBottom)) {\n            // Put the popup below the target element\n            offset = { x: -5, y: Math.round(distBottom + 5) };\n        } else if (distRight <= distBottom && this.allowSidePosition(target, 'right', distRight)) {\n            // Put the popup right of the target element\n            offset = { x: Math.round(distRight + 5), y: -5 };\n        }\n        let leftPopupPosition = mousePosition.x + offset.x;\n        const canvasRightBorderPosition = canvasBounds.x + canvasBounds.width;\n        if (leftPopupPosition > canvasRightBorderPosition) {\n            leftPopupPosition = canvasRightBorderPosition;\n        }\n        let topPopupPosition = mousePosition.y + offset.y;\n        const canvasBottomBorderPosition = canvasBounds.y + canvasBounds.height;\n        if (topPopupPosition > canvasBottomBorderPosition) {\n            topPopupPosition = canvasBottomBorderPosition;\n        }\n        return { x: leftPopupPosition, y: topPopupPosition, width: -1, height: -1 };\n    }\n\n    protected allowSidePosition(target: SModelElementImpl, side: 'above' | 'below' | 'left' | 'right', distance: number): boolean {\n        return !(target instanceof SModelRootImpl) && distance <= 150;\n    }\n\n    protected startMouseOverTimer(target: SModelElementImpl, event: MouseEvent): Promise<Action> {\n        this.stopMouseOverTimer();\n        return new Promise((resolve) => {\n            this.state.mouseOverTimer = window.setTimeout(() => {\n                const popupBounds = this.computePopupBounds(target, { x: event.pageX, y: event.pageY });\n                resolve(ProtocolRequestPopupModelAction.create({ elementId: target.id, bounds: popupBounds }));\n\n                this.state.popupOpen = true;\n                this.state.previousPopupElement = target;\n            }, this.options.popupOpenDelay);\n        });\n    }\n\n    override mouseOver(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: (Action | Promise<Action>)[] = [];\n        if (!this.mouseIsDown) {\n            const popupTarget = findParent(target, hasPopupFeature);\n            if (this.state.popupOpen && (popupTarget === undefined ||\n                this.state.previousPopupElement !== undefined && this.state.previousPopupElement.id !== popupTarget.id)) {\n                result.push(this.startMouseOutTimer());\n            } else {\n                this.stopMouseOverTimer();\n                this.stopMouseOutTimer();\n            }\n            if (popupTarget !== undefined &&\n                (this.state.previousPopupElement === undefined || this.state.previousPopupElement.id !== popupTarget.id)) {\n                result.push(this.startMouseOverTimer(popupTarget, event));\n            }\n            if (this.lastHoverFeedbackElementId) {\n                result.push(ProtocolHoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));\n                this.lastHoverFeedbackElementId = undefined;\n            }\n            const hoverTarget = findParentByFeature(target, isHoverable);\n            if (hoverTarget !== undefined) {\n                result.push(ProtocolHoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: true }));\n                this.lastHoverFeedbackElementId = hoverTarget.id;\n            }\n        }\n        return result;\n    }\n\n    override mouseOut(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: (Action | Promise<Action>)[] = [];\n        if (!this.mouseIsDown) {\n            const elementUnderMouse = this.getElementFromEventPosition(event);\n            if (!this.isSprottyPopup(elementUnderMouse)) {\n                if (this.state.popupOpen) {\n                    const popupTarget = findParent(target, hasPopupFeature);\n                    if (this.state.previousPopupElement !== undefined && popupTarget !== undefined\n                        && this.state.previousPopupElement.id === popupTarget.id)\n                        result.push(this.startMouseOutTimer());\n                }\n                this.stopMouseOverTimer();\n                const hoverTarget = findParentByFeature(target, isHoverable);\n                if (hoverTarget !== undefined) {\n                    result.push(ProtocolHoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: false }));\n                    if (this.lastHoverFeedbackElementId && this.lastHoverFeedbackElementId !== hoverTarget.id) {\n                        result.push(ProtocolHoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));\n                    }\n                    this.lastHoverFeedbackElementId = undefined;\n                }\n            }\n        }\n        return result;\n    }\n\n    protected getElementFromEventPosition(event: MouseEvent) {\n        return document.elementFromPoint(event.x, event.y);\n    }\n\n    protected isSprottyPopup(element: Element | null): boolean {\n        return element\n            ? (element.id === this.options.popupDiv\n                || (!!element.parentElement && this.isSprottyPopup(element.parentElement)))\n            : false;\n    }\n\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: (Action | Promise<Action>)[] = [];\n\n        if (!this.mouseIsDown) {\n            if (this.state.previousPopupElement !== undefined && this.closeOnMouseMove(this.state.previousPopupElement, event)) {\n                result.push(this.startMouseOutTimer());\n            }\n\n            const popupTarget = findParent(target, hasPopupFeature);\n            if (popupTarget !== undefined && (this.state.previousPopupElement === undefined\n                || this.state.previousPopupElement.id !== popupTarget.id)) {\n                result.push(this.startMouseOverTimer(popupTarget, event));\n            }\n        }\n\n        return result;\n    }\n\n    protected closeOnMouseMove(target: SModelElementImpl, event: MouseEvent): boolean {\n        return target instanceof SModelRootImpl;\n    }\n\n}\n\n@injectable()\nexport class PopupHoverMouseListener extends AbstractHoverMouseListener {\n\n    override mouseOut(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [this.startMouseOutTimer()];\n    }\n\n    override mouseOver(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        this.stopMouseOutTimer();\n        this.stopMouseOverTimer();\n        return [];\n    }\n}\n\nexport class HoverKeyListener extends KeyListener {\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'Escape')) {\n            return [ProtocolSetPopupModelAction.create({ type: EMPTY_ROOT.type, id: EMPTY_ROOT.id })];\n        }\n        return [];\n    }\n}\n\n@injectable()\nexport class ClosePopupActionHandler implements IActionHandler {\n    protected popupOpen: boolean = false;\n\n    handle(action: Action): void | ICommand | Action {\n        if (action.kind === SetPopupModelCommand.KIND) {\n            this.popupOpen = (action as ProtocolSetPopupModelAction).newRoot.type !== EMPTY_ROOT.type;\n        } else if (this.popupOpen) {\n            return  ProtocolSetPopupModelAction.create({ id: EMPTY_ROOT.id, type: EMPTY_ROOT.type });\n        }\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Triggered when the user puts the mouse pointer over an element.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface HoverFeedbackAction extends Action {\n    kind: typeof HoverFeedbackAction.KIND\n    mouseoverElement: string\n    mouseIsOver: boolean\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport namespace HoverFeedbackAction {\n    export const KIND = 'hoverFeedback';\n\n    export function create(options: { mouseoverElement: string, mouseIsOver: boolean }): HoverFeedbackAction {\n        return {\n            kind: KIND,\n            mouseoverElement: options.mouseoverElement,\n            mouseIsOver: options.mouseIsOver\n        };\n    }\n}\n\n/**\n * Triggered when the user hovers the mouse pointer over an element to get a popup with details on\n * that element. This action is sent from the client to the model source, e.g. a DiagramServer.\n * The response is a SetPopupModelAction.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class RequestPopupModelAction implements RequestAction<SetPopupModelAction>, ProtocolRequestPopupModelAction {\n    static readonly KIND = 'requestPopupModel';\n    readonly kind = RequestPopupModelAction.KIND;\n\n    constructor(public readonly elementId: string,\n        public readonly bounds: Bounds,\n        public readonly requestId = '') { }\n\n    /** Factory function to dispatch a request with the `IActionDispatcher` */\n    static create(elementId: string, bounds: Bounds): RequestAction<SetPopupModelAction> {\n        return new RequestPopupModelAction(elementId, bounds, generateRequestId());\n    }\n}\n\n/**\n * Sent from the model source to the client to display a popup in response to a RequestPopupModelAction.\n * This action can also be used to remove any existing popup by choosing EMPTY_ROOT as root element.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SetPopupModelAction implements ResponseAction, ProtocolSetPopupModelAction {\n    static readonly KIND = 'setPopupModel';\n    readonly kind = SetPopupModelAction.KIND;\n\n    constructor(public readonly newRoot: SModelRootSchema,\n        public readonly responseId = '') { }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { SShapeElementImpl, boundsFeature } from '../bounds/model';\nimport { hoverFeedbackFeature, popupFeature } from '../hover/model';\n\nexport const decorationFeature = Symbol('decorationFeature');\n\nexport interface Decoration extends SModelExtension {\n}\n\nexport function isDecoration<T extends SModelElementImpl>(e: T): e is T & Decoration {\n    return e.hasFeature(decorationFeature);\n}\n\nexport class SDecoration extends SShapeElementImpl implements Decoration {\n    static readonly DEFAULT_FEATURES = [decorationFeature, boundsFeature, hoverFeedbackFeature, popupFeature];\n}\n\nexport type SIssueSeverity = 'error' | 'warning' | 'info';\n\nexport class SIssueMarker extends SDecoration {\n    issues: SIssue[];\n}\n\nexport class SIssue {\n    message: string;\n    severity: SIssueSeverity;\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { svg } from '../../lib/jsx';\n\nimport { VNode } from 'snabbdom';\nimport { IView, RenderingContext } from '../../base/views/view';\nimport { SIssueMarker, SIssueSeverity } from './model';\nimport { setClass } from '../../base/views/vnode-utils';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class IssueMarkerView implements IView {\n    render(marker: SIssueMarker, context: RenderingContext): VNode {\n        const scale = 16 / 1792;\n        const trafo = `scale(${scale}, ${scale})`;\n        const maxSeverity = this.getMaxSeverity(marker);\n        const group = <g class-sprotty-issue={true}>\n            <g transform={trafo}>\n                <path d={this.getPath(maxSeverity)} />\n            </g>\n        </g>;\n        setClass(group, 'sprotty-' + maxSeverity, true);\n        return group;\n    }\n\n    protected getMaxSeverity(marker: SIssueMarker): SIssueSeverity {\n        let currentSeverity: SIssueSeverity = 'info';\n        for (const severity of marker.issues.map(s => s.severity)) {\n            if (severity === 'error' || (severity === 'warning' && currentSeverity === 'info'))\n                currentSeverity = severity;\n        }\n        return currentSeverity;\n    }\n\n    protected getPath(severity: SIssueSeverity) {\n        switch (severity) {\n            case 'error':\n            case 'warning':\n                // eslint-disable-next-line max-len\n                return \"M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm128 1247v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zm-2-344l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z\";\n            case 'info':\n                // eslint-disable-next-line max-len\n                return \"M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z\";\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { SModelElementImpl, SChildElementImpl } from \"../../base/model/smodel\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { isDecoration, Decoration } from \"./model\";\nimport { setAttr } from \"../../base/views/vnode-utils\";\nimport { isSizeable } from \"../bounds/model\";\nimport { SRoutableElementImpl } from \"../routing/model\";\nimport { EdgeRouterRegistry } from \"../routing/routing\";\nimport { Point } from \"sprotty-protocol\";\n\n@injectable()\nexport class DecorationPlacer implements IVNodePostprocessor {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (isDecoration(element)) {\n            const position = this.getPosition(element);\n            const translate = 'translate(' + position.x + ', ' + position.y + ')';\n            setAttr(vnode, 'transform', translate);\n        }\n        return vnode;\n    }\n\n    protected getPosition(element: SModelElementImpl & Decoration): Point {\n        if (element instanceof SChildElementImpl && element.parent instanceof SRoutableElementImpl) {\n            const route =  this.edgeRouterRegistry.route(element.parent);\n            if (route.length > 1) {\n                const index = Math.floor(0.5  * (route.length - 1));\n                const offset = isSizeable(element)\n                    ? {\n                        x: - 0.5 * element.bounds.width,\n                        y: - 0.5 * element.bounds.width\n                    }\n                    : Point.ORIGIN;\n                return {\n                    x: 0.5 * (route[index].x + route[index + 1].x) + offset.x,\n                    y: 0.5 * (route[index].y + route[index + 1].y) + offset.y\n                };\n            }\n        }\n        if (isSizeable(element))\n            return {\n                x: -0.666 * element.bounds.width,\n                y: -0.666 * element.bounds.height\n            };\n        return Point.ORIGIN;\n    }\n\n    postUpdate(): void {\n    }\n}\n", "(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = global || self, global.TinyQueue = factory());\n}(this, function () { 'use strict';\n\nvar TinyQueue = function TinyQueue(data, compare) {\n    if ( data === void 0 ) data = [];\n    if ( compare === void 0 ) compare = defaultCompare;\n\n    this.data = data;\n    this.length = this.data.length;\n    this.compare = compare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) { this._down(i); }\n    }\n};\n\nTinyQueue.prototype.push = function push (item) {\n    this.data.push(item);\n    this.length++;\n    this._up(this.length - 1);\n};\n\nTinyQueue.prototype.pop = function pop () {\n    if (this.length === 0) { return undefined; }\n\n    var top = this.data[0];\n    var bottom = this.data.pop();\n    this.length--;\n\n    if (this.length > 0) {\n        this.data[0] = bottom;\n        this._down(0);\n    }\n\n    return top;\n};\n\nTinyQueue.prototype.peek = function peek () {\n    return this.data[0];\n};\n\nTinyQueue.prototype._up = function _up (pos) {\n    var ref = this;\n        var data = ref.data;\n        var compare = ref.compare;\n    var item = data[pos];\n\n    while (pos > 0) {\n        var parent = (pos - 1) >> 1;\n        var current = data[parent];\n        if (compare(item, current) >= 0) { break; }\n        data[pos] = current;\n        pos = parent;\n    }\n\n    data[pos] = item;\n};\n\nTinyQueue.prototype._down = function _down (pos) {\n    var ref = this;\n        var data = ref.data;\n        var compare = ref.compare;\n    var halfLength = this.length >> 1;\n    var item = data[pos];\n\n    while (pos < halfLength) {\n        var left = (pos << 1) + 1;\n        var best = data[left];\n        var right = left + 1;\n\n        if (right < this.length && compare(data[right], best) < 0) {\n            left = right;\n            best = data[right];\n        }\n        if (compare(best, item) >= 0) { break; }\n\n        data[pos] = best;\n        pos = left;\n    }\n\n    data[pos] = item;\n};\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn TinyQueue;\n\n}));\n", "/********************************************************************************\n * Copyright (c) 2019 Rowan Winsemius and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n// Based on the sweepline implementation at https://github.com/rowanwins/sweepline-intersections\n// which is published under the terms of MIT, but has been adapted to the use case of sprotty.\nimport TinyQueue from \"tinyqueue\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { PointToPointLine } from \"../../utils/geometry\";\nimport { Intersection } from \"./intersection-finder\";\nimport { RoutedPoint } from \"../routing/routing\";\n\n/*\n * The algorithm implemented in this module is loosely based on the Bentley-Ottmann algorithm for\n * finding intersection among line segments in `O((n+k) log n)`, whereas `n` is the number of line\n * segments and `k` is the number of intersections.\n * The underlying idea is to use a imaginary sweep line that moves over the x/y plane and testing\n * only the line segments for intersection that the sweepline currently crosses, instead of\n * testing all segment with each other, which would be `O(n^2)`.\n * It does so by generating a prioritized event queue for start and end events of the line segments\n * and working its way through the queue (i.e., sweeping).\n * More information can be found at https://en.wikipedia.org/wiki/Bentley%E2%80%93Ottmann_algorithm\n * In contrast to the original Bently-Ottmann algorithm, the implementation below does not use a tree\n * data structure to store the segments in order to simplify the implementation.\n * See also https://github.com/rowanwins/sweepline-intersections#algorithm-notes\n */\n\n/**\n * Add the specified `route` to the event `queue` from left to right.\n * @param routeId id of the route.\n * @param route the route as array of points.\n * @param queue the queue to add the route to.\n */\nexport function addRoute(routeId: string, route: RoutedPoint[], queue: TinyQueue<SweepEvent>) {\n    if (route.length < 1) return;\n    let currentPoint = route[0];\n    let nextPoint = undefined;\n    for (let i = 0; i < route.length - 1; i++) {\n        nextPoint = route[i + 1];\n\n        const e1 = new SweepEvent(routeId, currentPoint, i);\n        const e2 = new SweepEvent(routeId, nextPoint, i + 1);\n\n        e1.otherEvent = e2;\n        e2.otherEvent = e1;\n\n        if (checkWhichEventIsLeft(e1, e2) > 0) {\n            e2.isLeftEndpoint = true;\n            e1.isLeftEndpoint = false;\n        } else {\n            e1.isLeftEndpoint = true;\n            e2.isLeftEndpoint = false;\n        }\n        queue.push(e1);\n        queue.push(e2);\n\n        currentPoint = nextPoint;\n    }\n}\n\n/**\n * Returns which of the two events is left.\n * This is used to classify the endpoints of a segment when generating the\n * event queue.\n */\nexport function checkWhichEventIsLeft(e1: SweepEvent, e2: SweepEvent): 1 | -1 {\n    if (e1.point.x > e2.point.x) return 1;\n    if (e1.point.x < e2.point.x) return -1;\n    if (e1.point.y !== e2.point.y) return e1.point.y > e2.point.y ? 1 : -1;\n    return 1;\n}\n\n/**\n * An event -- or with other words a start or end point of a segment -- in the context\n * of the event queue for the sweep.\n *\n * Stores the original Sprotty `edgeId` and the segment index of this segment in the edge\n * to keep track of which edge and segment this event originated from.\n */\nexport class SweepEvent {\n    otherEvent: SweepEvent;\n    isLeftEndpoint: boolean;\n    constructor(readonly edgeId: string, readonly point: Point, readonly segmentIndex: number) { }\n}\n\n/**\n * A line segment consists of a start and a stop event.\n */\nexport class Segment {\n    readonly leftSweepEvent: SweepEvent;\n    readonly rightSweepEvent: SweepEvent;\n    constructor(event: SweepEvent) {\n        this.leftSweepEvent = event;\n        this.rightSweepEvent = event.otherEvent;\n    }\n}\n\n/**\n * Performs the main sweep algorithm on the specified event queue.\n *\n * An empty priority queue is created to store segments encountered.\n * An item is removed from the priority queue if the vertex is the left endpoint\n * of a segment, we test it against every other segment in the segment queue for\n * intersections with any intersection recorded. We then add the vertex (and it's\n * associated right endpoint) to the segment queue.\n * If we encounter a right endpoint we remove the first item from the segment queue.\n *\n * Each pair of segments are only tested once. And only segments that overlap on the\n * x plane are tested against each other.\n *\n * @param eventQueue the event queue.\n * @returns the identified intersections.\n */\nexport function runSweep(eventQueue: TinyQueue<SweepEvent>): Intersection[] {\n    const intersectionPoints: Intersection[] = [];\n    const outQueue = new TinyQueue<Segment>([], checkWhichSegmentHasRightEndpointFirst);\n    while (eventQueue.length) {\n        const event = eventQueue.pop();\n        if (event?.isLeftEndpoint) {\n            const segment = new Segment(event);\n            for (let i = 0; i < outQueue.data.length; i++) {\n                const otherSegment = outQueue.data[i];\n                const intersection = intersectionOfSegments(segment, otherSegment);\n                if (intersection) {\n                    intersectionPoints.push(\n                        <Intersection>{\n                            routable1: event.edgeId,\n                            routable2: otherSegment.leftSweepEvent.edgeId,\n                            segmentIndex1: getSegmentIndex(segment),\n                            segmentIndex2: getSegmentIndex(otherSegment),\n                            intersectionPoint: intersection\n                        }\n                    );\n                }\n            }\n            outQueue.push(segment);\n        } else if (event?.isLeftEndpoint === false) {\n            outQueue.pop();\n        }\n    }\n    return intersectionPoints;\n}\n\n/**\n * Specifies which of the two specified segments has a right endpoint first.\n * Used as a comparator to sort the event queue.\n */\nexport function checkWhichSegmentHasRightEndpointFirst(seg1: Segment, seg2: Segment): 1 | -1 {\n    if (seg1.rightSweepEvent.point.x > seg2.rightSweepEvent.point.x) return 1;\n    if (seg1.rightSweepEvent.point.x < seg2.rightSweepEvent.point.x) return -1;\n    if (seg1.rightSweepEvent.point.y !== seg2.rightSweepEvent.point.y) return seg1.rightSweepEvent.point.y < seg2.rightSweepEvent.point.y ? 1 : -1;\n    return 1;\n}\n\nexport function getSegmentIndex(segment: Segment): number {\n    return Math.min(segment.leftSweepEvent.segmentIndex, segment.rightSweepEvent.segmentIndex);\n}\n\n/**\n * Tests whether two segments intersect and returns the intersection point if existing.\n */\nexport function intersectionOfSegments(seg1: Segment, seg2: Segment): Point | undefined {\n    if (seg1.leftSweepEvent.edgeId === seg2.leftSweepEvent.edgeId) {\n        return undefined;\n    }\n    const seg1Line = new PointToPointLine(seg1.leftSweepEvent.point, seg1.rightSweepEvent.point);\n    const seg2Line = new PointToPointLine(seg2.leftSweepEvent.point, seg2.rightSweepEvent.point);\n    return seg1Line.intersection(seg2Line);\n}\n", "/********************************************************************************\n * Copyright (c) 2021-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport TinyQueue from \"tinyqueue\";\nimport { EdgeRouting, IEdgeRoutePostprocessor, RoutedPoint } from \"../routing/routing\";\nimport { addRoute, checkWhichEventIsLeft, runSweep, SweepEvent } from \"./sweepline\";\n\nexport interface Intersection {\n    readonly routable1: string;\n    readonly segmentIndex1: number;\n    readonly routable2: string;\n    readonly segmentIndex2: number;\n    readonly intersectionPoint: Point;\n}\n\nexport interface IntersectingRoutedPoint extends RoutedPoint {\n    intersections: Intersection[];\n}\n\nexport function isIntersectingRoutedPoint(routedPoint: Point): routedPoint is IntersectingRoutedPoint {\n    return routedPoint !== undefined && 'intersections' in routedPoint && 'kind' in routedPoint;\n}\n\nexport const BY_X_THEN_Y = (a: Intersection, b: Intersection): number => {\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\n        return a.intersectionPoint.y - b.intersectionPoint.y;\n    }\n    return a.intersectionPoint.x - b.intersectionPoint.x;\n};\n\nexport const BY_DESCENDING_X_THEN_Y = (a: Intersection, b: Intersection): number => {\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\n        return a.intersectionPoint.y - b.intersectionPoint.y;\n    }\n    return b.intersectionPoint.x - a.intersectionPoint.x;\n};\n\nexport const BY_X_THEN_DESCENDING_Y = (a: Intersection, b: Intersection): number => {\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\n        return b.intersectionPoint.y - a.intersectionPoint.y;\n    }\n    return a.intersectionPoint.x - b.intersectionPoint.x;\n};\n\nexport const BY_DESCENDING_X_THEN_DESCENDING_Y = (a: Intersection, b: Intersection): number => {\n    if (a.intersectionPoint.x === b.intersectionPoint.x) {\n        return b.intersectionPoint.y - a.intersectionPoint.y;\n    }\n    return b.intersectionPoint.x - a.intersectionPoint.x;\n};\n\n/**\n * Finds intersections among edges and updates routed points to reflect those intersections.\n *\n * This only yields correct intersections among straight line segments and doesn't work with bezier curves.\n */\n@injectable()\nexport class IntersectionFinder implements IEdgeRoutePostprocessor {\n\n    /**\n     * Finds all intersections in the specified `routing` and replaces the `RoutedPoints` that are\n     * intersecting by adding intersection information to routing points (@see `IntersectingRoutedPoints`).\n     * @param routing the edge routing to find intersections for and update.\n     */\n    apply(routing: EdgeRouting) {\n        const intersections = this.find(routing);\n        this.addToRouting(intersections, routing);\n    }\n\n    /**\n     * Finds the intersections in the specified `routing` and returns them.\n     * @param routing the edge routing to find intersections for and update.\n     * @returns the identified intersections.\n     */\n    find(routing: EdgeRouting): Intersection[] {\n        const eventQueue = new TinyQueue<SweepEvent>(undefined, checkWhichEventIsLeft);\n        routing.routes.forEach((route, routeId) => {\n            if (this.isSupportedRoute(route)) {\n                addRoute(routeId, route, eventQueue);\n            }\n        });\n        return runSweep(eventQueue);\n    }\n\n    /**\n     * Specifies whether or not a specific route should be included in this intersection search or not.\n     *\n     * As this intersection finder only supports linear line segments, this method only returns `true`\n     * for routes that only contain routed points, which are either 'source', 'target' or 'linear'.\n     */\n    protected isSupportedRoute(route: RoutedPoint[]): boolean {\n        return route.find(point => point.kind !== 'source' && point.kind !== 'target' && point.kind !== 'linear') === undefined;\n    }\n\n    protected addToRouting(intersections: Intersection[], routing: EdgeRouting) {\n        for (const intersection of intersections) {\n            const routable1 = routing.get(intersection.routable1);\n            const routable2 = routing.get(intersection.routable2);\n            this.addIntersectionToRoutedPoint(intersection, routable1, intersection.segmentIndex1);\n            this.addIntersectionToRoutedPoint(intersection, routable2, intersection.segmentIndex2);\n        }\n    }\n\n    private addIntersectionToRoutedPoint(intersection: Intersection, routedPoint: RoutedPoint[] | undefined, segmentIndex: number) {\n        if (routedPoint && routedPoint.length > segmentIndex) {\n            const segment = routedPoint[segmentIndex + 1];\n            if (isIntersectingRoutedPoint(segment)) {\n                segment.intersections.push(intersection);\n            } else {\n                const intersectingRoutedPoint = { ...segment, intersections: [intersection] };\n                routedPoint[segmentIndex + 1] = intersectingRoutedPoint;\n            }\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, optional } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { Action, DeleteElementAction, ReconnectAction, SelectAction, SelectAllAction, MoveAction as ProtocolMoveAction } from 'sprotty-protocol/lib/actions';\nimport { Animation, CompoundAnimation } from '../../base/animations/animation';\nimport { CommandExecutionContext, ICommand, MergeableCommand, CommandReturn } from '../../base/commands/command';\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { findParentByFeature, translatePoint } from '../../base/model/smodel-utils';\nimport { TYPES } from '../../base/types';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { IVNodePostprocessor } from '../../base/views/vnode-postprocessor';\nimport { setAttr } from '../../base/views/vnode-utils';\nimport { SEdgeImpl } from '../../graph/sgraph';\nimport { CommitModelAction } from '../../model-source/commit-model';\nimport { findChildrenAtPosition, isAlignable } from '../bounds/model';\nimport { CreatingOnDrag, isCreatingOnDrag } from '../edit/create-on-drag';\nimport { SwitchEditModeAction } from '../edit/edit-routing';\nimport { ReconnectCommand } from '../edit/reconnect';\nimport { edgeInProgressID, edgeInProgressTargetHandleID, isConnectable, SRoutableElementImpl, SRoutingHandleImpl } from '../routing/model';\nimport { EdgeMemento, EdgeRouterRegistry, EdgeSnapshot, RoutedPoint } from '../routing/routing';\nimport { isEdgeLayoutable } from '../edge-layout/model';\nimport { isSelectable } from '../select/model';\nimport { isViewport } from '../viewport/model';\nimport { isLocateable, isMoveable, Locateable } from './model';\nimport { ISnapper } from './snap';\n\nexport interface ElementMove {\n    elementId: string\n    elementType?: string\n    fromPosition?: Point\n    toPosition: Point\n}\n\nexport interface ResolvedElementMove {\n    element: SModelElementImpl & Locateable\n    fromPosition: Point\n    toPosition: Point\n}\n\nexport interface ResolvedHandleMove {\n    handle: SRoutingHandleImpl\n    fromPosition: Point\n    toPosition: Point\n}\n\n@injectable()\nexport class MoveCommand extends MergeableCommand {\n    static readonly KIND = ProtocolMoveAction.KIND;\n\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\n\n    protected resolvedMoves: Map<string, ResolvedElementMove> = new Map;\n    protected edgeMementi: EdgeMemento[] = [];\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolMoveAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        const edge2handleMoves = new Map<SRoutableElementImpl, ResolvedHandleMove[]>();\n        const attachedEdgeShifts = new Map<SRoutableElementImpl, Point>();\n        this.action.moves.forEach(move => {\n            const element = index.getById(move.elementId);\n            if (element instanceof SRoutingHandleImpl && this.edgeRouterRegistry) {\n                const edge = element.parent;\n                if (edge instanceof SRoutableElementImpl) {\n                    const resolvedMove = this.resolveHandleMove(element, edge, move);\n                    if (resolvedMove) {\n                        let movesByEdge = edge2handleMoves.get(edge);\n                        if (!movesByEdge) {\n                            movesByEdge = [];\n                            edge2handleMoves.set(edge, movesByEdge);\n                        }\n                        movesByEdge.push(resolvedMove);\n                    }\n                }\n            } else if (element && isLocateable(element)) {\n                const resolvedMove = this.resolveElementMove(element, move);\n                if (resolvedMove) {\n                    this.resolvedMoves.set(resolvedMove.element.id, resolvedMove);\n                    if (this.edgeRouterRegistry) {\n                        index.getAttachedElements(element).forEach(edge => {\n                            if (edge instanceof SRoutableElementImpl) {\n                                const existingDelta = attachedEdgeShifts.get(edge);\n                                const newDelta = Point.subtract(resolvedMove.toPosition, resolvedMove.fromPosition);\n                                const delta = (existingDelta)\n                                    ? Point.linear(existingDelta, newDelta, 0.5)\n                                    : newDelta;\n                                attachedEdgeShifts.set(edge, delta);\n                            }\n                        });\n                    }\n                }\n            }\n        });\n        this.doMove(edge2handleMoves, attachedEdgeShifts);\n        if (this.action.animate) {\n            this.undoMove();\n            return new CompoundAnimation(context.root, context, [\n                new MoveAnimation(context.root, this.resolvedMoves, context, false),\n                new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)\n            ]).start();\n        }\n        return context.root;\n    }\n\n    protected resolveHandleMove(handle: SRoutingHandleImpl, edge: SRoutableElementImpl, move: ElementMove): ResolvedHandleMove | undefined {\n        let fromPosition = move.fromPosition;\n        if (!fromPosition) {\n            const router = this.edgeRouterRegistry!.get(edge.routerKind);\n            fromPosition = router.getHandlePosition(edge, router.route(edge), handle);\n        }\n        if (fromPosition)\n            return {\n                handle,\n                fromPosition,\n                toPosition: move.toPosition\n            };\n        return undefined;\n    }\n\n    protected resolveElementMove(element: SModelElementImpl & Locateable, move: ElementMove): ResolvedElementMove | undefined {\n        const fromPosition = move.fromPosition\n            || { x: element.position.x, y: element.position.y };\n        return {\n            element,\n            fromPosition,\n            toPosition: move.toPosition\n        };\n    }\n\n    protected doMove(edge2move: Map<SRoutableElementImpl, ResolvedHandleMove[]>, attachedEdgeShifts: Map<SRoutableElementImpl, Point>) {\n        this.resolvedMoves.forEach(res => {\n            res.element.position = res.toPosition;\n        });\n        // reset edges to state before\n        edge2move.forEach((moves, edge) => {\n            const router = this.edgeRouterRegistry!.get(edge.routerKind);\n            const before = router.takeSnapshot(edge);\n            router.applyHandleMoves(edge, moves);\n            const after = router.takeSnapshot(edge);\n            this.edgeMementi.push({ edge, before, after });\n        });\n        attachedEdgeShifts.forEach((delta, edge) => {\n            if (!edge2move.get(edge)) {\n                const router = this.edgeRouterRegistry!.get(edge.routerKind);\n                const before = router.takeSnapshot(edge);\n                if (edge.source\n                    && edge.target\n                    && this.resolvedMoves.get(edge.source.id)\n                    && this.resolvedMoves.get(edge.target.id)) {\n                    // move the entire edge when both source and target are moved\n                    edge.routingPoints = edge.routingPoints.map(rp => Point.add(rp, delta));\n                } else {\n                    // add/remove RPs according to the new source/target positions\n                    const updateHandles = isSelectable(edge) && edge.selected;\n                    router.cleanupRoutingPoints(edge, edge.routingPoints, updateHandles, this.action.finished);\n                }\n                const after = router.takeSnapshot(edge);\n                this.edgeMementi.push({ edge, before, after });\n            }\n        });\n    }\n\n    protected undoMove() {\n        this.resolvedMoves.forEach(res => {\n            (res.element as any).position = res.fromPosition;\n        });\n        this.edgeMementi.forEach(memento => {\n            const router = this.edgeRouterRegistry!.get(memento.edge.routerKind);\n            router.applySnapshot(memento.edge, memento.before);\n        });\n    }\n\n    undo(context: CommandExecutionContext): Promise<SModelRootImpl> {\n        return new CompoundAnimation(context.root, context, [\n            new MoveAnimation(context.root, this.resolvedMoves, context, true),\n            new MorphEdgesAnimation(context.root, this.edgeMementi, context, true)\n        ]).start();\n    }\n\n    redo(context: CommandExecutionContext): Promise<SModelRootImpl> {\n        return new CompoundAnimation(context.root, context, [\n            new MoveAnimation(context.root, this.resolvedMoves, context, false),\n            new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)\n        ]).start();\n    }\n\n    override merge(other: ICommand, context: CommandExecutionContext) {\n        if (!this.action.animate && other instanceof MoveCommand) {\n            other.resolvedMoves.forEach(\n                (otherMove, otherElementId) => {\n                    const existingMove = this.resolvedMoves.get(otherElementId);\n                    if (existingMove) {\n                        existingMove.toPosition = otherMove.toPosition;\n                    } else {\n                        this.resolvedMoves.set(otherElementId, otherMove);\n                    }\n                }\n            );\n            other.edgeMementi.forEach(otherMemento => {\n                const existingMemento = this.edgeMementi.find(edgeMemento => edgeMemento.edge.id === otherMemento.edge.id);\n                if (existingMemento) {\n                    existingMemento.after = otherMemento.after;\n                } else {\n                    this.edgeMementi.push(otherMemento);\n                }\n            });\n            return true;\n        } else if (other instanceof ReconnectCommand) {\n            const otherMemento = other.memento;\n            if (otherMemento) {\n                const existingMemento = this.edgeMementi.find(edgeMemento => edgeMemento.edge.id === otherMemento.edge.id);\n                if (existingMemento) {\n                    existingMemento.after = otherMemento.after;\n                } else {\n                    this.edgeMementi.push(otherMemento);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n}\n\nexport class MoveAnimation extends Animation {\n\n    constructor(protected model: SModelRootImpl,\n                public elementMoves: Map<string, ResolvedElementMove>,\n                context: CommandExecutionContext,\n                protected reverse: boolean = false) {\n        super(context);\n    }\n\n    tween(t: number) {\n        this.elementMoves.forEach((elementMove) => {\n            if (this.reverse) {\n                elementMove.element.position = {\n                    x: (1 - t) * elementMove.toPosition.x + t * elementMove.fromPosition.x,\n                    y: (1 - t) * elementMove.toPosition.y + t * elementMove.fromPosition.y\n                };\n            } else {\n                elementMove.element.position = {\n                    x: (1 - t) * elementMove.fromPosition.x + t * elementMove.toPosition.x,\n                    y: (1 - t) * elementMove.fromPosition.y + t * elementMove.toPosition.y\n                };\n            }\n        });\n        return this.model;\n    }\n}\n\ninterface ExpandedEdgeMorph {\n    startExpandedRoute: Point[],\n    endExpandedRoute: Point[],\n    memento: EdgeMemento\n}\n\nexport class MorphEdgesAnimation extends Animation {\n\n    protected expanded: ExpandedEdgeMorph[] = [];\n\n    constructor(protected model: SModelRootImpl,\n                originalMementi: EdgeMemento[],\n                context: CommandExecutionContext,\n                protected reverse: boolean = false) {\n        super(context);\n        originalMementi.forEach(edgeMemento => {\n            const start = this.reverse ? edgeMemento.after : edgeMemento.before;\n            const end = this.reverse ? edgeMemento.before : edgeMemento.after;\n            const startRoute = start.routedPoints;\n            const endRoute = end.routedPoints;\n            const maxRoutingPoints = Math.max(startRoute.length, endRoute.length);\n            this.expanded.push({\n                startExpandedRoute: this.growToSize(startRoute, maxRoutingPoints),\n                endExpandedRoute: this.growToSize(endRoute, maxRoutingPoints),\n                memento: edgeMemento\n            });\n        });\n    }\n\n    protected midPoint(edgeMemento: EdgeMemento): Point {\n        const edge = edgeMemento.edge;\n        const source = edgeMemento.edge.source!;\n        const target = edgeMemento.edge.target!;\n        return Point.linear(\n            translatePoint(Bounds.center(source.bounds), source.parent, edge.parent),\n            translatePoint(Bounds.center(target.bounds), target.parent, edge.parent),\n            0.5);\n    }\n\n    override start() {\n        this.expanded.forEach(morph => {\n            morph.memento.edge.removeAll(e => e instanceof SRoutingHandleImpl);\n        });\n        return super.start();\n    }\n\n    tween(t: number) {\n        if (t === 1) {\n            this.expanded.forEach(morph => {\n                const memento = morph.memento;\n                if (this.reverse)\n                    memento.before.router.applySnapshot(memento.edge, memento.before);\n                else\n                    memento.after.router.applySnapshot(memento.edge, memento.after);\n            });\n        } else {\n            this.expanded.forEach(morph => {\n                const newRoutingPoints: Point[] = [];\n                // ignore source and target anchor\n                for (let i = 1; i < morph.startExpandedRoute.length - 1; ++i)\n                    newRoutingPoints.push(Point.linear(morph.startExpandedRoute[i], morph.endExpandedRoute[i], t));\n\n                const closestSnapshot = t < 0.5 ? morph.memento.before : morph.memento.after;\n                const newSnapshot: EdgeSnapshot = {\n                    ...closestSnapshot,\n                    routingPoints: newRoutingPoints,\n                    routingHandles: []\n                };\n                closestSnapshot.router.applySnapshot(morph.memento.edge, newSnapshot);\n            });\n        }\n        return this.model;\n    }\n\n    protected growToSize(route: RoutedPoint[], targetSize: number): Point[] {\n        const diff = targetSize - route.length;\n        if (diff <= 0)\n            return route;\n        const result: Point[] = [];\n        result.push(route[0]);\n        const deltaDiff = 1 / (diff + 1);\n        const deltaSmaller = 1 / (route.length - 1);\n        let nextInsertion = 1;\n        for (let i = 1; i < route.length; ++i) {\n            const pos = deltaSmaller * i;\n            let insertions = 0;\n            while (pos > (nextInsertion + insertions) * deltaDiff)\n                ++insertions;\n            nextInsertion += insertions;\n            for (let j = 0; j < insertions; ++j) {\n                const p = Point.linear(route[i - 1], route[i], (j + 1) / (insertions + 1));\n                result.push(p);\n            }\n            result.push(route[i]);\n        }\n        return result;\n    }\n\n}\n\nexport class MoveMouseListener extends MouseListener {\n\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\n    @inject(TYPES.ISnapper) @optional() snapper?: ISnapper;\n\n    hasDragged = false;\n    startDragPosition: Point | undefined;\n    elementId2startPos = new Map<string, Point>();\n\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        if (event.button === 0) {\n            const moveable = findParentByFeature(target, isMoveable);\n            const isRoutingHandle = target instanceof SRoutingHandleImpl;\n            if (moveable !== undefined || isRoutingHandle || isCreatingOnDrag(target)) {\n                this.startDragPosition = { x: event.pageX, y: event.pageY };\n            } else {\n                this.startDragPosition = undefined;\n            }\n            this.hasDragged = false;\n            if (isCreatingOnDrag(target)) {\n                return this.startCreatingOnDrag(target, event);\n            } else if (isRoutingHandle) {\n                return this.activateRoutingHandle(target, event);\n            }\n        }\n        return [];\n    }\n\n    protected startCreatingOnDrag(target: CreatingOnDrag, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        result.push(SelectAllAction.create({ select: false }));\n        result.push(target.createAction(edgeInProgressID));\n        result.push(SelectAction.create({ selectedElementsIDs: [edgeInProgressID] }));\n        result.push(SwitchEditModeAction.create({ elementsToActivate: [edgeInProgressID] }));\n        result.push(SelectAction.create({ selectedElementsIDs: [edgeInProgressTargetHandleID] }));\n        result.push(SwitchEditModeAction.create({ elementsToActivate: [edgeInProgressTargetHandleID] }));\n        return result;\n    }\n\n    protected activateRoutingHandle(target: SRoutingHandleImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        return [SwitchEditModeAction.create({ elementsToActivate: [target.id] })];\n    }\n\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        if (event.buttons === 0)\n            this.mouseUp(target, event);\n        else if (this.startDragPosition) {\n            if (this.elementId2startPos.size === 0) {\n                this.collectStartPositions(target.root);\n            }\n            this.hasDragged = true;\n            const moveAction = this.getElementMoves(target, event, false);\n            if (moveAction)\n                result.push(moveAction);\n        }\n        return result;\n    }\n\n    protected collectStartPositions(root: SModelRootImpl) {\n        const selectedElements = new Set<SModelElementImpl>(root.index.all()\n            .filter(element => isSelectable(element) && element.selected));\n\n        selectedElements.forEach(element => {\n            if (!this.isChildOfSelected(selectedElements, element)) {\n                if (isMoveable(element))\n                    this.elementId2startPos.set(element.id, element.position);\n                else if (element instanceof SRoutingHandleImpl) {\n                    const position = this.getHandlePosition(element);\n                    if (position)\n                        this.elementId2startPos.set(element.id, position);\n                }\n            }\n        });\n    }\n\n    protected isChildOfSelected(selectedElements: Set<SModelElementImpl>, element: SModelElementImpl): boolean {\n        while (element instanceof SChildElementImpl) {\n            element = element.parent;\n            if (isMoveable(element) && selectedElements.has(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected getElementMoves(target: SModelElementImpl, event: MouseEvent, isFinished: boolean): ProtocolMoveAction | undefined {\n        if (!this.startDragPosition)\n            return undefined;\n        const elementMoves: ElementMove[] = [];\n        const viewport = findParentByFeature(target, isViewport);\n        const zoom = viewport ? viewport.zoom : 1;\n        const delta = {\n            x: (event.pageX - this.startDragPosition.x) / zoom,\n            y: (event.pageY - this.startDragPosition.y) / zoom\n        };\n        this.elementId2startPos.forEach((startPosition, elementId) => {\n            const element = target.root.index.getById(elementId);\n            if (element) {\n                const move = this.createElementMove(element, startPosition, delta, event);\n                if (move) {\n                    elementMoves.push(move);\n                }\n            }\n        });\n        if (elementMoves.length > 0)\n            return ProtocolMoveAction.create(elementMoves, { animate: false, finished: isFinished });\n        else\n            return undefined;\n    }\n\n    protected createElementMove(element: SModelElementImpl, startPosition: Point, delta: Point, event: MouseEvent): ElementMove | undefined {\n        const toPosition = this.snap({\n            x: startPosition.x + delta.x,\n            y: startPosition.y + delta.y\n        }, element, !event.shiftKey);\n        if (isMoveable(element)) {\n            return {\n                elementId: element.id,\n                elementType: element.type,\n                fromPosition: {\n                    x: element.position.x,\n                    y: element.position.y\n                },\n                toPosition\n            };\n        } else if (element instanceof SRoutingHandleImpl) {\n            const point = this.getHandlePosition(element);\n            if (point !== undefined) {\n                return {\n                    elementId: element.id,\n                    elementType: element.type,\n                    fromPosition: point,\n                    toPosition\n                };\n            }\n        }\n        return undefined;\n    }\n\n    protected snap(position: Point, element: SModelElementImpl, isSnap: boolean): Point {\n        if (isSnap && this.snapper)\n            return this.snapper.snap(position, element);\n        else\n            return position;\n    }\n\n    protected getHandlePosition(handle: SRoutingHandleImpl): Point | undefined {\n        if (this.edgeRouterRegistry) {\n            const parent = handle.parent;\n            if (!(parent instanceof SRoutableElementImpl))\n                return undefined;\n            const router = this.edgeRouterRegistry.get(parent.routerKind);\n            const route = router.route(parent);\n            return router.getHandlePosition(parent, route, handle);\n        }\n        return undefined;\n    }\n\n    override mouseEnter(target: SModelElementImpl, event: MouseEvent): Action[] {\n        if (target instanceof SModelRootImpl && event.buttons === 0 && !this.startDragPosition)\n            this.mouseUp(target, event);\n        return [];\n    }\n\n    override mouseUp(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        if (this.startDragPosition) {\n            const moveAction = this.getElementMoves(target, event, true);\n            if (moveAction) {\n                result.push(moveAction);\n            }\n            target.root.index.all().forEach(element => {\n                if (element instanceof SRoutingHandleImpl) {\n                    result.push(...this.deactivateRoutingHandle(element, target, event));\n                }\n            });\n        }\n        if (!result.some(a => a.kind === ReconnectAction.KIND)) {\n            const edgeInProgress = target.root.index.getById(edgeInProgressID);\n            if (edgeInProgress instanceof SChildElementImpl) {\n                result.push(this.deleteEdgeInProgress(edgeInProgress));\n            }\n        }\n        if (this.hasDragged) {\n            result.push(CommitModelAction.create());\n        }\n        this.hasDragged = false;\n        this.startDragPosition = undefined;\n        this.elementId2startPos.clear();\n        return result;\n    }\n\n    protected deactivateRoutingHandle(element: SRoutingHandleImpl, target: SModelElementImpl, event: MouseEvent): Action[] {\n        const result: Action[] = [];\n        const parent = element.parent;\n        if (parent instanceof SRoutableElementImpl && element.danglingAnchor) {\n            const handlePos = this.getHandlePosition(element);\n            if (handlePos) {\n                const handlePosAbs = translatePoint(handlePos, element.parent, element.root);\n                const newEnd = findChildrenAtPosition(target.root, handlePosAbs)\n                    .find(e => isConnectable(e) && e.canConnect(parent, element.kind as ('source' | 'target')));\n                if (newEnd && this.hasDragged) {\n                    result.push(ReconnectAction.create({\n                        routableId: element.parent.id,\n                        newSourceId: element.kind === 'source' ? newEnd.id : parent.sourceId,\n                        newTargetId: element.kind === 'target' ? newEnd.id : parent.targetId\n                    }));\n                }\n            }\n        }\n        if (element.editMode) {\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: [element.id] }));\n        }\n        return result;\n    }\n\n    protected deleteEdgeInProgress(edgeInProgress: SChildElementImpl): Action {\n        const deleteIds: string[] = [];\n        deleteIds.push(edgeInProgressID);\n        edgeInProgress.children.forEach(c => {\n            if (c instanceof SRoutingHandleImpl && c.danglingAnchor)\n                deleteIds.push(c.danglingAnchor.id);\n        });\n        return DeleteElementAction.create(deleteIds);\n    }\n\n    override decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        return vnode;\n    }\n}\n\n@injectable()\nexport class LocationPostprocessor implements IVNodePostprocessor {\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        if (isEdgeLayoutable(element) && element.parent instanceof SEdgeImpl) {\n            // The element is handled by EdgeLayoutDecorator\n            return vnode;\n        }\n        let translate: string = '';\n        if (isLocateable(element) && element instanceof SChildElementImpl && element.parent !== undefined) {\n            const pos = element.position;\n            if (pos.x !== 0 || pos.y !== 0) {\n                translate = 'translate(' + pos.x + ', ' + pos.y + ')';\n            }\n        }\n        if (isAlignable(element)) {\n            const ali = element.alignment;\n            if (ali.x !== 0 || ali.y !== 0) {\n                if (translate.length > 0) {\n                    translate += ' ';\n                }\n                translate += 'translate(' + ali.x + ', ' + ali.y + ')';\n            }\n        }\n        if (translate.length > 0) {\n            setAttr(vnode, 'transform', translate);\n        }\n        return vnode;\n    }\n\n    postUpdate(): void {\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface MoveAction extends Action {\n    kind: typeof MoveAction.KIND\n    moves: ElementMove[]\n    animate: boolean\n    finished: boolean\n}\nexport namespace MoveAction {\n    export const KIND = 'move';\n\n    export function create(moves: ElementMove[], options: { animate?: boolean, finished?: boolean } = {}): MoveAction {\n        return {\n            kind: KIND,\n            moves,\n            animate: options.animate ?? true,\n            finished: options.finished ?? false\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelElementImpl } from \"../../base/model/smodel\";\nimport { isBoundsAware } from \"../bounds/model\";\n\n/**\n * A snapper helps to align nodes and routing handles.\n */\nexport interface ISnapper {\n    /**\n     * @retruns the closest snapped position that for the `element` located at `position`\n     */\n    snap(position: Point, element: SModelElementImpl): Point\n}\n\n/**\n * A simple snapper that snaps the center of nodes and routing points to a grid.\n */\n@injectable()\nexport class CenterGridSnapper implements ISnapper {\n\n    get gridX() {\n        return 10;\n    }\n\n    get gridY() {\n        return 10;\n    }\n\n    snap(position: Point, element: SModelElementImpl): Point {\n        if (element && isBoundsAware(element))\n            return {\n                x: Math.round((position.x + 0.5 * element.bounds.width) / this.gridX) * this.gridX - 0.5 * element.bounds.width,\n                y: Math.round((position.y + 0.5 * element.bounds.height) / this.gridY) * this.gridY - 0.5 * element.bounds.height\n            };\n        else\n            return {\n                x: Math.round(position.x / this.gridX) * this.gridX,\n                y: Math.round(position.y / this.gridY) * this.gridY\n            };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElementImpl } from '../../base/model/smodel';\n\nexport const openFeature = Symbol('openFeature');\n\nexport function isOpenable(element: SModelElementImpl): element is SModelElementImpl  {\n    return element.hasFeature(openFeature);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action, OpenAction } from 'sprotty-protocol/lib/actions';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { isOpenable } from './model';\n\n\nexport class OpenMouseListener extends MouseListener {\n    override doubleClick(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        const openableTarget = findParentByFeature(target, isOpenable);\n        if (openableTarget !== undefined) {\n            return [ OpenAction.create(openableTarget.id) ];\n        }\n        return [];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Viewport } from 'sprotty-protocol/lib/model';\nimport { Bounds, Dimension } from 'sprotty-protocol/lib/utils/geometry';\nimport { hasOwnProperty } from 'sprotty-protocol/lib/utils/object';\nimport { SChildElementImpl, SModelRootImpl, SParentElementImpl } from '../../base/model/smodel';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { transformToRootBounds } from '../../base/model/smodel-utils';\nimport { isBoundsAware } from '../bounds/model';\n\n/**\n * Model elements implementing this interface can be displayed on a projection bar.\n * _Note:_ If set, the projectedBounds property will be prefered over the model element bounds.\n * Otherwise model elements also have to be `BoundsAware` so their projections can be shown.\n */\nexport interface Projectable extends SModelExtension {\n    projectionCssClasses: string[],\n    projectedBounds?: Bounds,\n}\n\nexport function isProjectable(arg: unknown): arg is Projectable {\n    return hasOwnProperty(arg, 'projectionCssClasses');\n}\n\n/**\n * A projection can be shown in a horizontal or vertical bar to display an overview of the diagram.\n */\nexport interface ViewProjection {\n    elementId: string;\n    projectedBounds: Bounds;\n    cssClasses: string[];\n}\n\n/**\n * Gather all projections of elements contained in the given parent element.\n */\nexport function getProjections(parent: Readonly<SParentElementImpl>): ViewProjection[] | undefined {\n    let result: ViewProjection[] | undefined;\n    for (const child of parent.children) {\n        if (isProjectable(child) && child.projectionCssClasses.length > 0) {\n            const projectedBounds = getProjectedBounds(child);\n            if (projectedBounds) {\n                const projection: ViewProjection = {\n                    elementId: child.id,\n                    projectedBounds,\n                    cssClasses: child.projectionCssClasses\n                };\n                if (result) {\n                    result.push(projection);\n                } else {\n                    result = [projection];\n                }\n            }\n        }\n        if (child.children.length > 0) {\n            const childProj = getProjections(child);\n            if (childProj) {\n                if (result) {\n                    result.push(...childProj);\n                } else {\n                    result = childProj;\n                }\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Compute the projected bounds of the given model element, that is the absolute position in the diagram.\n */\nexport function getProjectedBounds(model: Readonly<SChildElementImpl & Projectable>): Bounds | undefined {\n    const parent = model.parent;\n    if (model.projectedBounds) {\n        let bounds = model.projectedBounds;\n        if (isBoundsAware(parent)) {\n            bounds = transformToRootBounds(parent, bounds);\n        }\n        return bounds;\n    } else if (isBoundsAware(model)) {\n        let bounds = model.bounds;\n        bounds = transformToRootBounds(parent, bounds);\n        return bounds;\n    }\n    return undefined;\n}\n\nconst MAX_COORD = 1_000_000_000;\n\n/**\n * Determine the total bounds of a model; this takes the viewport into consideration\n * so it can be shown in the projections.\n */\nexport function getModelBounds(model: SModelRootImpl & Viewport): Bounds | undefined {\n    let minX = MAX_COORD;\n    let minY = MAX_COORD;\n    let maxX = -MAX_COORD;\n    let maxY = -MAX_COORD;\n\n    const bounds = isBoundsAware(model) ? model.bounds : undefined;\n    if (bounds && Dimension.isValid(bounds)) {\n        // Get the bounds directly from the model if it returns a valid size\n        minX = bounds.x;\n        minY = bounds.y;\n        maxX = minX + bounds.width;\n        maxY = minY + bounds.height;\n    } else {\n        // Determine the min. / max coordinates of top-level model elements\n        // Note that this approach is slower, so provide valid bounds to speed up the process.\n        for (const element of model.children) {\n            if (isBoundsAware(element)) {\n                const b = element.bounds;\n                minX = Math.min(minX, b.x);\n                minY = Math.min(minY, b.y);\n                maxX = Math.max(maxX, b.x + b.width);\n                maxY = Math.max(maxY, b.y + b.height);\n            }\n        }\n    }\n\n    // Enlarge the bounds by the current viewport to ensure it always fits into the projection\n    minX = Math.min(minX, model.scroll.x);\n    minY = Math.min(minY, model.scroll.y);\n    maxX = Math.max(maxX, model.scroll.x + model.canvasBounds.width / model.zoom);\n    maxY = Math.max(maxY, model.scroll.y + model.canvasBounds.height / model.zoom);\n\n    if (minX < maxX && minY < maxY) {\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY\n        };\n    }\n    return undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx html */\nimport { html } from '../../lib/jsx';\n\nimport { injectable } from 'inversify';\nimport { VNode, VNodeStyle, h } from 'snabbdom';\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\nimport { IView, IViewArgs, RenderingContext } from '../../base/views/view';\nimport { setAttr, setClass } from '../../base/views/vnode-utils';\nimport { ViewportRootElement } from '../viewport/viewport-root';\nimport { getModelBounds, getProjections, ViewProjection } from './model';\n\n/**\n * Special viewport root view that renders horizontal and vertical projection bars for quick navigation.\n */\n@injectable()\nexport class ProjectedViewportView implements IView {\n\n    render(model: Readonly<ViewportRootElement>, context: RenderingContext, args?: IViewArgs): VNode {\n        const rootNode: VNode = <div class-sprotty-root={true}>\n            {this.renderSvg(model, context, args)}\n            {this.renderProjections(model, context, args)}\n        </div>;\n        setAttr(rootNode, 'tabindex', 0); // make root div focus-able\n        return rootNode;\n    }\n\n    protected renderSvg(model: Readonly<ViewportRootElement>, context: RenderingContext, args?: IViewArgs): VNode {\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\n        const ns = 'http://www.w3.org/2000/svg';\n        return h('svg', { ns }, h('g', { ns, attrs: { transform } }, context.renderChildren(model)));\n    }\n\n    protected renderProjections(model: Readonly<ViewportRootElement>, context: RenderingContext, args?: IViewArgs): VNode[] {\n        if (model.zoom <= 0) {\n            return [];\n        }\n        const modelBounds = getModelBounds(model);\n        if (!modelBounds) {\n            return [];\n        }\n        const projections = getProjections(model) ?? [];\n        return [\n            this.renderProjectionBar(projections, model, modelBounds, 'vertical'),\n            this.renderProjectionBar(projections, model, modelBounds, 'horizontal')\n        ];\n    }\n\n    protected renderProjectionBar(projections: ViewProjection[], model: Readonly<ViewportRootElement>, modelBounds: Bounds, orientation: 'horizontal' | 'vertical'): VNode {\n        const params: ProjectionParams = { modelBounds, orientation } as ProjectionParams;\n        // NOTE: Here we assume that the projection bars have the same size as the diagram canvas, i.e. they are drawn as overlay above the canvas.\n        params.factor = orientation === 'horizontal' ? model.canvasBounds.width / modelBounds.width : model.canvasBounds.height / modelBounds.height;\n        params.zoomedFactor = params.factor / model.zoom;\n        return <div\n                class-sprotty-projection-bar={true}\n                class-horizontal={orientation === 'horizontal'}\n                class-vertical={orientation === 'vertical'} >\n            {this.renderViewport(model, params)}\n            {projections.map(p => this.renderProjection(p, model, params))}\n        </div>;\n    }\n\n    protected renderViewport(model: Readonly<ViewportRootElement>, params: ProjectionParams): VNode {\n        let canvasSize, viewportPos: number;\n        if (params.orientation === 'horizontal') {\n            canvasSize = model.canvasBounds.width;\n            viewportPos = (model.scroll.x - params.modelBounds.x) * params.factor;\n        } else {\n            canvasSize = model.canvasBounds.height;\n            viewportPos = (model.scroll.y - params.modelBounds.y) * params.factor;\n        }\n        let viewportSize = canvasSize * params.zoomedFactor;\n        if (viewportPos < 0) {\n            viewportSize += viewportPos;\n            viewportPos = 0;\n        } else if (viewportPos > canvasSize) {\n            viewportPos = canvasSize;\n        }\n        if (viewportSize < 0) {\n            viewportSize = 0;\n        } else if (viewportPos + viewportSize > canvasSize) {\n            viewportSize = canvasSize - viewportPos;\n        }\n        const style: VNodeStyle = params.orientation === 'horizontal' ? {\n            left: `${viewportPos}px`,\n            width: `${viewportSize}px`\n        } : {\n            top: `${viewportPos}px`,\n            height: `${viewportSize}px`\n        };\n        return <div class-sprotty-viewport={true} style={style} />;\n    }\n\n    protected renderProjection(projection: ViewProjection, model: Readonly<ViewportRootElement>, params: ProjectionParams): VNode {\n        let canvasSize, projPos, projSize: number;\n        if (params.orientation === 'horizontal') {\n            canvasSize = model.canvasBounds.width;\n            projPos = (projection.projectedBounds.x - params.modelBounds.x) * params.factor;\n            projSize = projection.projectedBounds.width * params.factor;\n        } else {\n            canvasSize = model.canvasBounds.height;\n            projPos = (projection.projectedBounds.y - params.modelBounds.y) * params.factor;\n            projSize = projection.projectedBounds.height * params.factor;\n        }\n        if (projPos < 0) {\n            projSize += projPos;\n            projPos = 0;\n        } else if (projPos > canvasSize) {\n            projPos = canvasSize;\n        }\n        if (projSize < 0) {\n            projSize = 0;\n        } else if (projPos + projSize > canvasSize) {\n            projSize = canvasSize - projPos;\n        }\n        const style: VNodeStyle = params.orientation === 'horizontal' ? {\n            left: `${projPos}px`,\n            width: `${projSize}px`\n        } : {\n            top: `${projPos}px`,\n            height: `${projSize}px`\n        };\n        const result = <div id={`${params.orientation}-projection:${projection.elementId}`} class-sprotty-projection={true} style={style} />;\n        projection.cssClasses.forEach(cl => setClass(result, cl, true));\n        return result;\n    }\n\n}\n\nexport type ProjectionParams = {\n    modelBounds: Bounds\n    orientation: 'horizontal' | 'vertical'\n    factor: number\n    zoomedFactor: number\n};\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { IAnchorComputer, ELLIPTIC_ANCHOR_KIND, RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND } from \"./anchor\";\nimport { SConnectableElementImpl } from \"./model\";\nimport { PointToPointLine, Diamond, intersection } from \"../../utils/geometry\";\nimport { injectable } from \"inversify\";\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\nimport { almostEquals, Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\n\n@injectable()\nexport class EllipseAnchor implements IAnchorComputer {\n\n    get kind() {\n        return PolylineEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\n    }\n\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number = 0): Point {\n        const bounds = connectable.bounds;\n        const c = Bounds.center(bounds);\n        const dx = c.x - refPoint.x;\n        const dy = c.y - refPoint.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const normX = (dx / distance) || 0;\n        const normY = (dy / distance) || 0;\n        return {\n            x: c.x - normX * (0.5 * bounds.width + offset),\n            y: c.y - normY * (0.5 * bounds.height + offset)\n        };\n    }\n}\n\n@injectable()\nexport class RectangleAnchor implements IAnchorComputer {\n\n    get kind() {\n        return PolylineEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\n    }\n\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number = 0): Point {\n        const bounds = connectable.bounds;\n        const c = Bounds.center(bounds);\n        const finder = new NearestPointFinder(c, refPoint);\n        if (!almostEquals(c.y, refPoint.y)) {\n            const xTop = this.getXIntersection(bounds.y, c, refPoint);\n            if (xTop >= bounds.x && xTop <= bounds.x + bounds.width)\n                finder.addCandidate(xTop, bounds.y - offset);\n            const xBottom = this.getXIntersection(bounds.y + bounds.height, c, refPoint);\n            if (xBottom >= bounds.x && xBottom <= bounds.x + bounds.width)\n                finder.addCandidate(xBottom, bounds.y + bounds.height + offset);\n        }\n        if (!almostEquals(c.x, refPoint.x)) {\n            const yLeft = this.getYIntersection(bounds.x, c, refPoint);\n            if (yLeft >= bounds.y && yLeft <= bounds.y + bounds.height)\n                finder.addCandidate(bounds.x - offset, yLeft);\n            const yRight = this.getYIntersection(bounds.x + bounds.width, c, refPoint);\n            if (yRight >= bounds.y && yRight <= bounds.y + bounds.height)\n                finder.addCandidate(bounds.x + bounds.width + offset, yRight);\n        }\n        return finder.best;\n    }\n\n    protected getXIntersection(yIntersection: number, centerPoint: Point, point: Point): number {\n        const t = (yIntersection - centerPoint.y) / (point.y - centerPoint.y);\n        return (point.x - centerPoint.x) * t + centerPoint.x;\n    }\n\n    protected getYIntersection(xIntersection: number, centerPoint: Point, point: Point): number {\n        const t = (xIntersection - centerPoint.x) / (point.x - centerPoint.x);\n        return (point.y - centerPoint.y) * t + centerPoint.y;\n    }\n}\n\nclass NearestPointFinder {\n    protected currentBest: Point | undefined;\n    protected currentDist: number = -1;\n\n    constructor(protected centerPoint: Point, protected refPoint: Point) {\n    }\n\n    addCandidate(x: number, y: number) {\n        const dx = this.refPoint.x - x;\n        const dy = this.refPoint.y - y;\n        const dist = dx * dx + dy * dy;\n        if (this.currentDist < 0 || dist < this.currentDist) {\n            this.currentBest = {\n                x: x,\n                y: y\n            };\n            this.currentDist = dist;\n        }\n    }\n\n    get best(): Point {\n        if (this.currentBest === undefined)\n            return this.centerPoint;\n        else\n            return this.currentBest;\n    }\n}\n\n@injectable()\nexport class DiamondAnchor implements IAnchorComputer {\n\n    get kind() {\n        return PolylineEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\n    }\n\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number): Point {\n        const bounds = connectable.bounds;\n        const referenceLine = new PointToPointLine(Bounds.center(bounds), refPoint);\n        const closestDiamondSide = new Diamond(bounds).closestSideLine(refPoint);\n        const anchorPoint = intersection(closestDiamondSide, referenceLine);\n        return Point.shiftTowards(anchorPoint, refPoint, offset);\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Action } from 'sprotty-protocol/lib/actions';\nimport { centerOfLine, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { ResolvedHandleMove } from '../move/move';\nimport { SDanglingAnchorImpl, SRoutableElementImpl, SRoutingHandleImpl } from './model';\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { EdgeRouterRegistry, RoutedPoint } from './routing';\nimport { AbstractEdgeRouter, LinearRouteOptions } from './abstract-edge-router';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { TYPES } from \"../../base/types\";\nimport { SEdgeImpl } from '../../graph/sgraph';\n\n@injectable()\nexport class BezierEdgeRouter extends AbstractEdgeRouter {\n\n    static readonly KIND = 'bezier';\n    static readonly DEFAULT_BEZIER_HANDLE_OFFSET = 25;\n\n    get kind() {\n        return BezierEdgeRouter.KIND;\n    }\n\n    route(edge: SRoutableElementImpl): RoutedPoint[] {\n        if (!edge.source || !edge.target)\n            return [];\n        const rpCount = edge.routingPoints.length;\n        const source = edge.source;\n        const target = edge.target;\n\n        const result: RoutedPoint[] = [];\n        result.push({ kind: 'source', x: 0, y: 0 });\n        if (rpCount === 0) {\n            // initial values\n            const [h1, h2] = this.createDefaultBezierHandles(source.position, target.position);\n            result.push( { kind: 'bezier-control-after', x: h1.x, y: h1.y, pointIndex: 0 } );\n            result.push( { kind: 'bezier-control-before', x: h2.x, y: h2.y, pointIndex: 1 } );\n            edge.routingPoints.push(h1);\n            edge.routingPoints.push(h2);\n        } else if (rpCount >= 2) {\n            for (let i = 0; i < rpCount; i++) {\n                const p = edge.routingPoints[i];\n                if (i % 3 === 0) {\n                    result.push({ kind: 'bezier-control-after', x: p.x, y: p.y, pointIndex: i });\n                }\n                if ((i + 1) % 3 === 0) {\n                    result.push({ kind: 'bezier-junction', x: p.x, y: p.y, pointIndex: i });\n                } else if ((i + 2) % 3 === 0) {\n                    result.push({ kind: 'bezier-control-before', x: p.x, y: p.y, pointIndex: i });\n                }\n            }\n        }\n        result.push({ kind: 'target', x: 0, y: 0 });\n\n        // use \"ends\" of edge as reference or next bezier-junction\n        const p0 = rpCount > 2 ? edge.routingPoints[2] : target.position;\n        const pn = rpCount > 2 ? edge.routingPoints[edge.routingPoints.length - 3] : source.position;\n\n        const sourceAnchor = this.getTranslatedAnchor(source, p0, target.parent, edge, edge.sourceAnchorCorrection);\n        const targetAnchor = this.getTranslatedAnchor(target, pn, source.parent, edge, edge.targetAnchorCorrection);\n\n        result[0] = { kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y };\n        result[result.length - 1] = { kind: 'target', x: targetAnchor.x, y: targetAnchor.y };\n\n        return result;\n    }\n\n    private createDefaultBezierHandles(relH1: Point, relH2: Point): [Point, Point] {\n        const h1 = {\n            x: relH1.x - BezierEdgeRouter.DEFAULT_BEZIER_HANDLE_OFFSET,\n            y: relH1.y\n        };\n        const h2 = {\n            x: relH2.x + BezierEdgeRouter.DEFAULT_BEZIER_HANDLE_OFFSET,\n            y: relH2.y\n        };\n        return [ h1, h2 ];\n    }\n\n    createRoutingHandles(edge: SRoutableElementImpl): void {\n        // route ensure there are at least 2 routed points\n        this.route(edge);\n\n        this.rebuildHandles(edge);\n    }\n\n    private rebuildHandles(edge: SRoutableElementImpl) {\n        this.addHandle(edge, 'source', 'routing-point', -2);\n        this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', 0);\n        this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', 0);\n        const rpCount = edge.routingPoints.length;\n\n        if (rpCount > 2) {\n            for (let i = 1; i < rpCount - 1; i += 3) {\n                this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', i);\n                // Add two circle for add/remove segments\n                this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', i + 1);\n                this.addHandle(edge, 'bezier-junction', 'routing-point', i + 1);\n                this.addHandle(edge, 'bezier-remove', 'bezier-remove-routing-point', i + 1);\n                this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', i + 2);\n\n                // re-position control-pairs\n                this.moveBezierControlPair(edge.routingPoints[i], i, edge);\n            }\n        }\n        this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', rpCount - 1);\n        this.addHandle(edge, 'target', 'routing-point', -1);\n    }\n\n    getInnerHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl) {\n       if (handle.kind === 'bezier-control-before' || handle.kind === 'bezier-junction' || handle.kind === 'bezier-control-after') {\n            for (let i = 0; i < route.length; i++) {\n                const p = route[i];\n                if (p.pointIndex === handle.pointIndex && p.kind === handle.kind)\n                    return p;\n            }\n        } else if (handle.kind === 'bezier-add') {\n            const ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);\n            return { x: ctrlPoint.x, y: ctrlPoint.y + 12.5};\n        } else if (handle.kind === 'bezier-remove') {\n            const ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);\n            return { x: ctrlPoint.x, y: ctrlPoint.y - 12.5};\n        }\n        return undefined;\n    }\n\n    protected findBezierControl(edge: SRoutableElementImpl, route: RoutedPoint[], handleIndex: number): Point {\n        let result: Point = { x: route[0].x, y: route[0].y };\n        if (handleIndex > 0) {\n            for (const rp of route) {\n                if (rp.pointIndex !== undefined && rp.pointIndex === handleIndex && rp.kind === 'bezier-junction') {\n                    result = { x: rp.x, y: rp.y };\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    override applyHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void {\n        moves.forEach(move => {\n            const handle = move.handle;\n            let orgPosition = { x: 0, y: 0 };\n            let relativePos, newControlPos, ctrlPointIndex;\n            const moveToPos = move.toPosition;\n\n            switch (handle.kind) {\n                case 'bezier-control-before':\n                case 'bezier-control-after':\n                    // find potential other handle/rp and move\n                    this.moveBezierControlPair(moveToPos, move.handle.pointIndex, edge);\n                    break;\n                case 'bezier-junction':\n                    const index = handle.pointIndex;\n                    if (index >= 0 && index < edge.routingPoints.length) {\n                        ctrlPointIndex = index - 1;\n                        orgPosition = edge.routingPoints[index];\n                        relativePos = edge.routingPoints[ctrlPointIndex];\n                        newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\n                        edge.routingPoints[index] = moveToPos;\n                        this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\n                    }\n                    break;\n                case 'source':\n                    ctrlPointIndex = 0;\n                    relativePos = edge.routingPoints[ctrlPointIndex];\n\n                    if (!(edge.source instanceof SDanglingAnchorImpl)) {\n                        // detach source\n                        const anchor = new SDanglingAnchorImpl();\n                        anchor.id = edge.id + '_dangling-source';\n                        anchor.original = edge.source;\n                        anchor.position = move.toPosition;\n                        handle.root.add(anchor);\n                        handle.danglingAnchor = anchor;\n                        edge.sourceId = anchor.id;\n                        if (edge.source) orgPosition = edge.source.position;\n                    } else if (handle.danglingAnchor) {\n                        orgPosition = handle.danglingAnchor.position;\n                        handle.danglingAnchor.position = moveToPos;\n                    }\n                    newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\n                    this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\n                    break;\n                case 'target':\n                    ctrlPointIndex = edge.routingPoints.length - 1;\n                    relativePos = edge.routingPoints[ctrlPointIndex];\n\n                    if (!(edge.target instanceof SDanglingAnchorImpl)) {\n                        // detach target\n                        const anchor = new SDanglingAnchorImpl();\n                        anchor.id = edge.id + '_dangling-target';\n                        anchor.original = edge.target;\n                        anchor.position = moveToPos;\n                        handle.root.add(anchor);\n                        handle.danglingAnchor = anchor;\n                        edge.targetId = anchor.id;\n                        if (edge.target) orgPosition = edge.target.position;\n                    } else if (handle.danglingAnchor) {\n                        orgPosition = handle.danglingAnchor.position;\n                        handle.danglingAnchor.position = moveToPos;\n                    }\n                    newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);\n                    this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    protected applyInnerHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]): void {\n        // not required\n    }\n\n    protected getOptions(edge: SRoutableElementImpl): LinearRouteOptions {\n        return  {\n            minimalPointDistance: 2,\n            standardDistance: 0.1,\n            selfEdgeOffset: 20\n        };\n    }\n\n    private calcRelativeMove(oldPos: Point, newPos: Point, relativePoint: Point): Point {\n        return {\n            x: relativePoint.x - (oldPos.x - newPos.x),\n            y: relativePoint.y - (oldPos.y - newPos.y)\n        };\n    }\n\n    public createNewBezierSegment(index: number, edge: SRoutableElementImpl): void {\n        const routingPoints = edge.routingPoints;\n\n        let bezierJunctionPos, start, end: Point;\n        if (routingPoints.length === 2) {\n            start = routingPoints[index < 0 ? 0 : index];\n            end = routingPoints[routingPoints.length - 1];\n            bezierJunctionPos = centerOfLine(start, end);\n        } else {\n            start = routingPoints[index];\n            end = routingPoints[index + 2];\n            bezierJunctionPos = centerOfLine(start, end);\n        }\n        const [h1, h2] = this.createDefaultBezierHandles(bezierJunctionPos, bezierJunctionPos);\n\n        routingPoints.splice(index + 1, 0, h1);\n        routingPoints.splice(index + 2, 0, bezierJunctionPos);\n        routingPoints.splice(index + 3, 0, h2);\n        // ensure handles are correctly positioned\n        this.moveBezierControlPair(h1, index + 1, edge);\n\n        // simple solution for now: just rebuildHandles\n        edge.removeAll(c => c instanceof SRoutingHandleImpl);\n        this.rebuildHandles(edge);\n    }\n\n    public removeBezierSegment(index: number, edge: SRoutableElementImpl): void {\n        const routingPoints = edge.routingPoints;\n\n        routingPoints.splice(index - 1, 3);\n\n        // simple solution for now: just rebuildHandles\n        edge.removeAll(c => c instanceof SRoutingHandleImpl);\n        this.rebuildHandles(edge);\n    }\n\n    private moveBezierControlPair(newPos: Point, ctrlPointIndex: number, edge: SRoutableElementImpl) {\n        if (ctrlPointIndex >= 0 && ctrlPointIndex < edge.routingPoints.length) {\n            // find neighbors\n            const before = ctrlPointIndex - 1;\n            const after = ctrlPointIndex + 1;\n\n            // this is the first control or the last control => nothing to do further\n            if (before < 0 || after === edge.routingPoints.length) {\n                edge.routingPoints[ctrlPointIndex] = newPos;\n            } else  {\n                // behind bezier-junction\n                if (ctrlPointIndex % 3 === 0) {\n                    this.setBezierMirror(edge, newPos, ctrlPointIndex, false);\n                // before bezier-junction\n                } else if ((ctrlPointIndex + 2) % 3 === 0) {\n                    this.setBezierMirror(edge, newPos, ctrlPointIndex, true);\n                }\n            }\n        }\n    }\n\n    private setBezierMirror(edge: SRoutableElementImpl, newPos: Point, pointIndex: number, before: boolean) {\n        edge.routingPoints[pointIndex] = newPos;\n        const jct = edge.routingPoints[before ? (pointIndex + 1) : (pointIndex - 1)];\n        edge.routingPoints[before ? (pointIndex + 2) : (pointIndex - 2)] = {\n            x: jct.x - (newPos.x - jct.x),\n            y: jct.y - (newPos.y - jct.y)\n        };\n    }\n\n}\n\n/**\n * Reacts on mouseDown events if the target kind is bezier-add or bezier-remove\n */\nexport class BezierMouseListener extends MouseListener {\n\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): Action[] {\n        const result = [];\n        if (target instanceof SRoutingHandleImpl && (target.kind === 'bezier-add' || target.kind === 'bezier-remove')) {\n            if (target.type === 'bezier-create-routing-point') {\n                result.push(AddRemoveBezierSegmentAction.create('add', target.id));\n            } else if (target.type === 'bezier-remove-routing-point') {\n                result.push(AddRemoveBezierSegmentAction.create('remove', target.id));\n            }\n        }\n        return result;\n    }\n};\n\nexport interface AddRemoveBezierSegmentAction extends Action {\n    kind: typeof AddRemoveBezierSegmentAction.KIND\n    targetId: string\n    actionTask: 'add' | 'remove'\n}\n\nexport namespace AddRemoveBezierSegmentAction {\n    export const KIND = 'addRemoveBezierSegment';\n    export function create(actionTask: 'add' | 'remove', targetId: string): AddRemoveBezierSegmentAction {\n        return {\n            kind: KIND,\n            actionTask,\n            targetId\n        };\n    }\n}\n\n@injectable()\nexport class AddRemoveBezierSegmentCommand extends Command {\n    static readonly KIND = AddRemoveBezierSegmentAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected readonly action: AddRemoveBezierSegmentAction,\n        @inject(EdgeRouterRegistry) protected readonly edgeRouterRegistry?: EdgeRouterRegistry) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const index = context.root.index;\n        const target = index.getById(this.action.targetId);\n\n        if (this.edgeRouterRegistry && target instanceof SRoutingHandleImpl) {\n            const raw = this.edgeRouterRegistry.get((target.parent as SRoutableElementImpl).routerKind);\n            if (raw instanceof BezierEdgeRouter) {\n                const router = raw;\n\n                for (const child of context.root.children) {\n                    if (child.id === target.parent.id) {\n                        if (this.action.actionTask === 'add') {\n                            router.createNewBezierSegment(target.pointIndex, child as SEdgeImpl);\n                        } else if (this.action.actionTask === 'remove') {\n                            router.removeBezierSegment(target.pointIndex, child as SEdgeImpl);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        throw new Error('Method not implemented.');\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        throw new Error('Method not implemented.');\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ELLIPTIC_ANCHOR_KIND, RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND } from \"./anchor\";\nimport { injectable } from \"inversify\";\nimport { DiamondAnchor, EllipseAnchor, RectangleAnchor } from './polyline-anchors';\nimport { BezierEdgeRouter } from './bezier-edge-router';\n\n@injectable()\nexport class BezierEllipseAnchor extends EllipseAnchor {\n\n    override get kind() {\n        return BezierEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\n    }\n}\n\n@injectable()\nexport class BezierRectangleAnchor extends RectangleAnchor {\n\n    override get kind() {\n        return BezierEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\n    }\n}\n\n@injectable()\nexport class BezierDiamondAnchor extends DiamondAnchor {\n\n    override get kind() {\n        return BezierEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { almostEquals, Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { translatePoint } from \"../../base/model/smodel-utils\";\nimport { ResolvedHandleMove } from \"../move/move\";\nimport { DefaultAnchors, AbstractEdgeRouter, LinearRouteOptions, Side } from \"./abstract-edge-router\";\nimport { SRoutableElementImpl, RoutingHandleKind, SRoutingHandleImpl } from \"./model\";\nimport { RoutedPoint } from \"./routing\";\n\nexport interface ManhattanRouterOptions extends LinearRouteOptions {\n    standardDistance: number;\n}\n\nexport class ManhattanEdgeRouter extends AbstractEdgeRouter {\n\n    static readonly KIND = 'manhattan';\n\n    get kind() {\n        return ManhattanEdgeRouter.KIND;\n    }\n\n    protected getOptions(edge: SRoutableElementImpl): ManhattanRouterOptions {\n        return {\n            standardDistance: 20,\n            minimalPointDistance: 3,\n            selfEdgeOffset: 0.25\n        };\n    }\n\n    route(edge: SRoutableElementImpl): RoutedPoint[] {\n        if (!edge.source || !edge.target)\n            return [];\n        const routedCorners = this.createRoutedCorners(edge);\n        const sourceRefPoint = routedCorners[0]\n            || translatePoint(Bounds.center(edge.target.bounds), edge.target.parent, edge.parent);\n        const sourceAnchor = this.getTranslatedAnchor(edge.source, sourceRefPoint, edge.parent, edge, edge.sourceAnchorCorrection);\n        const targetRefPoint = routedCorners[routedCorners.length - 1]\n            || translatePoint(Bounds.center(edge.source.bounds), edge.source.parent, edge.parent);\n        const targetAnchor = this.getTranslatedAnchor(edge.target, targetRefPoint, edge.parent, edge, edge.targetAnchorCorrection);\n        if (!sourceAnchor || !targetAnchor)\n            return [];\n        const routedPoints: RoutedPoint[] = [];\n        routedPoints.push({ kind: 'source', ...sourceAnchor});\n        routedCorners.forEach(corner => routedPoints.push(corner));\n        routedPoints.push({ kind: 'target', ...targetAnchor});\n        return routedPoints;\n    }\n\n    protected createRoutedCorners(edge: SRoutableElementImpl): RoutedPoint[] {\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, 'source');\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, 'target');\n        if (edge.routingPoints.length > 0) {\n            const routingPointsCopy = edge.routingPoints.slice();\n            this.cleanupRoutingPoints(edge, routingPointsCopy, false, true);\n            if (routingPointsCopy.length > 0)\n                return routingPointsCopy.map((routingPoint, index) => {\n                    return <RoutedPoint> { kind: 'linear', pointIndex: index, ...routingPoint};\n                });\n        }\n        const options = this.getOptions(edge);\n        const corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\n        return corners.map(corner => {\n            return <RoutedPoint> { kind: 'linear', ...corner };\n        });\n    }\n\n    createRoutingHandles(edge: SRoutableElementImpl) {\n        const routedPoints = this.route(edge);\n        this.commitRoute(edge, routedPoints);\n        if (routedPoints.length > 0) {\n            this.addHandle(edge, 'source', 'routing-point', -2);\n            for (let i = 0; i < routedPoints.length - 1; ++i)\n                this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i - 1);\n            this.addHandle(edge, 'target', 'routing-point', routedPoints.length - 2);\n        }\n    }\n\n    protected getInnerHandlePosition(edge: SRoutableElementImpl, route: RoutedPoint[], handle: SRoutingHandleImpl) {\n        const fraction = this.getFraction(handle.kind);\n        if (fraction !== undefined) {\n            const { start, end } = this.findRouteSegment(edge, route, handle.pointIndex);\n            if (start !== undefined && end !== undefined)\n                return Point.linear(start, end, fraction);\n        }\n        return undefined;\n    }\n\n    protected getFraction(kind: RoutingHandleKind): number | undefined {\n        switch (kind) {\n            case 'manhattan-50%': return 0.5;\n            default: return undefined;\n        }\n    }\n\n    protected applyInnerHandleMoves(edge: SRoutableElementImpl, moves: ResolvedHandleMove[]) {\n        const route = this.route(edge);\n        const routingPoints = edge.routingPoints;\n        const minimalPointDistance = this.getOptions(edge).minimalPointDistance;\n        moves.forEach(move => {\n            const handle = move.handle;\n            const index = handle.pointIndex;\n            const correctedX = this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);\n            const correctedY = this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);\n            switch (handle.kind) {\n                case 'manhattan-50%':\n                    if (index < 0) {\n                        if (routingPoints.length === 0) {\n                            routingPoints.push({ x: correctedX, y: correctedY });\n                            handle.pointIndex = 0;\n                        } else if (almostEquals(route[0].x, route[1].x)) {\n                            this.alignX(routingPoints, 0, correctedX);\n                        } else {\n                            this.alignY(routingPoints, 0, correctedY);\n                        }\n                    } else if (index < routingPoints.length - 1) {\n                        if (almostEquals(routingPoints[index].x, routingPoints[index + 1].x)) {\n                            this.alignX(routingPoints, index, correctedX);\n                            this.alignX(routingPoints, index + 1, correctedX);\n                        } else {\n                            this.alignY(routingPoints, index, correctedY);\n                            this.alignY(routingPoints, index + 1, correctedY);\n                        }\n                    } else {\n                        if (almostEquals(route[route.length - 2].x, route[route.length - 1].x)) {\n                            this.alignX(routingPoints, routingPoints.length - 1, correctedX);\n                        } else {\n                            this.alignY(routingPoints, routingPoints.length - 1, correctedY);\n                        }\n                    }\n                    break;\n            }\n        });\n    }\n\n    protected correctX(routingPoints: Point[], index: number, x: number, minimalPointDistance: number) {\n        if (index > 0 && Math.abs(x - routingPoints[index - 1].x) < minimalPointDistance)\n            return routingPoints[index - 1].x;\n        else if (index < routingPoints.length - 2 && Math.abs(x - routingPoints[index + 2].x) < minimalPointDistance)\n            return routingPoints[index + 2].x;\n        else\n            return x;\n    }\n\n    protected alignX(routingPoints: Point[], index: number, x: number) {\n        if (index >= 0 && index < routingPoints.length)\n            routingPoints[index] = {\n                x,\n                y: routingPoints[index].y\n            };\n    }\n\n    protected correctY(routingPoints: Point[], index: number, y: number, minimalPointDistance: number) {\n        if (index > 0 && Math.abs(y - routingPoints[index - 1].y) < minimalPointDistance)\n            return routingPoints[index - 1].y;\n        else if (index < routingPoints.length - 2 && Math.abs(y - routingPoints[index + 2].y) < minimalPointDistance)\n            return routingPoints[index + 2].y;\n        else\n            return y;\n    }\n\n    protected alignY(routingPoints: Point[], index: number, y: number) {\n        if (index >= 0 && index < routingPoints.length)\n            routingPoints[index] = {\n                x: routingPoints[index].x,\n                y\n            };\n    }\n\n    override cleanupRoutingPoints(edge: SRoutableElementImpl, routingPoints: Point[], updateHandles: boolean, addRoutingPoints: boolean) {\n        const sourceAnchors = new DefaultAnchors(edge.source!, edge.parent, \"source\");\n        const targetAnchors = new DefaultAnchors(edge.target!, edge.parent, \"target\");\n        if (this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors))\n            return;\n        // delete leading RPs inside the bounds of the source\n        for (let i = 0; i < routingPoints.length; ++i)\n            if (Bounds.includes(sourceAnchors.bounds, routingPoints[i])) {\n                routingPoints.splice(0, 1);\n                if (updateHandles) {\n                    this.removeHandle(edge, -1);\n                }\n            } else {\n                break;\n            }\n        // delete trailing RPs inside the bounds of the target\n        for (let i = routingPoints.length - 1; i >= 0; --i)\n            if (Bounds.includes(targetAnchors.bounds, routingPoints[i])) {\n                routingPoints.splice(i, 1);\n                if (updateHandles) {\n                    this.removeHandle(edge, i);\n                }\n            } else {\n                break;\n        }\n        if (routingPoints.length >= 2) {\n            const options = this.getOptions(edge);\n            for (let i = routingPoints.length - 2; i >= 0; --i) {\n                if (Point.manhattanDistance(routingPoints[i], routingPoints[i + 1]) < options.minimalPointDistance) {\n                    routingPoints.splice(i, 2);\n                    --i;\n                    if (updateHandles) {\n                        this.removeHandle(edge, i - 1);\n                        this.removeHandle(edge, i);\n                    }\n                }\n            }\n        }\n        if (addRoutingPoints) {\n            this.addAdditionalCorner(edge, routingPoints, sourceAnchors, targetAnchors, updateHandles);\n            this.addAdditionalCorner(edge, routingPoints, targetAnchors, sourceAnchors, updateHandles);\n            this.manhattanify(edge, routingPoints);\n        }\n    }\n\n    protected removeHandle(edge: SRoutableElementImpl, pointIndex: number) {\n        const toBeRemoved: SRoutingHandleImpl[] = [];\n        edge.children.forEach(child => {\n            if (child instanceof SRoutingHandleImpl) {\n                if (child.pointIndex > pointIndex)\n                    --child.pointIndex;\n                else if (child.pointIndex === pointIndex)\n                    toBeRemoved.push(child);\n            }\n        });\n        toBeRemoved.forEach(child => edge.remove(child));\n    }\n\n    protected addAdditionalCorner(edge: SRoutableElementImpl, routingPoints: Point[], currentAnchors: DefaultAnchors, otherAnchors: DefaultAnchors, updateHandles: boolean) {\n        if (routingPoints.length === 0)\n            return;\n        const refPoint = currentAnchors.kind === 'source' ? routingPoints[0] : routingPoints[routingPoints.length - 1];\n        const index = currentAnchors.kind === 'source' ? 0 : routingPoints.length;\n        const shiftIndex = index - (currentAnchors.kind === 'source' ? 1 : 0);\n        let isHorizontal: boolean;\n        if (routingPoints.length > 1) {\n            isHorizontal = index === 0\n            ? almostEquals(routingPoints[0].x, routingPoints[1].x)\n            : almostEquals(routingPoints[routingPoints.length - 1].x, routingPoints[routingPoints.length - 2].x);\n        } else {\n            const nearestSide = otherAnchors.getNearestSide(refPoint);\n            isHorizontal = nearestSide === Side.TOP || nearestSide === Side.BOTTOM;\n        }\n        if (isHorizontal) {\n            if (refPoint.y < currentAnchors.get(Side.TOP).y || refPoint.y > currentAnchors.get(Side.BOTTOM).y) {\n                const newPoint = { x: currentAnchors.get(Side.TOP).x, y: refPoint.y };\n                routingPoints.splice(index, 0, newPoint);\n                if (updateHandles) {\n                    edge.children.forEach(child => {\n                        if (child instanceof SRoutingHandleImpl && child.pointIndex >= shiftIndex)\n                            ++child.pointIndex;\n                    });\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);\n                }\n            }\n        } else {\n            if (refPoint.x < currentAnchors.get(Side.LEFT).x || refPoint.x > currentAnchors.get(Side.RIGHT).x) {\n                const newPoint = { x: refPoint.x, y: currentAnchors.get(Side.LEFT).y };\n                routingPoints.splice(index, 0, newPoint);\n                if (updateHandles) {\n                    edge.children.forEach(child => {\n                        if (child instanceof SRoutingHandleImpl && child.pointIndex >= shiftIndex)\n                            ++child.pointIndex;\n                    });\n                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * Add artificial routing points to keep all angles rectilinear.\n     *\n     * This makes edge morphing look a lot smoother, where RP positions are interpolated\n     * linearly probably resulting in non-rectilinear angles. We don't add handles for\n     * these additional RPs.\n     */\n    protected manhattanify(edge: SRoutableElementImpl, routingPoints: Point[]) {\n        for (let i = 1; i < routingPoints.length; ++i) {\n            const isVertical = Math.abs(routingPoints[i - 1].x - routingPoints[i].x) < 1;\n            const isHorizontal = Math.abs(routingPoints[i - 1].y - routingPoints[i].y) < 1;\n            if (!isVertical && !isHorizontal) {\n                routingPoints.splice(i, 0, {\n                    x: routingPoints[i - 1].x,\n                    y: routingPoints[i].y\n                });\n                ++i;\n            }\n        }\n    }\n\n    protected override calculateDefaultCorners(edge: SRoutableElementImpl, sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors, options: ManhattanRouterOptions): Point[] {\n        const selfEdge = super.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);\n        if (selfEdge.length > 0)\n            return selfEdge;\n        const bestAnchors = this.getBestConnectionAnchors(edge, sourceAnchors, targetAnchors, options);\n        const sourceSide = bestAnchors.source;\n        const targetSide = bestAnchors.target;\n        const corners: Point[] = [];\n        const startPoint = sourceAnchors.get(sourceSide);\n        let endPoint = targetAnchors.get(targetSide);\n        switch (sourceSide) {\n            case Side.RIGHT:\n                switch (targetSide) {\n                    case Side.BOTTOM:\n                        corners.push({ x: endPoint.x, y: startPoint.y });\n                        break;\n                    case Side.TOP:\n                        corners.push({ x: endPoint.x, y: startPoint.y });\n                        break;\n                    case Side.RIGHT:\n                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: startPoint.y });\n                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: endPoint.y });\n                        break;\n                    case Side.LEFT:\n                        if (endPoint.y !== startPoint.y) {\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });\n                        }\n                        break;\n                }\n                break;\n            case Side.LEFT:\n                switch (targetSide) {\n                    case Side.BOTTOM:\n                        corners.push({ x: endPoint.x, y: startPoint.y });\n                        break;\n                    case Side.TOP:\n                        corners.push({ x: endPoint.x, y: startPoint.y });\n                        break;\n                    default:\n                        endPoint = targetAnchors.get(Side.RIGHT);\n                        if (endPoint.y !== startPoint.y) {\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });\n                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });\n                        }\n                        break;\n                }\n                break;\n            case Side.TOP:\n                switch (targetSide) {\n                    case Side.RIGHT:\n                        if ((endPoint.x - startPoint.x) > 0) {\n                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });\n                        } else {\n                            corners.push({ x: startPoint.x, y: endPoint.y });\n                        }\n                        break;\n                    case Side.LEFT:\n                        if ((endPoint.x - startPoint.x) < 0) {\n                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });\n                        } else {\n                            corners.push({ x: startPoint.x, y: endPoint.y });\n                        }\n                        break;\n                    case Side.TOP:\n                        corners.push({ x: startPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });\n                        corners.push({ x: endPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });\n                        break;\n                    case Side.BOTTOM:\n                        if (endPoint.x !== startPoint.x) {\n                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });\n                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });\n                        }\n                        break;\n                }\n                break;\n            case Side.BOTTOM:\n                switch (targetSide) {\n                    case Side.RIGHT:\n                        if ((endPoint.x - startPoint.x) > 0) {\n                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });\n                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });\n                        } else {\n                            corners.push({ x: startPoint.x, y: endPoint.y });\n                        }\n                        break;\n                    case Side.LEFT:\n                        if ((endPoint.x - startPoint.x) < 0) {\n                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });\n                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });\n                        } else {\n                            corners.push({ x: startPoint.x, y: endPoint.y });\n                        }\n                        break;\n                    default:\n                        endPoint = targetAnchors.get(Side.TOP);\n                        if (endPoint.x !== startPoint.x) {\n                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });\n                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });\n                        }\n                        break;\n                }\n                break;\n        }\n        return corners;\n    }\n\n    protected getBestConnectionAnchors(edge: SRoutableElementImpl,\n                                        sourceAnchors: DefaultAnchors, targetAnchors: DefaultAnchors,\n                                        options: ManhattanRouterOptions): { source: Side, target: Side } {\n        // distance is enough\n        let sourcePoint = sourceAnchors.get(Side.RIGHT);\n        let targetPoint = targetAnchors.get(Side.LEFT);\n        if ((targetPoint.x - sourcePoint.x) > options.standardDistance)\n            return { source: Side.RIGHT, target: Side.LEFT };\n\n        sourcePoint = sourceAnchors.get(Side.LEFT);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if ((sourcePoint.x - targetPoint.x) > options.standardDistance)\n            return { source: Side.LEFT, target: Side.RIGHT };\n\n        sourcePoint = sourceAnchors.get(Side.TOP);\n        targetPoint = targetAnchors.get(Side.BOTTOM);\n        if ((sourcePoint.y - targetPoint.y) > options.standardDistance)\n            return { source: Side.TOP, target: Side.BOTTOM };\n\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\n        targetPoint = targetAnchors.get(Side.TOP);\n        if ((targetPoint.y - sourcePoint.y) > options.standardDistance)\n            return { source: Side.BOTTOM, target: Side.TOP };\n\n        // One additional point\n        sourcePoint = sourceAnchors.get(Side.RIGHT);\n        targetPoint = targetAnchors.get(Side.TOP);\n        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))\n            return { source: Side.RIGHT, target: Side.TOP };\n\n        targetPoint = targetAnchors.get(Side.BOTTOM);\n        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))\n            return { source: Side.RIGHT, target: Side.BOTTOM };\n\n        sourcePoint = sourceAnchors.get(Side.LEFT);\n        targetPoint = targetAnchors.get(Side.BOTTOM);\n        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))\n            return { source: Side.LEFT, target: Side.BOTTOM };\n\n        targetPoint = targetAnchors.get(Side.TOP);\n        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))\n            return { source: Side.LEFT, target: Side.TOP };\n\n        sourcePoint = sourceAnchors.get(Side.TOP);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))\n            return { source: Side.TOP, target: Side.RIGHT };\n\n        targetPoint = targetAnchors.get(Side.LEFT);\n        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))\n            return { source: Side.TOP, target: Side.LEFT };\n\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))\n            return { source: Side.BOTTOM, target: Side.RIGHT };\n\n        targetPoint = targetAnchors.get(Side.LEFT);\n        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))\n            return { source: Side.BOTTOM, target: Side.LEFT };\n\n        // Two points\n        // priority NN >> EE >> NE >> NW >> SE >> SW\n        sourcePoint = sourceAnchors.get(Side.TOP);\n        targetPoint = targetAnchors.get(Side.TOP);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint)) {\n            if ((sourcePoint.y - targetPoint.y) < 0) {\n                if (Math.abs(sourcePoint.x - targetPoint.x) > ((sourceAnchors.bounds.width + options.standardDistance) / 2))\n                    return { source: Side.TOP, target: Side.TOP };\n            } else {\n                if (Math.abs(sourcePoint.x - targetPoint.x) > (targetAnchors.bounds.width / 2))\n                    return { source: Side.TOP, target: Side.TOP };\n            }\n        }\n\n        sourcePoint = sourceAnchors.get(Side.RIGHT);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint)) {\n            if ((sourcePoint.x - targetPoint.x) > 0) {\n                if (Math.abs(sourcePoint.y - targetPoint.y) > ((sourceAnchors.bounds.height + options.standardDistance) / 2))\n                    return { source: Side.RIGHT, target: Side.RIGHT };\n            } else if (Math.abs(sourcePoint.y - targetPoint.y) > (targetAnchors.bounds.height / 2))\n                return { source: Side.RIGHT, target: Side.RIGHT };\n        }\n\n        // Secondly, judge NE NW is available\n        sourcePoint = sourceAnchors.get(Side.TOP);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\n            return { source: Side.TOP, target: Side.RIGHT };\n\n        targetPoint = targetAnchors.get(Side.LEFT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\n            return { source: Side.TOP, target: Side.LEFT };\n\n        // Finally, judge SE SW is available\n        sourcePoint = sourceAnchors.get(Side.BOTTOM);\n        targetPoint = targetAnchors.get(Side.RIGHT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\n            return { source: Side.BOTTOM, target: Side.RIGHT };\n\n        targetPoint = targetAnchors.get(Side.LEFT);\n        if (!Bounds.includes(targetAnchors.bounds, sourcePoint) && !Bounds.includes(sourceAnchors.bounds, targetPoint))\n            return { source: Side.BOTTOM, target: Side.LEFT };\n\n        // Only to return to the\n        return { source: Side.RIGHT, target: Side.BOTTOM };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Bounds, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { Line, PointToPointLine, intersection } from \"../../utils/geometry\";\nimport { RECTANGULAR_ANCHOR_KIND, IAnchorComputer, DIAMOND_ANCHOR_KIND, ELLIPTIC_ANCHOR_KIND } from \"./anchor\";\nimport { ManhattanEdgeRouter } from \"./manhattan-edge-router\";\nimport { SConnectableElementImpl } from \"./model\";\nimport { injectable } from \"inversify\";\n\n@injectable()\nexport class ManhattanRectangularAnchor implements IAnchorComputer {\n\n    static KIND = ManhattanEdgeRouter.KIND + ':' + RECTANGULAR_ANCHOR_KIND;\n\n    get kind() {\n        return ManhattanRectangularAnchor.KIND;\n    }\n\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number): Point {\n        const b = connectable.bounds;\n        if (b.width <= 0 || b.height <= 0) {\n            return b;\n        }\n        const bounds: Bounds = {\n            x: b.x - offset,\n            y: b.y - offset,\n            width: b.width + 2 * offset,\n            height: b.height + 2 * offset\n        };\n        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {\n            if (refPoint.y < bounds.y + 0.5 * bounds.height)\n            return { x: refPoint.x, y: bounds.y };\n            else\n            return { x: refPoint.x, y: bounds.y + bounds.height };\n        }\n        if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {\n            if (refPoint.x < bounds.x + 0.5 * bounds.width)\n            return { x: bounds.x, y: refPoint.y };\n            else\n            return { x: bounds.x + bounds.width, y: refPoint.y };\n        }\n        return Bounds.center(bounds);\n    }\n}\n\n@injectable()\nexport class ManhattanDiamondAnchor implements IAnchorComputer {\n\n    static KIND = ManhattanEdgeRouter.KIND + ':' + DIAMOND_ANCHOR_KIND;\n\n    get kind() {\n        return ManhattanDiamondAnchor.KIND;\n    }\n\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number = 0): Point {\n        const b = connectable.bounds;\n        if (b.width <= 0 || b.height <= 0) {\n            return b;\n        }\n        const bounds = {\n            x: b.x - offset,\n            y: b.y - offset,\n            width: b.width + 2 * offset,\n            height: b.height + 2 * offset\n        };\n        const c = Bounds.center(bounds);\n\n        let outline: Line | undefined = undefined;\n        let refLine: Line | undefined = undefined;\n        if (refPoint.x >= bounds.x && refPoint.x <= bounds.x + bounds.width) {\n            if (bounds.x + 0.5 * bounds.width >= refPoint.x) {\n                refLine = new PointToPointLine(refPoint, { x: refPoint.x, y: c.y });\n                if (refPoint.y < c.y)\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });\n                else\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\n            } else {\n                refLine = new PointToPointLine(refPoint, { x: refPoint.x, y: c.y });\n                if (refPoint.y < c.y)\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });\n                else\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\n            }\n        } else if (refPoint.y >= bounds.y && refPoint.y <= bounds.y + bounds.height) {\n            if (bounds.y + 0.5 * bounds.height >= refPoint.y) {\n                refLine = new PointToPointLine(refPoint, { x: c.x , y: refPoint.y });\n                if (refPoint.x < c.x)\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });\n                else\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });\n            } else {\n                refLine = new PointToPointLine(refPoint, { x: c.x , y: refPoint.y });\n                if (refPoint.x < c.x)\n                    outline = new PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\n                else\n                    outline = new PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });\n            }\n        }\n        if (!!refLine && !!outline)\n            return intersection(outline, refLine);\n        else\n            return c;\n    }\n}\n\n@injectable()\nexport class ManhattanEllipticAnchor implements IAnchorComputer {\n\n    static KIND = ManhattanEdgeRouter.KIND + ':' + ELLIPTIC_ANCHOR_KIND;\n\n    get kind() {\n        return ManhattanEllipticAnchor.KIND;\n    }\n\n    getAnchor(connectable: SConnectableElementImpl, refPoint: Point, offset: number = 0): Point {\n        const b = connectable.bounds;\n        if (b.width <= 0 || b.height <= 0) {\n            return b;\n        }\n        const bounds = {\n            x: b.x - offset,\n            y: b.y - offset,\n            width: b.width + 2 * offset,\n            height: b.height + 2 * offset\n        };\n        const c = Bounds.center(bounds);\n        const refRelative = Point.subtract(refPoint, c);\n        let x = c.x;\n        let y = c.y;\n        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {\n            x += refRelative.x;\n            const dy = 0.5 * bounds.height * Math.sqrt(1 - (refRelative.x * refRelative.x) / (0.25 * bounds.width * bounds.width));\n            if (refRelative.y < 0)\n                y -= dy;\n            else\n                y += dy;\n        } else if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {\n            y += refRelative.y;\n            const dx = 0.5 * bounds.width * Math.sqrt(1 - (refRelative.y * refRelative.y) / (0.25 * bounds.height * bounds.height));\n            if (refRelative.x < 0)\n                x -= dx;\n            else\n                x += dx;\n        }\n        return { x, y };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { IViewArgs, IView, RenderingContext } from '../../base/views/view';\nimport { SRoutableElementImpl, getAbsoluteRouteBounds } from './model';\n\n@injectable()\nexport abstract class RoutableView implements IView {\n    /**\n     * Check whether the given model element is in the current viewport. Use this method\n     * in your `render` implementation to skip rendering in case the element is not visible.\n     * This can greatly enhance performance for large models.\n     */\n    isVisible(model: Readonly<SRoutableElementImpl>, route: Point[], context: RenderingContext): boolean {\n        if (context.targetKind === 'hidden') {\n            // Don't hide any element for hidden rendering\n            return true;\n        }\n        if (route.length === 0) {\n            // We should hide only if we know the element's route\n            return true;\n        }\n        const ab = getAbsoluteRouteBounds(model, route);\n        const canvasBounds = model.root.canvasBounds;\n        return ab.x <= canvasBounds.width\n            && ab.x + ab.width >= 0\n            && ab.y <= canvasBounds.height\n            && ab.y + ab.height >= 0;\n    }\n\n    abstract render(model: Readonly<SRoutableElementImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined;\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from \"inversify\";\nimport { ResponseAction } from \"sprotty-protocol/lib/actions\";\nimport { TYPES } from \"../types\";\nimport { SystemCommand, CommandExecutionContext, CommandReturn } from \"./command\";\nimport { IActionDispatcher } from \"../actions/action-dispatcher\";\n\n/**\n * A command that does not modify the internal model, but retrieves information\n * from it by dispatching a response action.\n */\n@injectable()\nexport abstract class ModelRequestCommand extends SystemCommand {\n\n    @inject(TYPES.IActionDispatcher) protected actionDispatcher: IActionDispatcher;\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const result = this.retrieveResult(context);\n        this.actionDispatcher.dispatch(result);\n        return { model: context.root, modelChanged: false };\n    }\n\n    protected abstract retrieveResult(context: CommandExecutionContext): ResponseAction;\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return { model: context.root, modelChanged: false };\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return { model: context.root, modelChanged: false };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject } from 'inversify';\nimport { Viewport } from 'sprotty-protocol/lib/model';\nimport { Action, CenterAction, SetViewportAction } from 'sprotty-protocol/lib/actions';\nimport { almostEquals, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { SModelExtension } from '../../base/model/smodel-extension';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { isViewport } from './model';\nimport { isMoveable } from '../move/model';\nimport { SRoutingHandleImpl } from '../routing/model';\nimport { getModelBounds } from '../projection/model';\nimport { hitsMouseEvent } from '../../utils/browser';\nimport { TYPES } from '../../base/types';\nimport { ViewerOptions } from '../../base/views/viewer-options';\n\nexport class ScrollMouseListener extends MouseListener {\n\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n\n    protected lastScrollPosition: Point |undefined;\n    protected scrollbar: HTMLElement | undefined;\n    protected scrollbarMouseDownTimeout: number | undefined;\n    protected scrollbarMouseDownDelay = 200;\n\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        const moveable = findParentByFeature(target, isMoveable);\n        if (moveable === undefined && !(target instanceof SRoutingHandleImpl)) {\n            const viewport = findParentByFeature(target, isViewport);\n            if (viewport) {\n                this.lastScrollPosition = { x: event.pageX, y: event.pageY };\n                this.scrollbar = this.getScrollbar(event);\n                if (this.scrollbar) {\n                    window.clearTimeout(this.scrollbarMouseDownTimeout);\n                    return this.moveScrollBar(viewport, event, this.scrollbar, true)\n                        .map(action => new Promise(resolve => {\n                            this.scrollbarMouseDownTimeout = window.setTimeout(() => resolve(action), this.scrollbarMouseDownDelay);\n                        }));\n                }\n            } else {\n                this.lastScrollPosition = undefined;\n                this.scrollbar = undefined;\n            }\n        }\n        return [];\n    }\n\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): Action[] {\n        if (event.buttons === 0) {\n            return this.mouseUp(target, event);\n        }\n        if (this.scrollbar) {\n            window.clearTimeout(this.scrollbarMouseDownTimeout);\n            const viewport = findParentByFeature(target, isViewport);\n            if (viewport) {\n                return this.moveScrollBar(viewport, event, this.scrollbar);\n            }\n        }\n        if (this.lastScrollPosition) {\n            const viewport = findParentByFeature(target, isViewport);\n            if (viewport) {\n                return this.dragCanvas(viewport, event, this.lastScrollPosition);\n            }\n        }\n        return [];\n    }\n\n    override mouseEnter(target: SModelElementImpl, event: MouseEvent): Action[] {\n        if (target instanceof SModelRootImpl && event.buttons === 0) {\n            this.mouseUp(target, event);\n        }\n        return [];\n    }\n\n    override mouseUp(target: SModelElementImpl, event: MouseEvent): Action[] {\n        this.lastScrollPosition = undefined;\n        this.scrollbar = undefined;\n        return [];\n    }\n\n    override doubleClick(target: SModelElementImpl, event: MouseEvent): Action[] {\n        const viewport = findParentByFeature(target, isViewport);\n        if (viewport) {\n            const scrollbar = this.getScrollbar(event);\n            if (scrollbar) {\n                window.clearTimeout(this.scrollbarMouseDownTimeout);\n                const targetElement = this.findClickTarget(scrollbar, event);\n                let elementId: string | undefined;\n                if (targetElement && targetElement.id.startsWith('horizontal-projection:')) {\n                    elementId = targetElement.id.substring('horizontal-projection:'.length);\n                } else if (targetElement && targetElement.id.startsWith('vertical-projection:')) {\n                    elementId = targetElement.id.substring('vertical-projection:'.length);\n                }\n                if (elementId) {\n                    return [CenterAction.create([elementId], { animate: true, retainZoom: true })];\n                }\n            }\n        }\n        return [];\n    }\n\n    protected dragCanvas(model: SModelRootImpl & Viewport, event: MouseEvent, lastScrollPosition: Point): Action[] {\n        let dx = (event.pageX - lastScrollPosition.x) / model.zoom;\n        if (dx > 0 && almostEquals(model.scroll.x, this.viewerOptions.horizontalScrollLimits.min)\n            || dx < 0 && almostEquals(model.scroll.x, this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom)) {\n            dx = 0;\n        }\n        let dy = (event.pageY - lastScrollPosition.y) / model.zoom;\n        if (dy > 0 && almostEquals(model.scroll.y, this.viewerOptions.verticalScrollLimits.min)\n            || dy < 0 && almostEquals(model.scroll.y, this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom)) {\n            dy = 0;\n        }\n        if (dx === 0 && dy === 0) {\n            return [];\n        }\n        const newViewport: Viewport = {\n            scroll: {\n                x: model.scroll.x - dx,\n                y: model.scroll.y - dy,\n            },\n            zoom: model.zoom\n        };\n        this.lastScrollPosition = { x: event.pageX, y: event.pageY };\n        return [SetViewportAction.create(model.id, newViewport, { animate: false })];\n    }\n\n    protected moveScrollBar(model: SModelRootImpl & Viewport, event: MouseEvent, scrollbar: HTMLElement, animate: boolean = false): Action[] {\n        const modelBounds = getModelBounds(model);\n        if (!modelBounds || model.zoom <= 0) {\n            return [];\n        }\n        const scrollbarRect = scrollbar.getBoundingClientRect();\n        let newScroll: { x: number, y: number };\n        if (this.getScrollbarOrientation(scrollbar) === 'horizontal') {\n            if (scrollbarRect.width <= 0) {\n                return [];\n            }\n            const viewportSize = (model.canvasBounds.width / (model.zoom * modelBounds.width)) * scrollbarRect.width;\n            let position = event.clientX - scrollbarRect.x - viewportSize / 2;\n            if (position < 0) {\n                position = 0;\n            } else if (position > scrollbarRect.width - viewportSize) {\n                position = scrollbarRect.width - viewportSize;\n            }\n            newScroll = {\n                x: modelBounds.x + (position / scrollbarRect.width) * modelBounds.width,\n                y: model.scroll.y\n            };\n            if (newScroll.x < this.viewerOptions.horizontalScrollLimits.min) {\n                newScroll.x = this.viewerOptions.horizontalScrollLimits.min;\n            } else if (newScroll.x > this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom) {\n                newScroll.x = this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom;\n            }\n            if (almostEquals(newScroll.x, model.scroll.x)) {\n                return [];\n            }\n        } else {\n            if (scrollbarRect.height <= 0) {\n                return [];\n            }\n            const viewportSize = (model.canvasBounds.height / (model.zoom * modelBounds.height)) * scrollbarRect.height;\n            let position = event.clientY - scrollbarRect.y - viewportSize / 2;\n            if (position < 0) {\n                position = 0;\n            } else if (position > scrollbarRect.height - viewportSize) {\n                position = scrollbarRect.height - viewportSize;\n            }\n            newScroll = {\n                x: model.scroll.x,\n                y: modelBounds.y + (position / scrollbarRect.height) * modelBounds.height\n            };\n            if (newScroll.y < this.viewerOptions.verticalScrollLimits.min) {\n                newScroll.y = this.viewerOptions.verticalScrollLimits.min;\n            } else if (newScroll.y > this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom) {\n                newScroll.y = this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom;\n            }\n            if (almostEquals(newScroll.y, model.scroll.y)) {\n                return [];\n            }\n        }\n        return [SetViewportAction.create(model.id, { scroll: newScroll, zoom: model.zoom }, { animate })];\n    }\n\n    protected getScrollbar(event: MouseEvent): HTMLElement | undefined {\n        return findViewportScrollbar(event);\n    }\n\n    protected getScrollbarOrientation(scrollbar: HTMLElement): 'horizontal' | 'vertical' {\n        if (scrollbar.classList.contains('horizontal')) {\n            return 'horizontal';\n        } else {\n            return 'vertical';\n        }\n    }\n\n    protected findClickTarget(scrollbar: HTMLElement, event: MouseEvent): HTMLElement | undefined {\n        const matching = Array.from(scrollbar.children).filter(child =>\n            child.id && child.classList.contains('sprotty-projection') && hitsMouseEvent(child, event)\n        ) as HTMLElement[];\n        if (matching.length > 0) {\n            return matching[matching.length - 1];\n        }\n        return undefined;\n    }\n\n}\n\nexport function findViewportScrollbar(event: MouseEvent): HTMLElement | undefined {\n    let element = event.target as HTMLElement | null;\n    while (element) {\n        if (element.classList && element.classList.contains('sprotty-projection-bar')) {\n            return element;\n        }\n        element = element.parentElement;\n    }\n    return undefined;\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface Scrollable extends SModelExtension {\n    scroll: Point\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isScrollable(element: SModelElementImpl | Scrollable): element is Scrollable {\n    return 'scroll' in element;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, optional } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport {\n    Action, BringToFrontAction, generateRequestId, RequestAction, ResponseAction\n} from 'sprotty-protocol/lib/actions';\nimport * as protocol from \"sprotty-protocol/lib/actions\";\nimport { Command, CommandExecutionContext } from '../../base/commands/command';\nimport { ModelRequestCommand } from '../../base/commands/request-command';\nimport { SChildElementImpl, SModelElementImpl, SModelRootImpl, SParentElementImpl } from '../../base/model/smodel';\nimport { findParentByFeature } from '../../base/model/smodel-utils';\nimport { TYPES } from '../../base/types';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { MouseListener } from '../../base/views/mouse-tool';\nimport { setClass } from '../../base/views/vnode-utils';\nimport { isCtrlOrCmd } from '../../utils/browser';\nimport { toArray } from '../../utils/iterable';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { ButtonHandlerRegistry } from '../button/button-handler';\nimport { SButtonImpl } from '../button/model';\nimport { SwitchEditModeAction } from '../edit/edit-routing';\nimport { SRoutingHandleImpl } from '../routing/model';\nimport { SRoutableElementImpl } from '../routing/model';\nimport { findViewportScrollbar } from '../viewport/scroll';\nimport { isSelectable, Selectable } from './model';\n\n@injectable()\nexport class SelectCommand extends Command {\n    static readonly KIND = protocol.SelectAction.KIND;\n\n    protected selected: (SChildElementImpl & Selectable)[] = [];\n    protected deselected: (SChildElementImpl & Selectable)[] = [];\n\n    constructor(@inject(TYPES.Action) public action: protocol.SelectAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRootImpl {\n        const model = context.root;\n        this.action.selectedElementsIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element instanceof SChildElementImpl && isSelectable(element)) {\n                this.selected.push(element);\n            }\n        });\n        this.action.deselectedElementsIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element instanceof SChildElementImpl && isSelectable(element)) {\n                this.deselected.push(element);\n            }\n        });\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): SModelRootImpl {\n        for (const element of this.selected) {\n            element.selected = false;\n        }\n        for (const element of this.deselected) {\n            element.selected = true;\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): SModelRootImpl {\n        for (const element of this.deselected) {\n            element.selected = false;\n        }\n        for (const element of this.selected) {\n            element.selected = true;\n        }\n        return context.root;\n    }\n}\n\n@injectable()\nexport class SelectAllCommand extends Command {\n    static readonly KIND = protocol.SelectAllAction.KIND;\n\n    protected previousSelection: Record<string, boolean> = {};\n\n    constructor(@inject(TYPES.Action) protected readonly action: protocol.SelectAllAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRootImpl {\n        this.selectAll(context.root, this.action.select);\n        return context.root;\n    }\n\n    protected selectAll(element: SParentElementImpl, newState: boolean): void {\n        if (isSelectable(element)) {\n            this.previousSelection[element.id] = element.selected;\n            element.selected = newState;\n        }\n        for (const child of element.children) {\n            this.selectAll(child, newState);\n        }\n    }\n\n    undo(context: CommandExecutionContext): SModelRootImpl {\n        const index = context.root.index;\n        Object.keys(this.previousSelection).forEach(id => {\n            const element = index.getById(id);\n            if (element !== undefined && isSelectable(element))\n                element.selected = this.previousSelection[id];\n        });\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): SModelRootImpl {\n        this.selectAll(context.root, this.action.select);\n        return context.root;\n    }\n}\n\nexport class SelectMouseListener extends MouseListener {\n\n    @inject(ButtonHandlerRegistry) @optional() protected buttonHandlerRegistry: ButtonHandlerRegistry;\n\n    wasSelected = false;\n    hasDragged = false;\n\n    override mouseDown(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        if (event.button !== 0) {\n            return [];\n        }\n        const buttonHandled = this.handleButton(target, event);\n        if (buttonHandled) {\n            return buttonHandled;\n        }\n        const selectableTarget = findParentByFeature(target, isSelectable);\n        if (selectableTarget !== undefined || target instanceof SModelRootImpl) {\n            this.hasDragged = false;\n        }\n        if (selectableTarget !== undefined) {\n            let deselectedElements: SModelElementImpl[] = [];\n            // multi-selection?\n            if (!isCtrlOrCmd(event)) {\n                deselectedElements = this.collectElementsToDeselect(target, selectableTarget);\n            }\n            if (selectableTarget !== undefined) {\n                if (!selectableTarget.selected) {\n                    this.wasSelected = false;\n                    return this.handleSelectTarget(selectableTarget, deselectedElements, event);\n                } else if (isCtrlOrCmd(event)) {\n                    this.wasSelected = false;\n                    return this.handleDeselectTarget(selectableTarget, event);\n                } else {\n                    this.wasSelected = true;\n                }\n            } else {\n                return this.handleDeselectAll(deselectedElements, event);\n            }\n        }\n        return [];\n    }\n\n    protected collectElementsToDeselect(target: SModelElementImpl, selectableTarget: (SModelElementImpl & Selectable) | undefined): SModelElementImpl[] {\n        return toArray(target.root.index.all()\n        .filter(element => isSelectable(element) && element.selected\n            && !(selectableTarget instanceof SRoutingHandleImpl && element === selectableTarget.parent as SModelElementImpl)));\n    }\n\n    protected handleButton(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] | undefined {\n        if (this.buttonHandlerRegistry !== undefined && target instanceof SButtonImpl && target.enabled) {\n            const buttonHandler = this.buttonHandlerRegistry.get(target.type);\n            if (buttonHandler !== undefined) {\n                return buttonHandler.buttonPressed(target);\n            }\n        }\n        return undefined;\n    }\n\n    protected handleSelectTarget(selectableTarget: SModelElementImpl & Selectable, deselectedElements: SModelElementImpl[], event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        result.push(protocol.SelectAction.create({ selectedElementsIDs: [selectableTarget.id], deselectedElementsIDs: deselectedElements.map(e => e.id) }));\n        result.push(BringToFrontAction.create([selectableTarget.id]));\n        const routableDeselect = deselectedElements.filter(e => e instanceof SRoutableElementImpl).map(e => e.id);\n        if (selectableTarget instanceof SRoutableElementImpl) {\n            result.push(SwitchEditModeAction.create({ elementsToActivate: [selectableTarget.id], elementsToDeactivate: routableDeselect }));\n        } else if (routableDeselect.length > 0) {\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));\n        }\n        return result;\n    }\n\n    protected handleDeselectTarget(selectableTarget: SModelElementImpl & Selectable, event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        result.push(protocol.SelectAction.create({ selectedElementsIDs: [], deselectedElementsIDs: [selectableTarget.id] }));\n        if (selectableTarget instanceof SRoutableElementImpl) {\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: [selectableTarget.id] }));\n        }\n        return result;\n    }\n\n    protected handleDeselectAll(deselectedElements: SModelElementImpl[], event: MouseEvent): (Action | Promise<Action>)[] {\n        const result: Action[] = [];\n        result.push(protocol.SelectAction.create({ selectedElementsIDs: [], deselectedElementsIDs: deselectedElements.map(e => e.id) }));\n        const routableDeselect = deselectedElements.filter(e => e instanceof SRoutableElementImpl).map(e => e.id);\n        if (routableDeselect.length > 0) {\n            result.push(SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));\n        }\n        return result;\n    }\n\n    override mouseMove(target: SModelElementImpl, event: MouseEvent): Action[] {\n        this.hasDragged = true;\n        return [];\n    }\n\n    override mouseUp(target: SModelElementImpl, event: MouseEvent): (Action | Promise<Action>)[] {\n        if (event.button === 0) {\n            if (!this.hasDragged) {\n                const selectableTarget = findParentByFeature(target, isSelectable);\n                if (selectableTarget !== undefined) {\n                    if (this.wasSelected) {\n                        return [protocol.SelectAction.create({selectedElementsIDs:[selectableTarget.id],deselectedElementsIDs:[]})];\n                    }\n                } else if (target instanceof SModelRootImpl && !findViewportScrollbar(event)) {\n                    // Mouse up on root but not over ViewPort's scroll bars > deselect all\n                    return this.handleDeselectAll(this.collectElementsToDeselect(target, undefined), event);\n                }\n            }\n        }\n        this.hasDragged = false;\n        return [];\n    }\n\n    override decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        const selectableTarget = findParentByFeature(element, isSelectable);\n        if (selectableTarget !== undefined) {\n            setClass(vnode, 'selected', selectableTarget.selected);\n        }\n        return vnode;\n    }\n}\n\n@injectable()\nexport class GetSelectionCommand extends ModelRequestCommand {\n    static readonly KIND = protocol.GetSelectionAction.KIND;\n\n    protected previousSelection: Record<string, boolean> = {};\n\n    constructor(@inject(TYPES.Action) protected readonly action: protocol.GetSelectionAction) {\n        super();\n    }\n\n    protected retrieveResult(context: CommandExecutionContext): ResponseAction {\n        const selection = context.root.index.all()\n            .filter(e => isSelectable(e) && e.selected)\n            .map(e => e.id);\n        return SelectionResult.create(toArray(selection), this.action.requestId);\n    }\n\n}\n\nexport class SelectKeyboardListener extends KeyListener {\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyA', 'ctrlCmd')) {\n            return [ protocol.SelectAllAction.create()];\n        }\n        return [];\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Triggered when the user changes the selection, e.g. by clicking on a selectable element. The resulting\n * SelectCommand changes the `selected` state accordingly, so the elements can be rendered differently.\n * This action is also forwarded to the diagram server, if present, so it may react on the selection change.\n * Furthermore, the server can send such an action to the client in order to change the selection programmatically.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SelectAction implements Action, protocol.SelectAction {\n    static readonly KIND = 'elementSelected';\n    readonly kind = SelectAction.KIND;\n\n    constructor(public readonly selectedElementsIDs: string[] = [],\n        public readonly deselectedElementsIDs: string[] = []) {\n    }\n}\n\n/**\n * Programmatic action for selecting or deselecting all elements.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SelectAllAction implements Action, protocol.SelectAllAction {\n    static readonly KIND = 'allSelected';\n    readonly kind = SelectAllAction.KIND;\n\n    /**\n     * If `select` is true, all elements are selected, otherwise they are deselected.\n     */\n    constructor(public readonly select: boolean = true) {\n    }\n}\n\n/**\n * Request action for retrieving the current selection.\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface GetSelectionAction extends RequestAction<SelectionResult> {\n    kind: typeof GetSelectionAction.KIND\n}\nexport namespace GetSelectionAction {\n    export const KIND = 'getSelection';\n\n    export function create(): GetSelectionAction {\n        return {\n            kind: KIND,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface SelectionResult extends ResponseAction {\n    kind: typeof SelectionResult.KIND\n    selectedElementsIDs: string[]\n}\nexport namespace SelectionResult {\n    export const KIND = 'selectionResult';\n\n    export function create(selectedElementsIDs: string[], requestId: string): SelectionResult {\n        return {\n            kind: KIND,\n            selectedElementsIDs,\n            responseId: requestId\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action, UndoAction as ProtocolUndoAction, RedoAction as ProtocolRedoAction } from 'sprotty-protocol/lib/actions';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { SModelElementImpl } from '../../base/model/smodel';\nimport { isMac } from '../../utils/browser';\n\nexport class UndoRedoKeyListener extends KeyListener {\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyZ', 'ctrlCmd'))\n            return [ProtocolUndoAction.create()];\n        if (matchesKeystroke(event, 'KeyZ', 'ctrlCmd', 'shift') || (!isMac() && matchesKeystroke(event, 'KeyY', 'ctrlCmd')))\n            return [ProtocolRedoAction.create()];\n        return [];\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface UndoAction extends Action {\n    kind: typeof UndoAction.KIND;\n}\nexport namespace UndoAction {\n    export const KIND = 'undo';\n\n    export function create(): UndoAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface RedoAction extends Action {\n    kind: typeof RedoAction.KIND;\n}\nexport namespace RedoAction {\n    export const KIND = 'redo';\n\n    export function create(): RedoAction {\n        return {\n            kind: KIND\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { SModelRootImpl, SModelElementImpl, isParent, IModelIndex } from '../../base/model/smodel';\nimport { SModelIndex } from 'sprotty-protocol';\n\nexport interface Match {\n    left?: SModelElementSchema\n    right?: SModelElementSchema\n    leftParentId?: string\n    rightParentId?: string\n}\n\nexport interface MatchResult {\n    [id: string]: Match\n}\n\nexport function forEachMatch(matchResult: MatchResult, callback: (id: string, match: Match) => void): void {\n    Object.keys(matchResult).forEach(id => callback(id, matchResult[id]));\n}\n\nexport class ModelMatcher {\n    match(left: SModelRootSchema | SModelRootImpl, right: SModelRootSchema | SModelRootImpl): MatchResult {\n        const result: MatchResult = {};\n        this.matchLeft(left, result);\n        this.matchRight(right, result);\n        return result;\n    }\n\n    protected matchLeft(element: SModelElementSchema | SModelElementImpl, result: MatchResult, parentId?: string): void {\n        let match = result[element.id];\n        if (match !== undefined) {\n            match.left = element;\n            match.leftParentId = parentId;\n        } else {\n            match = {\n                left: element,\n                leftParentId: parentId\n            };\n            result[element.id] = match;\n        }\n        if (isParent(element)) {\n            for (const child of element.children) {\n                this.matchLeft(child, result, element.id);\n            }\n        }\n    }\n\n    protected matchRight(element: SModelElementSchema | SModelElementImpl, result: MatchResult, parentId?: string) {\n        let match = result[element.id];\n        if (match !== undefined) {\n            match.right = element;\n            match.rightParentId = parentId;\n        } else {\n            match = {\n                right: element,\n                rightParentId: parentId\n            };\n            result[element.id] = match;\n        }\n        if (isParent(element)) {\n            for (const child of element.children) {\n                this.matchRight(child, result, element.id);\n            }\n        }\n    }\n}\n\nexport function applyMatches(root: SModelRootSchema, matches: Match[], index?: IModelIndex): void {\n    if (root instanceof SModelRootImpl) {\n        index = root.index;\n    } else if (index === undefined) {\n        index = new SModelIndex();\n        index.add(root);\n    }\n    for (const match of matches) {\n        let newElementInserted = false;\n        if (match.left !== undefined && match.leftParentId !== undefined) {\n            const parent = index.getById(match.leftParentId);\n            if (parent !== undefined && parent.children !== undefined) {\n                const i = parent.children.indexOf(match.left);\n                if (i >= 0) {\n                    if (match.right !== undefined && match.leftParentId === match.rightParentId) {\n                        parent.children.splice(i, 1, match.right);\n                        newElementInserted = true;\n                    } else {\n                        parent.children.splice(i, 1);\n                    }\n                }\n                index.remove(match.left);\n            }\n        }\n        if (!newElementInserted && match.right !== undefined && match.rightParentId !== undefined) {\n            const parent = index.getById(match.rightParentId);\n            if (parent !== undefined) {\n                if (parent.children === undefined)\n                    parent.children = [];\n                parent.children.push(match.right);\n            }\n        }\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Dimension } from \"sprotty-protocol/lib/utils/geometry\";\nimport { Animation } from \"../../base/animations/animation\";\nimport { SModelRootImpl, SModelElementImpl } from \"../../base/model/smodel\";\nimport { CommandExecutionContext } from \"../../base/commands/command\";\nimport { BoundsAware } from './model';\n\nexport interface ResolvedElementResize {\n    element: SModelElementImpl & BoundsAware\n    fromDimension: Dimension\n    toDimension: Dimension\n}\n\nexport class ResizeAnimation extends Animation {\n    constructor(protected model: SModelRootImpl,\n        public elementResizes: Map<string, ResolvedElementResize>,\n        context: CommandExecutionContext,\n        protected reverse: boolean = false) {\n        super(context);\n    }\n\n    tween(t: number) {\n        this.elementResizes.forEach(\n            (elementResize) => {\n                const element = elementResize.element;\n                const newDimension: Dimension = (this.reverse) ? {\n                        width: (1 - t) * elementResize.toDimension.width + t * elementResize.fromDimension.width,\n                        height: (1 - t) * elementResize.toDimension.height + t * elementResize.fromDimension.height\n                    } : {\n                        width: (1 - t) * elementResize.fromDimension.width + t * elementResize.toDimension.width,\n                        height: (1 - t) * elementResize.fromDimension.height + t * elementResize.toDimension.height\n                    };\n                element.bounds = {\n                    x: element.bounds.x,\n                    y: element.bounds.y,\n                    width: newDimension.width,\n                    height: newDimension.height\n                };\n            }\n        );\n        return this.model;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, optional } from \"inversify\";\nimport { Action, UpdateModelAction as ProtocolUpdateModelAction } from \"sprotty-protocol/lib/actions\";\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { almostEquals, Dimension } from \"sprotty-protocol/lib/utils/geometry\";\nimport { Animation, CompoundAnimation } from '../../base/animations/animation';\nimport { CommandExecutionContext, CommandReturn, Command } from '../../base/commands/command';\nimport { FadeAnimation, ResolvedElementFade } from '../fade/fade';\nimport { SModelRootImpl, SChildElementImpl, SModelElementImpl, SParentElementImpl } from \"../../base/model/smodel\";\nimport { MoveAnimation, ResolvedElementMove, MorphEdgesAnimation } from \"../move/move\";\nimport { Fadeable, isFadeable } from \"../fade/model\";\nimport { isLocateable } from \"../move/model\";\nimport { isSizeable } from \"../bounds/model\";\nimport { ViewportRootElement } from \"../viewport/viewport-root\";\nimport { isSelectable } from \"../select/model\";\nimport { MatchResult, ModelMatcher, Match, forEachMatch } from \"./model-matching\";\nimport { ResolvedElementResize, ResizeAnimation } from '../bounds/resize';\nimport { TYPES } from \"../../base/types\";\nimport { isViewport } from \"../viewport/model\";\nimport { EdgeRouterRegistry, EdgeSnapshot, EdgeMemento } from \"../routing/routing\";\nimport { SRoutableElementImpl } from \"../routing/model\";\nimport { containsSome } from \"../../base/model/smodel-utils\";\n\n\nexport interface UpdateAnimationData {\n    fades: ResolvedElementFade[]\n    moves?: ResolvedElementMove[]\n    resizes?: ResolvedElementResize[]\n    edgeMementi?: EdgeMemento[]\n}\n\n@injectable()\nexport class UpdateModelCommand extends Command {\n    static readonly KIND = ProtocolUpdateModelAction.KIND;\n\n    oldRoot: SModelRootImpl;\n    newRoot: SModelRootImpl;\n\n    @inject(EdgeRouterRegistry) @optional() edgeRouterRegistry?: EdgeRouterRegistry;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolUpdateModelAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        let newRoot: SModelRootImpl;\n        if (this.action.newRoot !== undefined) {\n            newRoot = context.modelFactory.createRoot(this.action.newRoot);\n        } else {\n            newRoot = context.modelFactory.createRoot(context.root);\n            if (this.action.matches !== undefined)\n                this.applyMatches(newRoot, this.action.matches, context);\n        }\n        this.oldRoot = context.root;\n        this.newRoot = newRoot;\n        return this.performUpdate(this.oldRoot, this.newRoot, context);\n    }\n\n    protected performUpdate(oldRoot: SModelRootImpl, newRoot: SModelRootImpl, context: CommandExecutionContext): CommandReturn {\n        if ((this.action.animate === undefined || this.action.animate) && oldRoot.id === newRoot.id) {\n            let matchResult: MatchResult;\n            if (this.action.matches === undefined) {\n                const matcher = new ModelMatcher();\n                matchResult = matcher.match(oldRoot, newRoot);\n            } else {\n                matchResult = this.convertToMatchResult(this.action.matches, oldRoot, newRoot);\n            }\n            const animationOrRoot = this.computeAnimation(newRoot, matchResult, context);\n            if (animationOrRoot instanceof Animation)\n                return animationOrRoot.start();\n            else\n                return animationOrRoot;\n        } else {\n            if (oldRoot.type === newRoot.type && Dimension.isValid(oldRoot.canvasBounds))\n                newRoot.canvasBounds = oldRoot.canvasBounds;\n            if (isViewport(oldRoot) && isViewport(newRoot)) {\n                newRoot.zoom = oldRoot.zoom;\n                newRoot.scroll = oldRoot.scroll;\n            }\n            return newRoot;\n        }\n    }\n\n    protected applyMatches(root: SModelRootImpl, matches: Match[], context: CommandExecutionContext): void {\n        const index = root.index;\n        for (const match of matches) {\n            if (match.left !== undefined) {\n                const element = index.getById(match.left.id);\n                if (element instanceof SChildElementImpl)\n                    element.parent.remove(element);\n            }\n        }\n        for (const match of matches) {\n            if (match.right !== undefined) {\n                const element = context.modelFactory.createElement(match.right);\n                let parent: SModelElementImpl | undefined;\n                if (match.rightParentId !== undefined)\n                    parent = index.getById(match.rightParentId);\n                if (parent instanceof SParentElementImpl)\n                    parent.add(element);\n                else\n                    root.add(element);\n            }\n        }\n    }\n\n    protected convertToMatchResult(matches: Match[], leftRoot: SModelRootImpl, rightRoot: SModelRootImpl): MatchResult {\n        const result: MatchResult = {};\n        for (const match of matches) {\n            const converted: Match = {};\n            let id: string | undefined = undefined;\n            if (match.left !== undefined) {\n                id = match.left.id;\n                converted.left = leftRoot.index.getById(id);\n                converted.leftParentId = match.leftParentId;\n            }\n            if (match.right !== undefined) {\n                id = match.right.id;\n                converted.right = rightRoot.index.getById(id);\n                converted.rightParentId = match.rightParentId;\n            }\n            if (id !== undefined)\n                result[id] = converted;\n        }\n        return result;\n    }\n\n    protected computeAnimation(newRoot: SModelRootImpl, matchResult: MatchResult, context: CommandExecutionContext): SModelRootImpl | Animation {\n        const animationData: UpdateAnimationData = {\n            fades: [] as ResolvedElementFade[]\n        };\n        forEachMatch(matchResult, (id, match) => {\n            if (match.left !== undefined && match.right !== undefined) {\n                // The element is still there, but may have been moved\n                this.updateElement(match.left as SModelElementImpl, match.right as SModelElementImpl, animationData);\n            } else if (match.right !== undefined) {\n                // An element has been added\n                const right = match.right as SModelElementImpl;\n                if (isFadeable(right)) {\n                    right.opacity = 0;\n                    animationData.fades.push({\n                        element: right,\n                        type: 'in'\n                    });\n                }\n            } else if (match.left instanceof SChildElementImpl) {\n                // An element has been removed\n                const left = match.left;\n                if (isFadeable(left) && match.leftParentId !== undefined) {\n                    if (!containsSome(newRoot, left)) {\n                        const parent = newRoot.index.getById(match.leftParentId);\n                        if (parent instanceof SParentElementImpl) {\n                            const leftCopy = context.modelFactory.createElement(left) as SChildElementImpl & Fadeable;\n                            parent.add(leftCopy);\n                            animationData.fades.push({\n                                element: leftCopy,\n                                type: 'out'\n                            });\n                        }\n                    }\n                }\n            }\n        });\n\n        const animations = this.createAnimations(animationData, newRoot, context);\n        if (animations.length >= 2) {\n            return new CompoundAnimation(newRoot, context, animations);\n        } else if (animations.length === 1) {\n            return animations[0];\n        } else {\n            return newRoot;\n        }\n    }\n\n    protected updateElement(left: SModelElementImpl, right: SModelElementImpl, animationData: UpdateAnimationData): void {\n        if (isLocateable(left) && isLocateable(right)) {\n            const leftPos = left.position;\n            const rightPos = right.position;\n            if (!almostEquals(leftPos.x, rightPos.x) || !almostEquals(leftPos.y, rightPos.y)) {\n                if (animationData.moves === undefined)\n                    animationData.moves = [];\n                animationData.moves.push({\n                    element: right,\n                    fromPosition: leftPos,\n                    toPosition: rightPos\n                });\n                right.position = leftPos;\n            }\n        }\n        if (isSizeable(left) && isSizeable(right)) {\n            if (!Dimension.isValid(right.bounds)) {\n                right.bounds = {\n                    x: right.bounds.x,\n                    y: right.bounds.y,\n                    width: left.bounds.width,\n                    height: left.bounds.height\n                };\n            } else if (!almostEquals(left.bounds.width, right.bounds.width)\n                || !almostEquals(left.bounds.height, right.bounds.height)) {\n                if (animationData.resizes === undefined)\n                    animationData.resizes = [];\n                animationData.resizes.push({\n                    element: right,\n                    fromDimension: {\n                        width: left.bounds.width,\n                        height: left.bounds.height,\n                    },\n                    toDimension: {\n                        width: right.bounds.width,\n                        height: right.bounds.height,\n                    }\n                });\n            }\n        }\n        if (left instanceof SRoutableElementImpl && right instanceof SRoutableElementImpl && this.edgeRouterRegistry) {\n            if (animationData.edgeMementi === undefined)\n                animationData.edgeMementi = [];\n            animationData.edgeMementi.push({\n                edge: right,\n                before: this.takeSnapshot(left),\n                after: this.takeSnapshot(right),\n            });\n        }\n        if (isSelectable(left) && isSelectable(right)) {\n            right.selected = left.selected;\n        }\n        if (left instanceof SModelRootImpl && right instanceof SModelRootImpl) {\n            right.canvasBounds = left.canvasBounds;\n        }\n        if (left instanceof ViewportRootElement && right instanceof ViewportRootElement) {\n            right.scroll = left.scroll;\n            right.zoom = left.zoom;\n        }\n    }\n\n    protected takeSnapshot(edge: SRoutableElementImpl): EdgeSnapshot {\n        const router = this.edgeRouterRegistry!.get(edge.routerKind);\n        return router.takeSnapshot(edge);\n    }\n\n    protected createAnimations(data: UpdateAnimationData, root: SModelRootImpl, context: CommandExecutionContext): Animation[] {\n        const animations: Animation[] = [];\n        if (data.fades.length > 0) {\n            animations.push(new FadeAnimation(root, data.fades, context, true));\n        }\n        if (data.moves !== undefined && data.moves.length > 0) {\n            const movesMap: Map<string, ResolvedElementMove> = new Map;\n            for (const move of data.moves) {\n                movesMap.set(move.element.id, move);\n            }\n            animations.push(new MoveAnimation(root, movesMap, context, false));\n        }\n        if (data.resizes !== undefined && data.resizes.length > 0) {\n            const resizesMap: Map<string, ResolvedElementResize> = new Map;\n            for (const resize of data.resizes) {\n                resizesMap.set(resize.element.id, resize);\n            }\n            animations.push(new ResizeAnimation(root, resizesMap, context, false));\n        }\n        if (data.edgeMementi !== undefined && data.edgeMementi.length > 0) {\n            animations.push(new MorphEdgesAnimation(root, data.edgeMementi, context, false));\n        }\n        return animations;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return this.performUpdate(this.newRoot, this.oldRoot, context);\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.performUpdate(this.oldRoot, this.newRoot, context);\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Sent from the model source to the client in order to update the model. If no model is present yet,\n * this behaves the same as a SetModelAction. The transition from the old model to the new one can be animated.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class UpdateModelAction implements Action, ProtocolUpdateModelAction {\n    static readonly KIND = 'updateModel';\n    readonly kind = UpdateModelAction.KIND;\n\n    public readonly newRoot?: SModelRootSchema;\n    public readonly matches?: Match[];\n\n    constructor(input: SModelRootSchema | Match[],\n        public readonly animate: boolean = true,\n        public readonly cause?: Action) {\n        if ((input as SModelRootSchema).id !== undefined)\n            this.newRoot = input as SModelRootSchema;\n        else\n            this.matches = input as Match[];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2023 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Action, generateRequestId, RequestAction, ResponseAction, SetViewportAction as ProtocolSetViewPortAction} from 'sprotty-protocol/lib/actions';\nimport { Viewport } from 'sprotty-protocol/lib/model';\nimport { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { MergeableCommand, ICommand, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { Animation } from '../../base/animations/animation';\nimport { isViewport, limitViewport } from './model';\nimport { TYPES } from '../../base/types';\nimport { ModelRequestCommand } from '../../base/commands/request-command';\nimport { ViewerOptions } from '../../base/views/viewer-options';\n\n/**\n * Request action for retrieving the current viewport and canvas bounds.\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface GetViewportAction extends RequestAction<ViewportResult> {\n    kind: typeof GetViewportAction.KIND;\n}\nexport namespace GetViewportAction {\n    export const KIND = 'getViewport';\n\n    export function create(): GetViewportAction {\n        return {\n            kind: KIND,\n            requestId: generateRequestId()\n        };\n    }\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ViewportResult extends ResponseAction {\n    kind: typeof ViewportResult.KIND;\n    viewport: Viewport\n    canvasBounds: Bounds\n}\nexport namespace ViewportResult {\n    export const KIND = 'viewportResult';\n\n    export function create(viewport: Viewport, canvasBounds: Bounds, requestId: string): ViewportResult {\n        return {\n            kind: KIND,\n            viewport,\n            canvasBounds,\n            responseId: requestId\n        };\n    }\n}\n\n@injectable()\nexport class SetViewportCommand extends MergeableCommand {\n    static readonly KIND = ProtocolSetViewPortAction.KIND;\n\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n    protected element: SModelElementImpl & Viewport;\n    protected oldViewport: Viewport;\n    protected newViewport: Viewport;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolSetViewPortAction) {\n        super();\n        this.newViewport = action.newViewport;\n    }\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        const model = context.root;\n        const element = model.index.getById(this.action.elementId);\n        if (element && isViewport(element)) {\n            this.element = element;\n            this.oldViewport = {\n                scroll: this.element.scroll,\n                zoom: this.element.zoom,\n            };\n            const { zoomLimits, horizontalScrollLimits, verticalScrollLimits } = this.viewerOptions;\n            this.newViewport = limitViewport(this.newViewport, model.canvasBounds, horizontalScrollLimits, verticalScrollLimits, zoomLimits);\n            return this.setViewport(element, this.oldViewport, this.newViewport, context);\n        }\n        return context.root;\n    }\n\n    protected setViewport(element: SModelElementImpl, oldViewport: Viewport, newViewport: Viewport, context: CommandExecutionContext): CommandReturn {\n        if (element && isViewport(element)) {\n            if (this.action.animate) {\n                return new ViewportAnimation(element, oldViewport, newViewport, context).start();\n            } else {\n                element.scroll = newViewport.scroll;\n                element.zoom = newViewport.zoom;\n            }\n        }\n        return context.root;\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        return this.setViewport(this.element, this.newViewport, this.oldViewport, context);\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        return this.setViewport(this.element, this.oldViewport, this.newViewport, context);\n    }\n\n    override merge(command: ICommand, context: CommandExecutionContext): boolean {\n        if (!this.action.animate && command instanceof SetViewportCommand && this.element === command.element) {\n            this.newViewport = command.newViewport;\n            return true;\n        }\n        return false;\n    }\n}\n\nexport class GetViewportCommand extends ModelRequestCommand {\n    static readonly KIND = GetViewportAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected readonly action: GetViewportAction) {\n        super();\n    }\n\n    protected retrieveResult(context: CommandExecutionContext): ResponseAction {\n        const elem = context.root;\n        let viewport: Viewport;\n        if (isViewport(elem)) {\n            viewport = { scroll: elem.scroll, zoom: elem.zoom };\n        } else {\n            viewport = { scroll: Point.ORIGIN, zoom: 1 };\n        }\n        return ViewportResult.create(viewport, elem.canvasBounds, this.action.requestId);\n    }\n}\n\nexport class ViewportAnimation extends Animation {\n\n    protected zoomFactor: number;\n\n    constructor(protected element: SModelElementImpl & Viewport,\n                protected oldViewport: Viewport,\n                protected newViewport: Viewport,\n                protected override context: CommandExecutionContext) {\n        super(context);\n        this.zoomFactor = Math.log(newViewport.zoom / oldViewport.zoom);\n    }\n\n    tween(t: number, context: CommandExecutionContext): SModelRootImpl {\n        this.element.scroll = {\n            x: (1 - t) * this.oldViewport.scroll.x + t * this.newViewport.scroll.x,\n            y: (1 - t) * this.oldViewport.scroll.y + t * this.newViewport.scroll.y\n        };\n        this.element.zoom = this.oldViewport.zoom * Math.exp(t * this.zoomFactor);\n        return context.root;\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport class SetViewportAction implements Action, ProtocolSetViewPortAction {\n    static readonly KIND = 'viewport';\n    readonly kind = SetViewportAction.KIND;\n\n    constructor(public readonly elementId: string,\n                public readonly newViewport: Viewport,\n                public readonly animate: boolean) {\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2023 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Action, CenterAction as ProtocolCenterAction, FitToScreenAction as ProtocolFitToScreenAction} from 'sprotty-protocol/lib/actions';\nimport { Viewport } from 'sprotty-protocol/lib/model';\nimport { almostEquals, Bounds, Dimension } from 'sprotty-protocol/lib/utils/geometry';\nimport { matchesKeystroke } from '../../utils/keyboard';\nimport { SChildElementImpl } from '../../base/model/smodel';\nimport { Command, CommandExecutionContext, CommandReturn } from '../../base/commands/command';\nimport { SModelElementImpl, SModelRootImpl } from '../../base/model/smodel';\nimport { KeyListener } from '../../base/views/key-tool';\nimport { isBoundsAware } from '../bounds/model';\nimport { isSelectable } from '../select/model';\nimport { ViewportAnimation } from './viewport';\nimport { isViewport, limitViewport } from './model';\nimport { injectable, inject } from 'inversify';\nimport { TYPES } from '../../base/types';\nimport { ViewerOptions } from '../../base/views/viewer-options';\n\n@injectable()\nexport abstract class BoundsAwareViewportCommand extends Command {\n\n    @inject(TYPES.ViewerOptions) protected viewerOptions: ViewerOptions;\n    oldViewport: Viewport;\n    newViewport?: Viewport;\n\n    constructor(protected readonly animate: boolean) {\n        super();\n    }\n\n    protected initialize(model: SModelRootImpl): void {\n        if (!isViewport(model)) {\n            return;\n        }\n        this.oldViewport = {\n            scroll: model.scroll,\n            zoom: model.zoom\n        };\n        const allBounds: Bounds[] = [];\n        this.getElementIds().forEach(id => {\n            const element = model.index.getById(id);\n            if (element && isBoundsAware(element)) {\n                allBounds.push(this.boundsInViewport(element, element.bounds, model));\n            }\n        });\n        if (allBounds.length === 0) {\n            model.index.all().forEach(element => {\n                if (isSelectable(element) && element.selected && isBoundsAware(element)) {\n                    allBounds.push(this.boundsInViewport(element, element.bounds, model));\n                }\n            });\n        }\n        if (allBounds.length === 0) {\n            model.index.all().forEach(element => {\n                if (isBoundsAware(element)) {\n                    allBounds.push(this.boundsInViewport(element, element.bounds, model));\n                }\n            });\n        }\n        if (allBounds.length !== 0) {\n            const bounds = allBounds.reduce((b0, b1) => Bounds.combine(b0, b1));\n            if (Dimension.isValid(bounds)) {\n                const newViewport = this.getNewViewport(bounds, model);\n                if (newViewport) {\n                    const { zoomLimits, horizontalScrollLimits, verticalScrollLimits } = this.viewerOptions;\n                    this.newViewport = limitViewport(newViewport, model.canvasBounds, horizontalScrollLimits, verticalScrollLimits, zoomLimits);\n                }\n            }\n        }\n    }\n\n    protected boundsInViewport(element: SModelElementImpl, bounds: Bounds, viewport: SModelRootImpl & Viewport): Bounds {\n        if (element instanceof SChildElementImpl && element.parent !== viewport)\n            return this.boundsInViewport(element.parent, element.parent.localToParent(bounds) as Bounds, viewport);\n        else\n            return bounds;\n    }\n\n    protected abstract getNewViewport(bounds: Bounds, model: SModelRootImpl): Viewport | undefined;\n\n    protected abstract getElementIds(): string[];\n\n    execute(context: CommandExecutionContext): CommandReturn {\n        this.initialize(context.root);\n        return this.redo(context);\n    }\n\n    undo(context: CommandExecutionContext): CommandReturn {\n        const model = context.root;\n        if (isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {\n            if (this.animate)\n                return new ViewportAnimation(model, this.newViewport, this.oldViewport, context).start();\n            else {\n                model.scroll = this.oldViewport.scroll;\n                model.zoom = this.oldViewport.zoom;\n            }\n        }\n        return model;\n    }\n\n    redo(context: CommandExecutionContext): CommandReturn {\n        const model = context.root;\n        if (isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {\n            if (this.animate) {\n               return new ViewportAnimation(model, this.oldViewport, this.newViewport, context).start();\n            } else {\n                model.scroll = this.newViewport.scroll;\n                model.zoom = this.newViewport.zoom;\n            }\n        }\n        return model;\n    }\n\n    protected equal(vp1: Viewport, vp2: Viewport): boolean {\n        return almostEquals(vp1.zoom, vp2.zoom) && almostEquals(vp1.scroll.x, vp2.scroll.x) && almostEquals(vp1.scroll.y, vp2.scroll.y);\n    }\n}\n\nexport class CenterCommand extends BoundsAwareViewportCommand {\n    static readonly KIND = ProtocolCenterAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected action: ProtocolCenterAction) {\n        super(action.animate);\n    }\n\n    getElementIds() {\n        return this.action.elementIds;\n    }\n\n    getNewViewport(bounds: Bounds, model: SModelRootImpl): Viewport | undefined {\n        if (!Dimension.isValid(model.canvasBounds)) {\n            return undefined;\n        }\n        let zoom = 1;\n        if (this.action.retainZoom && isViewport(model)) {\n            zoom = model.zoom;\n        } else if (this.action.zoomScale) {\n            zoom = this.action.zoomScale;\n        }\n        const c = Bounds.center(bounds);\n        return {\n            scroll: {\n                x: c.x - 0.5 * model.canvasBounds.width / zoom,\n                y: c.y - 0.5 * model.canvasBounds.height / zoom\n            },\n            zoom: zoom\n        };\n    }\n}\n\nexport class FitToScreenCommand extends BoundsAwareViewportCommand {\n    static readonly KIND = ProtocolFitToScreenAction.KIND;\n\n    constructor(@inject(TYPES.Action) protected readonly action: ProtocolFitToScreenAction) {\n        super(action.animate);\n    }\n\n    getElementIds() {\n        return this.action.elementIds;\n    }\n\n    getNewViewport(bounds: Bounds, model: SModelRootImpl): Viewport | undefined {\n        if (!Dimension.isValid(model.canvasBounds)) {\n            return undefined;\n        }\n        const c = Bounds.center(bounds);\n        const delta = this.action.padding === undefined\n            ? 0\n            : 2 *  this.action.padding;\n        let zoom = Math.min(\n            model.canvasBounds.width / (bounds.width + delta),\n            model.canvasBounds.height / (bounds.height + delta));\n        if (this.action.maxZoom !== undefined)\n           zoom = Math.min(zoom, this.action.maxZoom);\n        if (zoom === Infinity) {\n            zoom = 1;\n        }\n        return {\n            scroll: {\n                x: c.x - 0.5 * model.canvasBounds.width / zoom,\n                y: c.y - 0.5 * model.canvasBounds.height / zoom\n            },\n            zoom: zoom\n        };\n    }\n}\n\nexport class CenterKeyboardListener extends KeyListener {\n    override keyDown(element: SModelElementImpl, event: KeyboardEvent): Action[] {\n        if (matchesKeystroke(event, 'KeyC', 'ctrlCmd', 'shift'))\n            return [ProtocolCenterAction.create([])];\n        if (matchesKeystroke(event, 'KeyF', 'ctrlCmd', 'shift'))\n            return [ProtocolFitToScreenAction.create([])];\n        return [];\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Triggered when the user requests the viewer to center on the current model. The resulting\n * CenterCommand changes the scroll setting of the viewport accordingly.\n * It also resets the zoom to its default if retainZoom is false.\n * This action can also be sent from the model source to the client in order to perform such a\n * viewport change programmatically.\n *\n * @deprecated Use the declaration in `sprotty-protocol` instead.\n */\nexport class CenterAction implements Action, ProtocolCenterAction {\n    static readonly KIND = 'center';\n    readonly kind = CenterAction.KIND;\n\n    constructor(public readonly elementIds: string[],\n                public readonly animate: boolean = true,\n                public readonly retainZoom: boolean = false,\n                public readonly zoomScale?: number) {\n    }\n}\n\n/**\n * Triggered when the user requests the viewer to fit its content to the available drawing area.\n * The resulting FitToScreenCommand changes the zoom and scroll settings of the viewport so the model\n * can be shown completely. This action can also be sent from the model source to the client in order\n * to perform such a viewport change programmatically.\n *\n * @deprecated Use the declaration in `sprotty-protocol` instead.\n */\nexport class FitToScreenAction implements Action, ProtocolFitToScreenAction {\n    static readonly KIND = 'fit';\n    readonly kind = FitToScreenAction.KIND;\n\n    constructor(public readonly elementIds: string[],\n                public readonly padding?: number,\n                public readonly maxZoom?: number,\n                public readonly animate: boolean = true) {\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Action, BringToFrontAction as ProtocolBringToFrontAction} from 'sprotty-protocol/lib/actions';\nimport { TYPES } from '../../base/types';\nimport { SModelRootImpl, SChildElementImpl, SModelElementImpl, SParentElementImpl } from '../../base/model/smodel';\nimport { Command, CommandExecutionContext } from '../../base/commands/command';\nimport { SRoutableElementImpl, SConnectableElementImpl } from '../routing/model';\n\nexport type ZOrderElement = {\n    element: SChildElementImpl\n    index: number\n};\n\n@injectable()\nexport class BringToFrontCommand extends Command {\n    static readonly KIND = ProtocolBringToFrontAction.KIND;\n\n    protected selected: ZOrderElement[] = [];\n\n    constructor(@inject(TYPES.Action) public action: ProtocolBringToFrontAction) {\n        super();\n    }\n\n    execute(context: CommandExecutionContext): SModelRootImpl {\n        const model = context.root;\n        this.action.elementIDs.forEach(id => {\n            const element = model.index.getById(id);\n            if (element instanceof SRoutableElementImpl) {\n                if (element.source)\n                    this.addToSelection(element.source);\n                if (element.target)\n                    this.addToSelection(element.target);\n            }\n            if (element instanceof SChildElementImpl) {\n                this.addToSelection(element);\n            }\n            this.includeConnectedEdges(element);\n        });\n        return this.redo(context);\n    }\n\n    protected includeConnectedEdges(element?: SModelElementImpl): void {\n        if (element instanceof SConnectableElementImpl) {\n            element.incomingEdges.forEach(edge => this.addToSelection(edge));\n            element.outgoingEdges.forEach(edge => this.addToSelection(edge));\n        }\n        if (element instanceof SParentElementImpl) {\n            for (const child of element.children) {\n                this.includeConnectedEdges(child);\n            }\n        }\n    }\n\n    protected addToSelection(element: SChildElementImpl): void {\n        this.selected.push({\n            element: element,\n            index: element.parent.children.indexOf(element)\n        });\n    }\n\n    undo(context: CommandExecutionContext): SModelRootImpl {\n        for (let i = this.selected.length - 1; i >= 0; i--) {\n            const selection = this.selected[i];\n            const element = selection.element;\n            element.parent.move(element, selection.index);\n        }\n        return context.root;\n    }\n\n    redo(context: CommandExecutionContext): SModelRootImpl {\n        for (let i = 0; i < this.selected.length; i++) {\n            this.bringToFront(this.selected[i]);\n        }\n        return context.root;\n    }\n\n    protected bringToFront(selection: ZOrderElement) {\n        const element = selection.element;\n        const childrenLength = element.parent.children.length;\n        element.parent.move(element, childrenLength - 1);\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * Action to render the selected elements in front of others by manipulating the z-order.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface BringToFrontAction extends Action {\n    kind: typeof BringToFrontAction.KIND;\n    elementIDs: string[]\n}\nexport namespace BringToFrontAction {\n    export const KIND = 'bringToFront';\n\n    export function create(elementIDs: string[]): BringToFrontAction {\n        return {\n            kind: KIND,\n            elementIDs\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport {\n    SCompartment as SCompartmentSchema, SEdge as SEdgeSchema, SGraph as SGraphSchema, SLabel as SLabelSchema,\n    SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema, SNode as SNodeSchema, SPort as SPortSchema\n} from 'sprotty-protocol/lib/model';\nimport { getBasicType } from 'sprotty-protocol/lib/utils/model-utils';\nimport { SModelFactory, createFeatureSet } from \"../base/model/smodel-factory\";\nimport { SChildElementImpl, SModelRootImpl, SParentElementImpl } from \"../base/model/smodel\";\nimport { SCompartmentImpl, SEdgeImpl, SGraphImpl, SLabelImpl, SNodeImpl, SPortImpl } from \"./sgraph\";\nimport { SButtonImpl, SButtonSchema } from '../features/button/model';\n\n/**\n * @deprecated\n * Subclassing SModelFactory is discouraged. Use `registerModelElement`\n * or `configureModelElement` instead.\n */\n@injectable()\nexport class SGraphFactory extends SModelFactory {\n\n    protected readonly defaultGraphFeatures = createFeatureSet(SGraphImpl.DEFAULT_FEATURES);\n    protected readonly defaultNodeFeatures = createFeatureSet(SNodeImpl.DEFAULT_FEATURES);\n    protected readonly defaultPortFeatures = createFeatureSet(SPortImpl.DEFAULT_FEATURES);\n    protected readonly defaultEdgeFeatures = createFeatureSet(SEdgeImpl.DEFAULT_FEATURES);\n    protected readonly defaultLabelFeatures = createFeatureSet(SLabelImpl.DEFAULT_FEATURES);\n    protected readonly defaultCompartmentFeatures = createFeatureSet(SCompartmentImpl.DEFAULT_FEATURES);\n    protected readonly defaultButtonFeatures = createFeatureSet(SButtonImpl.DEFAULT_FEATURES);\n\n    override createElement(schema: SModelElementSchema, parent?: SParentElementImpl): SChildElementImpl {\n        let child: SChildElementImpl;\n        if (this.registry.hasKey(schema.type)) {\n            const regElement = this.registry.get(schema.type, undefined);\n            if (!(regElement instanceof SChildElementImpl))\n                throw new Error(`Element with type ${schema.type} was expected to be an SChildElement.`);\n            child = regElement;\n        } else if (this.isNodeSchema(schema)) {\n            child = new SNodeImpl();\n            child.features = this.defaultNodeFeatures;\n        } else if (this.isPortSchema(schema)) {\n            child = new SPortImpl();\n            child.features = this.defaultPortFeatures;\n        } else if (this.isEdgeSchema(schema)) {\n            child = new SEdgeImpl();\n            child.features = this.defaultEdgeFeatures;\n        } else if (this.isLabelSchema(schema)) {\n            child = new SLabelImpl();\n            child.features = this.defaultLabelFeatures;\n        } else if (this.isCompartmentSchema(schema)) {\n            child = new SCompartmentImpl();\n            child.features = this.defaultCompartmentFeatures;\n        } else if (this.isButtonSchema(schema)) {\n            child = new SButtonImpl();\n            child.features = this.defaultButtonFeatures;\n        } else {\n            child = new SChildElementImpl();\n        }\n        return this.initializeChild(child, schema, parent);\n    }\n\n    override createRoot(schema: SModelRootSchema): SModelRootImpl {\n        let root: SModelRootImpl;\n        if (this.registry.hasKey(schema.type)) {\n            const regElement = this.registry.get(schema.type, undefined);\n            if (!(regElement instanceof SModelRootImpl))\n                throw new Error(`Element with type ${schema.type} was expected to be an SModelRoot.`);\n            root = regElement;\n        } else if (this.isGraphSchema(schema)) {\n            root = new SGraphImpl();\n            root.features = this.defaultGraphFeatures;\n        } else {\n            root = new SModelRootImpl();\n        }\n        return this.initializeRoot(root, schema);\n    }\n\n    isGraphSchema(schema: SModelElementSchema): schema is SGraphSchema {\n        return getBasicType(schema) === 'graph';\n    }\n\n    isNodeSchema(schema: SModelElementSchema): schema is SNodeSchema {\n        return getBasicType(schema) === 'node';\n    }\n\n    isPortSchema(schema: SModelElementSchema): schema is SPortSchema {\n        return getBasicType(schema) === 'port';\n    }\n\n    isEdgeSchema(schema: SModelElementSchema): schema is SEdgeSchema {\n        return getBasicType(schema) === 'edge';\n    }\n\n    isLabelSchema(schema: SModelElementSchema): schema is SLabelSchema {\n        return getBasicType(schema) === 'label';\n    }\n\n    isCompartmentSchema(schema: SModelElementSchema): schema is SCompartmentSchema {\n        return getBasicType(schema) === 'comp';\n    }\n\n    isButtonSchema(schema: SModelElementSchema): schema is SButtonSchema {\n        return getBasicType(schema) === 'button';\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../base/types\";\nimport { SGraphFactory } from \"./sgraph-factory\";\n\nconst graphModule = new ContainerModule((bind, unbind, isBound, rebind) => {\n    rebind(TYPES.IModelFactory).to(SGraphFactory).inSingletonScope();\n});\n\nexport default graphModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { SetBoundsCommand, RequestBoundsCommand } from \"./bounds-manipulation\";\nimport { HiddenBoundsUpdater } from './hidden-bounds-updater';\nimport { configureLayout, Layouter, LayoutRegistry } from \"./layout\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { HBoxLayouter } from \"./hbox-layout\";\nimport { VBoxLayouter } from \"./vbox-layout\";\nimport { StackLayouter} from \"./stack-layout\";\n\nconst boundsModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, SetBoundsCommand);\n    configureCommand({ bind, isBound }, RequestBoundsCommand);\n    bind(HiddenBoundsUpdater).toSelf().inSingletonScope();\n    bind(TYPES.HiddenVNodePostprocessor).toService(HiddenBoundsUpdater);\n    bind(TYPES.Layouter).to(Layouter).inSingletonScope();\n    bind(TYPES.LayoutRegistry).to(LayoutRegistry).inSingletonScope();\n\n    configureLayout({bind, isBound}, VBoxLayouter.KIND, VBoxLayouter);\n    configureLayout({bind, isBound}, HBoxLayouter.KIND, HBoxLayouter);\n    configureLayout({bind, isBound}, StackLayouter.KIND, StackLayouter);\n});\n\nexport default boundsModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { ButtonHandlerRegistry } from './button-handler';\n\nconst buttonModule = new ContainerModule(bind => {\n    bind(ButtonHandlerRegistry).toSelf().inSingletonScope();\n});\n\nexport default buttonModule;\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { CommandPaletteActionProviderRegistry } from \"./action-providers\";\nimport { CommandPalette, CommandPaletteKeyListener } from \"./command-palette\";\n\nconst commandPaletteModule = new ContainerModule((bind) => {\n    bind(CommandPalette).toSelf().inSingletonScope();\n    bind(TYPES.IUIExtension).toService(CommandPalette);\n    bind(CommandPaletteKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(CommandPaletteKeyListener);\n    bind(CommandPaletteActionProviderRegistry).toSelf().inSingletonScope();\n    bind(TYPES.ICommandPaletteActionProviderRegistry).toService(CommandPaletteActionProviderRegistry);\n});\n\nexport default commandPaletteModule;\n", "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { ContainerModule } from \"inversify\";\n\nimport { IContextMenuService } from \"./context-menu-service\";\nimport { ContextMenuProviderRegistry } from \"./menu-providers\";\nimport { ContextMenuMouseListener } from \"./mouse-listener\";\nimport { TYPES } from \"../../base/types\";\n\nconst contextMenuModule = new ContainerModule(bind => {\n    bind(TYPES.IContextMenuServiceProvider).toProvider<IContextMenuService>(ctx => {\n        return () => {\n            return new Promise<IContextMenuService>((resolve, reject) => {\n                if (ctx.container.isBound(TYPES.IContextMenuService)) {\n                    resolve(ctx.container.get<IContextMenuService>(TYPES.IContextMenuService));\n                } else {\n                    reject();\n                }\n            });\n        };\n    });\n    bind(ContextMenuMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(ContextMenuMouseListener);\n    bind(TYPES.IContextMenuProviderRegistry).to(ContextMenuProviderRegistry);\n});\n\nexport default contextMenuModule;\n", "/********************************************************************************\n * Copyright (c) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { configureModelElement } from \"../../base/views/view\";\nimport { ContainerModule } from \"inversify\";\nimport { SIssueMarker } from \"./model\";\nimport { IssueMarkerView } from \"./views\";\nimport { TYPES } from \"../../base/types\";\nimport { DecorationPlacer } from \"./decoration-placer\";\n\nconst decorationModule = new ContainerModule((bind, _unbind, isBound)  => {\n    configureModelElement({ bind, isBound }, 'marker', SIssueMarker, IssueMarkerView);\n    bind(DecorationPlacer).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(DecorationPlacer);\n});\n\nexport default decorationModule;\n", "/********************************************************************************\n * Copyright (c) 2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { IntersectionFinder } from \"../edge-intersection/intersection-finder\";\n\nconst edgeIntersectionModule = new ContainerModule(bind => {\n    bind(IntersectionFinder).toSelf().inSingletonScope();\n    bind(TYPES.IEdgeRoutePostprocessor).toService(IntersectionFinder);\n});\n\nexport default edgeIntersectionModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { configureButtonHandler } from \"../button/button-handler\";\nimport { ExpandButtonHandler } from \"./expand\";\n\nconst expandModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureButtonHandler({bind, isBound}, ExpandButtonHandler.TYPE, ExpandButtonHandler);\n});\n\nexport default expandModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from '../../base/types';\nimport { ExportSvgPostprocessor, ExportSvgKeyListener, ExportSvgCommand } from './export';\nimport { SvgExporter } from './svg-exporter';\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst exportSvgModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(ExportSvgKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(ExportSvgKeyListener);\n    bind(ExportSvgPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.HiddenVNodePostprocessor).toService(ExportSvgPostprocessor);\n    configureCommand({ bind, isBound }, ExportSvgCommand);\n    bind(TYPES.SvgExporter).to(SvgExporter).inSingletonScope();\n});\n\nexport default exportSvgModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { ElementFader } from \"./fade\";\n\nconst fadeModule = new ContainerModule(bind => {\n    bind(ElementFader).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(ElementFader);\n});\n\nexport default fadeModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from \"inversify\";\nimport { VNode } from \"snabbdom\";\nimport { TYPES } from \"../../base/types\";\nimport { IVNodePostprocessor } from \"../../base/views/vnode-postprocessor\";\nimport { ViewerOptions } from \"../../base/views/viewer-options\";\nimport { SModelElementImpl } from \"../../base/model/smodel\";\n\n@injectable()\nexport class PopupPositionUpdater implements IVNodePostprocessor {\n\n    @inject(TYPES.ViewerOptions) protected options: ViewerOptions;\n\n    decorate(vnode: VNode, element: SModelElementImpl): VNode {\n        return vnode;\n    }\n\n    postUpdate(): void {\n        const popupDiv = document.getElementById(this.options.popupDiv);\n        if (popupDiv !== null && typeof window !== 'undefined') {\n            const boundingClientRect = popupDiv.getBoundingClientRect();\n            if (window.innerHeight < boundingClientRect.height + boundingClientRect.top) {\n                popupDiv.style.top = (window.pageYOffset + window.innerHeight - boundingClientRect.height - 5) + 'px';\n            }\n\n            if (window.innerWidth < boundingClientRect.left + boundingClientRect.width) {\n                popupDiv.style.left = (window.pageXOffset + window.innerWidth - boundingClientRect.width - 5) + 'px';\n            }\n\n            if (boundingClientRect.left < 0) {\n                popupDiv.style.left = '0px';\n            }\n\n            if (boundingClientRect.top < 0) {\n                popupDiv.style.top = '0px';\n            }\n        }\n    }\n\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport {\n    HoverMouseListener, PopupHoverMouseListener, HoverFeedbackCommand, SetPopupModelCommand,\n    HoverKeyListener, HoverState, ClosePopupActionHandler\n} from \"./hover\";\nimport { PopupPositionUpdater } from \"./popup-position-updater\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { configureActionHandler } from \"../../base/actions/action-handler\";\nimport { FitToScreenCommand, CenterCommand } from \"../viewport/center-fit\";\nimport { SetViewportCommand } from \"../viewport/viewport\";\nimport { MoveCommand } from \"../move/move\";\n\nconst hoverModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(PopupPositionUpdater).toSelf().inSingletonScope();\n    bind(TYPES.PopupVNodePostprocessor).toService(PopupPositionUpdater);\n    bind(HoverMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(HoverMouseListener);\n    bind(PopupHoverMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.PopupMouseListener).toService(PopupHoverMouseListener);\n    bind(HoverKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(HoverKeyListener);\n    bind<HoverState>(TYPES.HoverState).toConstantValue({\n        mouseOverTimer: undefined,\n        mouseOutTimer: undefined,\n        popupOpen: false,\n        previousPopupElement: undefined\n    });\n    bind(ClosePopupActionHandler).toSelf().inSingletonScope();\n\n    const context = { bind, isBound };\n    configureCommand(context, HoverFeedbackCommand);\n    configureCommand(context, SetPopupModelCommand);\n    configureActionHandler(context, SetPopupModelCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, FitToScreenCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, CenterCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, SetViewportCommand.KIND, ClosePopupActionHandler);\n    configureActionHandler(context, MoveCommand.KIND, ClosePopupActionHandler);\n});\n\nexport default hoverModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from '../../base/types';\nimport { MoveCommand, MoveMouseListener, LocationPostprocessor } from './move';\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst moveModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(MoveMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(MoveMouseListener);\n    configureCommand({ bind, isBound }, MoveCommand);\n    bind(LocationPostprocessor).toSelf().inSingletonScope();\n    bind(TYPES.IVNodePostprocessor).toService(LocationPostprocessor);\n    bind(TYPES.HiddenVNodePostprocessor).toService(LocationPostprocessor);\n});\n\nexport default moveModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { OpenMouseListener } from \"./open\";\n\nconst openModule = new ContainerModule(bind => {\n    bind(OpenMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(OpenMouseListener);\n});\n\nexport default openModule;\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { ManhattanEdgeRouter } from \"./manhattan-edge-router\";\nimport { PolylineEdgeRouter } from \"./polyline-edge-router\";\nimport { ManhattanRectangularAnchor, ManhattanEllipticAnchor, ManhattanDiamondAnchor } from \"./manhattan-anchors\";\nimport { RectangleAnchor, EllipseAnchor, DiamondAnchor } from \"./polyline-anchors\";\nimport { AnchorComputerRegistry } from \"./anchor\";\nimport { EdgeRouterRegistry } from \"./routing\";\nimport { AddRemoveBezierSegmentCommand, BezierEdgeRouter } from './bezier-edge-router';\nimport { BezierDiamondAnchor, BezierEllipseAnchor, BezierRectangleAnchor } from './bezier-anchors';\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst routingModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(EdgeRouterRegistry).toSelf().inSingletonScope();\n\n    bind(AnchorComputerRegistry).toSelf().inSingletonScope();\n\n    bind(ManhattanEdgeRouter).toSelf().inSingletonScope();\n    bind(TYPES.IEdgeRouter).toService(ManhattanEdgeRouter);\n    bind(ManhattanEllipticAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(ManhattanEllipticAnchor);\n    bind(ManhattanRectangularAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(ManhattanRectangularAnchor);\n    bind(ManhattanDiamondAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(ManhattanDiamondAnchor);\n\n    bind(PolylineEdgeRouter).toSelf().inSingletonScope();\n    bind(TYPES.IEdgeRouter).toService(PolylineEdgeRouter);\n    bind(EllipseAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(EllipseAnchor);\n    bind(RectangleAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(RectangleAnchor);\n    bind(DiamondAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(DiamondAnchor);\n\n    bind(BezierEdgeRouter).toSelf().inSingletonScope();\n    bind(TYPES.IEdgeRouter).toService(BezierEdgeRouter);\n    bind(BezierEllipseAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(BezierEllipseAnchor);\n    bind(BezierRectangleAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(BezierRectangleAnchor);\n    bind(BezierDiamondAnchor).toSelf().inSingletonScope();\n    bind(TYPES.IAnchorComputer).toService(BezierDiamondAnchor);\n\n    configureCommand({ bind, isBound }, AddRemoveBezierSegmentCommand);\n});\n\nexport default routingModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { SelectCommand, SelectAllCommand, SelectKeyboardListener, SelectMouseListener, GetSelectionCommand } from \"./select\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst selectModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, SelectCommand);\n    configureCommand({ bind, isBound }, SelectAllCommand);\n    configureCommand({ bind, isBound }, GetSelectionCommand);\n    bind(SelectKeyboardListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(SelectKeyboardListener);\n    bind(SelectMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(SelectMouseListener);\n});\n\nexport default selectModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { UndoRedoKeyListener } from \"./undo-redo\";\n\nconst undoRedoModule = new ContainerModule(bind => {\n    bind(UndoRedoKeyListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(UndoRedoKeyListener);\n});\n\nexport default undoRedoModule;\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { UpdateModelCommand } from \"./update-model\";\n\nconst updateModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, UpdateModelCommand);\n});\n\nexport default updateModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { TYPES } from \"../../base/types\";\nimport { CenterCommand, CenterKeyboardListener, FitToScreenCommand } from \"./center-fit\";\nimport { SetViewportCommand, GetViewportCommand } from \"./viewport\";\nimport { ScrollMouseListener } from \"./scroll\";\nimport { ZoomMouseListener } from \"./zoom\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\n\nconst viewportModule = new ContainerModule((bind , _unbind, isBound) => {\n    configureCommand({ bind, isBound }, CenterCommand);\n    configureCommand({ bind, isBound }, FitToScreenCommand);\n    configureCommand({ bind, isBound }, SetViewportCommand);\n    configureCommand({ bind, isBound }, GetViewportCommand);\n    bind(CenterKeyboardListener).toSelf().inSingletonScope();\n    bind(TYPES.KeyListener).toService(CenterKeyboardListener);\n    bind(ScrollMouseListener).toSelf().inSingletonScope();\n    bind(ZoomMouseListener).toSelf().inSingletonScope();\n    bind(TYPES.MouseListener).toService(ScrollMouseListener);\n    bind(TYPES.MouseListener).toService(ZoomMouseListener);\n});\n\nexport default viewportModule;\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand } from \"../../base/commands/command-registration\";\nimport { BringToFrontCommand } from './zorder';\n\nconst zorderModule = new ContainerModule((bind, _unbind, isBound) => {\n    configureCommand({ bind, isBound }, BringToFrontCommand);\n});\n\nexport default zorderModule;\n", "/********************************************************************************\n * Copyright (c) 2017-2022 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { inject, injectable } from 'inversify';\nimport { VNode } from \"snabbdom\";\nimport { Point } from 'sprotty-protocol/lib/utils/geometry';\nimport { getSubType } from 'sprotty-protocol/lib/utils/model-utils';\nimport { IView, IViewArgs, RenderingContext } from \"../base/views/view\";\nimport { setAttr } from '../base/views/vnode-utils';\nimport { ShapeView } from '../features/bounds/views';\nimport {\n    BY_DESCENDING_X_THEN_DESCENDING_Y,\n    BY_DESCENDING_X_THEN_Y,\n    BY_X_THEN_DESCENDING_Y,\n    BY_X_THEN_Y,\n    IntersectingRoutedPoint,\n    Intersection,\n    isIntersectingRoutedPoint\n} from '../features/edge-intersection/intersection-finder';\nimport { isEdgeLayoutable } from '../features/edge-layout/model';\nimport { SRoutableElementImpl, SRoutingHandleImpl } from '../features/routing/model';\nimport { EdgeRouterRegistry, RoutedPoint } from '../features/routing/routing';\nimport { RoutableView } from '../features/routing/views';\nimport { svg } from '../lib/jsx';\nimport { PointToPointLine } from '../utils/geometry';\nimport { SCompartmentImpl, SEdgeImpl, SGraphImpl, SLabelImpl } from \"./sgraph\";\n\n/**\n * IView component that turns an SGraph element and its children into a tree of virtual DOM elements.\n */\n@injectable()\nexport class SGraphView implements IView {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    render(model: Readonly<SGraphImpl>, context: RenderingContext): VNode {\n        const edgeRouting = this.edgeRouterRegistry.routeAllChildren(model);\n        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;\n        return <svg class-sprotty-graph={true}>\n            <g transform={transform}>\n                {context.renderChildren(model, { edgeRouting })}\n            </g>\n        </svg>;\n    }\n\n}\n\n@injectable()\nexport class PolylineEdgeView extends RoutableView {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    render(edge: Readonly<SEdgeImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        const route = this.edgeRouterRegistry.route(edge, args);\n        if (route.length === 0) {\n            return this.renderDanglingEdge(\"Cannot compute route\", edge, context);\n        }\n        if (!this.isVisible(edge, route, context)) {\n            if (edge.children.length === 0) {\n                return undefined;\n            }\n            // The children of an edge are not necessarily inside the bounding box of the route,\n            // so we need to render a group to ensure the children have a chance to be rendered.\n            return <g>{context.renderChildren(edge, { route })}</g>;\n        }\n\n        return <g class-sprotty-edge={true} class-mouseover={edge.hoverFeedback}>\n            {this.renderLine(edge, route, context, args)}\n            {this.renderAdditionals(edge, route, context)}\n            {context.renderChildren(edge, { route })}\n        </g>;\n    }\n\n    protected renderLine(edge: SEdgeImpl, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\n        const firstPoint = segments[0];\n        let path = `M ${firstPoint.x},${firstPoint.y}`;\n        for (let i = 1; i < segments.length; i++) {\n            const p = segments[i];\n            path += ` L ${p.x},${p.y}`;\n        }\n        return <path d={path} />;\n    }\n\n    protected renderAdditionals(edge: SEdgeImpl, segments: Point[], context: RenderingContext): VNode[] {\n        // here we need to render the control points?\n        return [];\n    }\n\n    protected renderDanglingEdge(message: string, edge: SEdgeImpl, context: RenderingContext): VNode {\n        return <text class-sprotty-edge-dangling={true} title={message}>?</text>;\n    }\n}\n\n/**\n * A `PolylineEdgeView` that renders jumps over intersections.\n *\n * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`\n * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.\n *\n * This view only draws correct line jumps for intersections among straight line segments and doesn't work with bezier curves.\n *\n * @see IntersectionFinder\n * @see IntersectingRoutedPoint\n * @see EdgeRouterRegistry\n */\n@injectable()\nexport class JumpingPolylineEdgeView extends PolylineEdgeView {\n\n    protected jumpOffsetBefore = 5;\n    protected jumpOffsetAfter = 5;\n    protected skipOffsetBefore = 3;\n    protected skipOffsetAfter = 2;\n\n    protected override renderLine(edge: SEdgeImpl, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\n        let path = '';\n        for (let i = 0; i < segments.length; i++) {\n            const p = segments[i];\n            if (i === 0) {\n                path = `M ${p.x},${p.y}`;\n            }\n            if (isIntersectingRoutedPoint(p)) {\n                path += this.intersectionPath(edge, segments, p, args);\n            }\n            if (i !== 0) {\n                path += ` L ${p.x},${p.y}`;\n            }\n        }\n        return <path d={path} />;\n    }\n\n    /**\n     * Returns a path that takes the intersections into account by drawing a line jump or a gap for intersections on that path.\n     */\n    protected intersectionPath(edge: SEdgeImpl, segments: Point[], intersectingPoint: IntersectingRoutedPoint, args?: IViewArgs): string {\n        if (intersectingPoint.intersections.length < 1) {\n            return '';\n        }\n\n        const segment = this.getLineSegment(edge, intersectingPoint.intersections[0], args, segments);\n        const intersections = this.getIntersectionsSortedBySegmentDirection(segment, intersectingPoint);\n\n        let path = '';\n        for (const intersection of intersections) {\n            const otherLineSegment = this.getOtherLineSegment(edge, intersection, args);\n            if (otherLineSegment === undefined) {\n                continue;\n            }\n            const currentLineSegment = this.getLineSegment(edge, intersection, args, segments);\n            const intersectionPoint = intersection.intersectionPoint;\n            if (this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment)) {\n                path += this.createJumpPath(intersectionPoint, currentLineSegment);\n            } else if (this.shouldDrawLineGapOnIntersection(currentLineSegment, otherLineSegment)) {\n                path += this.createGapPath(intersectionPoint, currentLineSegment);\n            }\n        }\n\n        return path;\n    }\n\n    /**\n     * Returns the intersections sorted by the direction of the `lineSegment`.\n     *\n     * The coordinate system goes from left to right and top to bottom.\n     * Thus, x increases to the right and y increases downwards.\n     *\n     * We need to draw the intersections in the order of the direction of the line segment.\n     * To draw a line pointing north, we need to order intersections by Y in a descending order.\n     * To draw a line pointing south, we need to order intersections by Y in an ascending order.\n     */\n    protected getIntersectionsSortedBySegmentDirection(lineSegment: PointToPointLine, intersectingPoint: IntersectingRoutedPoint) {\n        switch (lineSegment.direction) {\n            case 'north':\n            case 'north-east':\n                return intersectingPoint.intersections.sort(BY_X_THEN_DESCENDING_Y);\n\n            case 'south':\n            case 'south-east':\n            case 'east':\n                return intersectingPoint.intersections.sort(BY_X_THEN_Y);\n\n            case 'south-west':\n            case 'west':\n                return intersectingPoint.intersections.sort(BY_DESCENDING_X_THEN_Y);\n\n            case 'north-west':\n                return intersectingPoint.intersections.sort(BY_DESCENDING_X_THEN_DESCENDING_Y);\n        }\n    }\n\n    /**\n     * Whether or not to draw a line jump on an intersection for the `currentLineSegment`.\n     * This should usually be inverse of `shouldDrawLineGapOnIntersection()`.\n     */\n    protected shouldDrawLineJumpOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\n        return Math.abs(currentLineSegment.slopeOrMax) < Math.abs(otherLineSegment.slopeOrMax);\n    }\n\n    /**\n     * Whether or not to draw a line gap on an intersection for the `currentLineSegment`.\n     * This should usually be inverse of `shouldDrawLineJumpOnIntersection()`.\n     */\n    protected shouldDrawLineGapOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\n        return !this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment);\n    }\n\n    protected getLineSegment(edge: SRoutableElementImpl, intersection: Intersection, args?: IViewArgs, segments?: Point[]): PointToPointLine {\n        const route = segments ? segments : this.edgeRouterRegistry.route(edge, args);\n        const index = intersection.routable1 === edge.id ? intersection.segmentIndex1 : intersection.segmentIndex2;\n        return new PointToPointLine(route[index], route[index + 1]);\n    }\n\n    protected getOtherLineSegment(currentEdge: SEdgeImpl, intersection: Intersection, args?: IViewArgs): PointToPointLine | undefined {\n        const otherEdgeId = intersection.routable1 === currentEdge.id ? intersection.routable2 : intersection.routable1;\n        const otherEdge = currentEdge.index.getById(otherEdgeId);\n        if (!(otherEdge instanceof SRoutableElementImpl)) {\n            return undefined;\n        }\n        return this.getLineSegment(otherEdge, intersection, args);\n    }\n\n    protected createJumpPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, this.jumpOffsetBefore);\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, this.jumpOffsetAfter);\n        const rotation = lineSegment.p1.x < lineSegment.p2.x ? 1 : 0;\n        return ` L ${anchorBefore.x},${anchorBefore.y} A 1,1 0,0 ${rotation} ${anchorAfter.x},${anchorAfter.y}`;\n    }\n\n    protected createGapPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\n        let offsetBefore;\n        let offsetAfter;\n        if (intersectionPoint.y < lineSegment.p1.y) {\n            offsetBefore = -this.skipOffsetBefore;\n            offsetAfter = this.jumpOffsetAfter + this.skipOffsetAfter;\n        } else {\n            offsetBefore = this.jumpOffsetBefore + this.skipOffsetAfter;\n            offsetAfter = -this.skipOffsetBefore;\n        }\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, offsetBefore);\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, offsetAfter);\n        return ` L ${anchorBefore.x},${anchorBefore.y} M ${anchorAfter.x},${anchorAfter.y}`;\n    }\n\n}\n\n/**\n * A `PolylineEdgeView` that renders gaps on intersections.\n *\n * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`\n * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.\n *\n * This view only draws correct gaps for intersections among straight line segments and doesn't work with bezier curves.\n *\n * @see IntersectionFinder\n * @see IntersectingRoutedPoint\n * @see EdgeRouterRegistry\n */\n@injectable()\nexport class PolylineEdgeViewWithGapsOnIntersections extends JumpingPolylineEdgeView {\n\n    protected override skipOffsetBefore = 3;\n    protected override skipOffsetAfter = 3;\n\n    protected override shouldDrawLineJumpOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\n        return false;\n    }\n\n    protected override shouldDrawLineGapOnIntersection(currentLineSegment: PointToPointLine, otherLineSegment: PointToPointLine) {\n        return Math.abs(currentLineSegment.slopeOrMax) >= Math.abs(otherLineSegment.slopeOrMax);\n    }\n\n    protected override createGapPath(intersectionPoint: Point, lineSegment: PointToPointLine): string {\n        const anchorBefore = Point.shiftTowards(intersectionPoint, lineSegment.p1, this.skipOffsetBefore);\n        const anchorAfter = Point.shiftTowards(intersectionPoint, lineSegment.p2, this.skipOffsetAfter);\n        return ` L ${anchorBefore.x},${anchorBefore.y} M ${anchorAfter.x},${anchorAfter.y}`;\n    }\n\n}\n\n@injectable()\nexport class BezierCurveEdgeView extends RoutableView {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    render(edge: Readonly<SEdgeImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        const route = this.edgeRouterRegistry.route(edge, args);\n        if (route.length === 0) {\n            return this.renderDanglingEdge(\"Cannot compute route\", edge, context);\n        }\n        if (!this.isVisible(edge, route, context)) {\n            if (edge.children.length === 0) {\n                return undefined;\n            }\n            // The children of an edge are not necessarily inside the bounding box of the route,\n            // so we need to render a group to ensure the children have a chance to be rendered.\n            return <g>{context.renderChildren(edge, { route })}</g>;\n        }\n\n        return <g class-sprotty-edge={true} class-mouseover={edge.hoverFeedback}>\n            {this.renderLine(edge, route, context, args)}\n            {this.renderAdditionals(edge, route, context)}\n            {context.renderChildren(edge, { route })}\n        </g>;\n    }\n\n    protected renderLine(edge: SEdgeImpl, segments: Point[], context: RenderingContext, args?: IViewArgs): VNode {\n        /**\n         * Example for two splines:\n         * SVG:\n         * <path d=\"M0,300 C0,150 300,150 300,300 S600,450 600,300\" />\n         *\n         * Segments input layout:\n         * routingPoints[0] = source;\n         * routingPoints[1] = controlForSource;\n         * routingPoints[2] = controlForSegment1;\n         * routingPoints[3] = segment;\n         * routingPoints[4] = controlForSegment2;\n         * routingPoints[5] = controlForTarget;\n         * routingPoints[6] = target;\n         */\n        let path = '';\n        if (segments.length >= 4) {\n            path += this.buildMainSegment(segments);\n            const pointsLeft = segments.length - 4;\n            if (pointsLeft > 0 && pointsLeft % 3 === 0) {\n                for (let i = 4; i < segments.length; i += 3) {\n                    path += this.addSpline(segments, i);\n                }\n            }\n        }\n        return <path d={path} />;\n    }\n\n    private buildMainSegment(segments: Point[]) {\n        const s = segments[0];\n        const h1 = segments[1];\n        const h2 = segments[2];\n        const t = segments[3];\n        return `M${s.x},${s.y} C${h1.x},${h1.y} ${h2.x},${h2.y} ${t.x},${t.y}`;\n    }\n\n    private addSpline(segments: Point[], index: number) {\n        // We have two controls for each junction, but SVG does not therefore index is jumped over\n        const c = segments[index + 1];\n        const p = segments[index + 2];\n        return ` S${c.x},${c.y} ${p.x},${p.y}`;\n    }\n\n    protected renderAdditionals(edge: SEdgeImpl, segments: Point[], context: RenderingContext): VNode[] {\n        return [];\n    }\n\n    protected renderDanglingEdge(message: string, edge: SEdgeImpl, context: RenderingContext): VNode {\n        return <text class-sprotty-edge-dangling={true} title={message}>?</text>;\n    }\n}\n\n@injectable()\nexport class SRoutingHandleView implements IView {\n\n    @inject(EdgeRouterRegistry) edgeRouterRegistry: EdgeRouterRegistry;\n\n    minimalPointDistance: number = 10;\n\n    render(handle: Readonly<SRoutingHandleImpl>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\n        if (args && args.route) {\n            if (handle.parent instanceof SRoutableElementImpl) {\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\n                const theRoute = args.route === undefined ? this.edgeRouterRegistry.route(handle.parent, args) : args.route;\n                const position = router.getHandlePosition(handle.parent, theRoute, handle);\n                if (position !== undefined) {\n                    const node = <circle class-sprotty-routing-handle={true}\n                        class-selected={handle.selected} class-mouseover={handle.hoverFeedback}\n                        cx={position.x} cy={position.y} r={this.getRadius()} />;\n                    setAttr(node, 'data-kind', handle.kind);\n                    return node;\n                }\n            }\n        }\n        // Fallback: Create an empty group\n        return <g />;\n    }\n\n    getRadius(): number {\n        return 7;\n    }\n}\n\n@injectable()\nexport class SLabelView extends ShapeView {\n    render(label: Readonly<SLabelImpl>, context: RenderingContext): VNode | undefined {\n        if (!isEdgeLayoutable(label) && !this.isVisible(label, context)) {\n            return undefined;\n        }\n        const vnode = <text class-sprotty-label={true}>{label.text}</text>;\n        const subType = getSubType(label);\n        if (subType) {\n            setAttr(vnode, 'class', subType);\n        }\n        return vnode;\n    }\n}\n\n@injectable()\nexport class SCompartmentView implements IView {\n    render(compartment: Readonly<SCompartmentImpl>, context: RenderingContext, args?: IViewArgs): VNode | undefined {\n        const translate = `translate(${compartment.bounds.x}, ${compartment.bounds.y})`;\n        const vnode = <g transform={translate} class-sprotty-comp=\"{true}\">\n            {context.renderChildren(compartment)}\n        </g>;\n        const subType = getSubType(compartment);\n        if (subType)\n            setAttr(vnode, 'class', subType);\n        return vnode;\n    }\n}\n\n@injectable()\nexport class SBezierCreateHandleView extends SRoutingHandleView {\n\n    override render(handle: Readonly<SRoutingHandleImpl>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\n        if (args) {\n            const theRoute = args.route;\n            if (theRoute && handle.parent instanceof SRoutableElementImpl) {\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\n                const position = router.getHandlePosition(handle.parent, theRoute, handle);\n                if (position !== undefined) {\n\n                    const translation = \"translate(\" + position.x + \", \" + position.y + \")\";\n                    const textOffsetX = -5.5;\n                    const textOffsetY = 5.5;\n                    const text = (handle.kind === \"bezier-add\") ? \"+\" : \"-\";\n                    const node =\n                        <g transform={translation} class-sprotty-routing-handle={true}\n                            class-selected={handle.selected} class-mouseover={handle.hoverFeedback}>\n                            <circle r={this.getRadius()} />\n                            <text x={textOffsetX} y={textOffsetY} attrs-text-align=\"middle\"\n                                style-font-family=\"monospace\" style-pointer-events=\"none\" style-fill=\"white\">{text}</text>\n                        </g>;\n                    setAttr(node, 'data-kind', handle.kind);\n                    return node;\n                }\n            }\n        }\n        // Fallback: Create an empty group\n        return <g />;\n    }\n}\n\n@injectable()\nexport class SBezierControlHandleView extends SRoutingHandleView {\n\n    override render(handle: Readonly<SRoutingHandleImpl>, context: RenderingContext, args?: { route?: RoutedPoint[] }): VNode {\n        if (args) {\n            const theRoute = args.route;\n            if (theRoute && handle.parent instanceof SRoutableElementImpl) {\n                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);\n                const position = router.getHandlePosition(handle.parent, theRoute, handle) as any;\n                if (position !== undefined) {\n\n                    let pathEndPos: Point | undefined;\n                    for (let i = 0; i < theRoute.length; i++) {\n                        const elem = theRoute[i];\n                        if (elem.kind === position.kind && elem.pointIndex === position.pointIndex) {\n                            if (handle.kind === 'bezier-control-before') {\n                                pathEndPos = theRoute[i + 1];\n                            } else {\n                                pathEndPos = theRoute[i - 1];\n                            }\n                            break;\n                        }\n                    }\n\n                    let node;\n                    if (pathEndPos) {\n                        const coords = `M ${position.x}, ${position.y} L ${pathEndPos.x}, ${pathEndPos.y}`;\n                        node =\n                            <g class-sprotty-routing-handle={true} class-selected={handle.selected} class-mouseover={handle.hoverFeedback}>\n                                <path d={coords} stroke=\"grey\" style-stroke-width=\"2px\"></path>\n                                <circle cx={position.x} cy={position.y} r={this.getRadius()} />\n                            </g>;\n                    } else {\n                        node = <circle class-sprotty-routing-handle={true} class-selected={handle.selected} class-mouseover={handle.hoverFeedback}\n                            cx={position.x} cy={position.y} r={this.getRadius()} />;\n                    }\n\n                    setAttr(node, 'data-kind', handle.kind);\n                    return node;\n                }\n            }\n        }\n        // Fallback: Create an empty group\n        return <g />;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from \"inversify\";\nimport { configureCommand } from \"../base/commands/command-registration\";\nimport { TYPES } from \"../base/types\";\nimport { CommitModelCommand } from \"./commit-model\";\nimport { ComputedBoundsApplicator, ModelSource } from \"./model-source\";\n\n/**\n * This container module does NOT provide any binding for TYPES.ModelSource because that needs to be\n * done according to the needs of the application. You can choose between a local (LocalModelSource)\n * and a remote (e.g. WebSocketDiagramServer) implementation.\n */\nconst modelSourceModule = new ContainerModule((bind, _unbind, isBound) => {\n    bind(TYPES.ModelSourceProvider).toProvider<ModelSource>((context) => {\n        return () => {\n            return new Promise<ModelSource>((resolve) => {\n                resolve(context.container.get<ModelSource>(TYPES.ModelSource));\n            });\n        };\n    });\n    configureCommand({bind, isBound}, CommitModelCommand);\n    bind(TYPES.IActionHandlerInitializer).toService(TYPES.ModelSource);\n    bind(ComputedBoundsApplicator).toSelf().inSingletonScope();\n});\n\nexport default modelSourceModule;\n", "/********************************************************************************\n * Copyright (c) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, ContainerModule } from 'inversify';\nimport defaultModule from '../base/di.config';\nimport modelSourceModule from '../model-source/di.config';\nimport boundsModule from '../features/bounds/di.config';\nimport buttonModule from '../features/button/di.config';\nimport commandPaletteModule from '../features/command-palette/di.config';\nimport contextMenuModule from '../features/context-menu/di.config';\nimport decorationModule from '../features/decoration/di.config';\nimport edgeLayoutModule from '../features/edge-layout/di.config';\nimport { edgeEditModule, labelEditModule, labelEditUiModule } from '../features/edit/di.config';\nimport expandModule from '../features/expand/di.config';\nimport exportModule from '../features/export/di.config';\nimport fadeModule from '../features/fade/di.config';\nimport hoverModule from '../features/hover/di.config';\nimport moveModule from '../features/move/di.config';\nimport openModule from '../features/open/di.config';\nimport routingModule from '../features/routing/di.config';\nimport selectModule from '../features/select/di.config';\nimport undoRedoModule from '../features/undo-redo/di.config';\nimport updateModule from '../features/update/di.config';\nimport viewportModule from '../features/viewport/di.config';\nimport zorderModule from '../features/zorder/di.config';\n\nexport interface LoadModuleOptions {\n    exclude?: ContainerModule[]\n}\n\n/**\n * Load the default set of container modules provided by Sprotty.\n */\nexport function loadDefaultModules(container: Container, options?: LoadModuleOptions) {\n    const modules = [\n        defaultModule, modelSourceModule, boundsModule, buttonModule,\n        commandPaletteModule, contextMenuModule, decorationModule, edgeEditModule,\n        edgeLayoutModule, expandModule, exportModule, fadeModule,\n        hoverModule, labelEditModule, labelEditUiModule, moveModule,\n        openModule, routingModule, selectModule, undoRedoModule,\n        updateModule, viewportModule, zorderModule\n    ];\n    if (options && options.exclude) {\n        for (const mod of options.exclude) {\n            const index = modules.indexOf(mod);\n            if (index >= 0)\n                modules.splice(index, 1);\n        }\n    }\n    container.load(...modules);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { h, vnode, VNode, VNodeData } from 'snabbdom';\n\nfunction buildVNodeData(attrs: { [key: string]: string }) {\n    const data: VNodeData = {};\n    const addData = (memo: Record<string, string> | null, name: string) => {\n        if (name !== 'style' && name !== 'class') {\n            const val = unescapeEntities(attrs[name]);\n            memo ? memo[name] = val : memo = { [name]: val };\n        }\n        return memo;\n    };\n    const _attrs = Object.keys(attrs).reduce(addData, null);\n\n    if (_attrs) {\n        data.attrs = _attrs;\n    }\n\n    const style = parseStyle(attrs);\n    if (style) {\n        data.style = style;\n    }\n\n    const classes = parseClass(attrs);\n    if (classes) {\n        data.class = classes;\n    }\n    return data;\n}\n\nfunction parseStyle(attrs: { [key: string]: string }) {\n    const addStyle = (memo: Record<string, string> | null, styleProp: string) => {\n        const res = styleProp.split(':');\n        const name = transformName(res[0].trim());\n        if (name) {\n            const val = res[1].replace('!important', '').trim();\n            memo ? memo[name] = val : memo = { [name]: val };\n        }\n        return memo;\n    };\n    try {\n        return attrs.style.split(';').reduce(addStyle, null);\n    } catch (e) {\n        return null;\n    }\n}\n\nfunction parseClass(attrs: { [key: string]: string }) {\n    const addClass = (memo: Record<string, boolean> | null, className: string) => {\n        className = className.trim();\n        if (className) {\n            memo ? memo[className] = true : memo = { [className]: true };\n        }\n        return memo;\n    };\n    try {\n        return attrs.class.split(' ').reduce(addClass, null);\n    } catch (e) {\n        return null;\n    }\n}\n\nfunction transformName(name: string) {\n    // Replace -a with A to help camel case style property names.\n    name = name.replace(/-(\\w)/g, function _replace($1, $2) {\n        return $2.toUpperCase();\n    });\n    // Handle properties that start with a -.\n    const firstChar = name.charAt(0).toLowerCase();\n    return `${firstChar}${name.substring(1)}`;\n}\n\n// Regex for matching HTML entities.\nconst entityRegex = new RegExp('&[a-z0-9#]+;', 'gi');\n// Element for setting innerHTML for transforming entities.\nlet el: HTMLDivElement | null = null;\n\nfunction unescapeEntities(text: string) {\n    // Create the element using the context if it doesn't exist.\n    if (!el) {\n        el = document.createElement('div');\n    }\n    return text.replace(entityRegex, (entity) => {\n        if (el === null) return '';\n        el.innerHTML = entity;\n        return el.textContent === null ? '' : el.textContent;\n    });\n}\n\nfunction recurse(doc: Node, func: (node: Node, parent: Node | null) => void) {\n    let node: Node | null = doc;\n    let parent: Node | null = null;\n    const stack: Node[] = [];\n\n    const setChild = (n: Node) => {\n        const child = n.firstChild;\n        if (child !== null) {\n            parent = n;\n        }\n        node = child;\n    };\n    func(node, parent);\n    setChild(node);\n\n    while (true) {\n        while (node) {\n            stack.push(node);\n            func(node, parent);\n            setChild(node);\n        }\n        const _node = stack.pop();\n        node = _node ? _node : null;\n        if (!stack.length) break;\n        parent = stack[stack.length - 1];\n        if (node) {\n            const sibling = node.nextSibling;\n            if (sibling == null) {\n                parent = stack[stack.length - 1];\n            }\n            node = sibling;\n        }\n    }\n}\n\nlet vdom: VNode | null = null;\nconst vnodeMap = new Map<Node, VNode>();\nlet delimited = false;\n\nfunction toVNode(node: Node, parent: Node | null) {\n\n    let current: VNode | undefined;\n    if (parent !== null) {\n        current = vnodeMap.get(parent);\n    }\n\n    switch (node?.nodeType) {\n        // element\n        case 1: {\n            if (current === undefined) return;\n            current.children = current.children ? current.children : [];\n            const children = current.children;\n            const attributes = (node as Element).attributes;\n            const attrs: { [key: string]: string } = {};\n            for (let i = 0; i < attributes.length; i++) {\n                const attr = attributes.item(i);\n                if (attr) {\n                    attrs[attr.name] = attr.value;\n                }\n            }\n            const vn = h(node.nodeName, buildVNodeData(attrs));\n            children.push(vn);\n            vnodeMap.set(node, vn);\n            break;\n        }\n        // text\n        case 3: {\n            const text = node.textContent;\n            if (text !== null && current !== undefined) {\n                current.children = current.children ? current.children : [];\n                const children = current.children;\n                const lastData = children.length > 0 ? children[children.length - 1] : null;\n                if (!delimited && typeof lastData !== 'string' && lastData !== null && lastData.sel === undefined) {\n                    lastData.text = lastData.text + text;\n                } else {\n                    children.push(vnode(undefined, undefined, undefined, text, undefined));\n                }\n                delimited = false;\n            }\n            break;\n        }\n        case 8: {\n            delimited = true;\n            break;\n        }\n        // document\n        case 9: {\n            vdom = vnode(undefined, undefined, [], undefined, undefined);\n            vnodeMap.set(node, vdom);\n            break;\n        }\n        default:\n            break;\n    }\n}\n\nfunction stripVNode(vnodes: VNode | null) {\n    const children = vnodes?.children;\n    if (typeof children === 'undefined') return null;\n    if (children.length === 1 && typeof children[0] !== 'string') return children[0];\n    return null;\n}\n\nexport default function virtualizeString(html?: string) {\n\n    const parser = new window.DOMParser();\n    if (parser === undefined || html === undefined || html === '') return null;\n\n    const doc = parser.parseFromString(html, \"application/xml\");\n\n    if (doc?.firstChild?.nodeName === 'parsererror') {\n        const error = `${doc?.firstChild?.textContent}`;\n        return h('parsererror', [error]);\n    }\n\n    delimited = false;\n    vdom = null;\n    recurse(doc, toVNode);\n\n    if (vdom === null) return null;\n    return stripVNode(vdom);\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { Bounds, Dimension, Point } from \"sprotty-protocol/lib/utils/geometry\";\nimport { SModelRootImpl, SChildElementImpl } from \"../base/model/smodel\";\nimport { BoundsAware, boundsFeature, Alignable, alignFeature, isBoundsAware } from \"../features/bounds/model\";\nimport { Locateable, moveFeature } from \"../features/move/model\";\nimport { Selectable, selectFeature } from \"../features/select/model\";\nimport { SNodeImpl, SPortImpl } from '../graph/sgraph';\nimport { RECTANGULAR_ANCHOR_KIND, DIAMOND_ANCHOR_KIND, ELLIPTIC_ANCHOR_KIND } from \"../features/routing/anchor\";\n\n/**\n * A node that is represented by a circle.\n */\nexport class CircularNode extends SNodeImpl {\n    override get anchorKind() {\n        return ELLIPTIC_ANCHOR_KIND;\n    }\n}\n\n/**\n * A node that is represented by a rectangle.\n */\nexport class RectangularNode extends SNodeImpl {\n    override get anchorKind() {\n        return RECTANGULAR_ANCHOR_KIND;\n    }\n}\n\n/**\n * A node that is represented by a diamond.\n */\nexport class DiamondNode extends SNodeImpl {\n    override get anchorKind() {\n        return DIAMOND_ANCHOR_KIND;\n    }\n}\n\n/**\n * A port that is represented by a circle.\n */\nexport class CircularPort extends SPortImpl {\n    override get anchorKind() {\n        return ELLIPTIC_ANCHOR_KIND;\n    }\n}\n\n/**\n * A port that is represented by a rectangle.\n */\nexport class RectangularPort extends SPortImpl {\n    override get anchorKind() {\n        return RECTANGULAR_ANCHOR_KIND;\n    }\n}\n\n/**\n * Serializable schema for HtmlRoot.\n *\n * @deprecated Use `HtmlRoot` from `sprotty-protocol` instead.\n */\nexport interface HtmlRootSchema extends SModelRootSchema {\n    classes?: string[]\n}\n\n/**\n * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.\n */\nexport class HtmlRootImpl extends SModelRootImpl {\n    classes: string[] = [];\n}\n\n/** @deprecated Use `HtmlRootImpl` instead. */\nexport const HtmlRoot = HtmlRootImpl;\n\n/**\n * Serializable schema for PreRenderedElement.\n *\n * @deprecated Use `PreRenderedElement` from `sprotty-protocol` instead.\n */\nexport interface PreRenderedElementSchema extends SModelElementSchema {\n    code: string\n}\n\n/**\n * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to\n * render complex figures or to compute the view on the server instead of the client code.\n */\nexport class PreRenderedElementImpl extends SChildElementImpl {\n    code: string;\n}\n\n/** @deprecated Use `PreRenderedElementImpl` instead. */\nexport const PreRenderedElement = PreRenderedElementImpl;\n\n/**\n * Serializable schema for ShapedPreRenderedElement.\n *\n * @deprecated Use `ShapedPreRenderedElement` from `sprotty-protocol` instead.\n */\nexport interface ShapedPreRenderedElementSchema extends PreRenderedElementSchema {\n    position?: Point\n    size?: Dimension\n}\n\n/**\n * Same as PreRenderedElement, but with a position and a size.\n */\nexport class ShapedPreRenderedElementImpl extends PreRenderedElementImpl implements BoundsAware, Locateable, Selectable, Alignable {\n    static readonly DEFAULT_FEATURES = [moveFeature, boundsFeature, selectFeature, alignFeature];\n\n    position: Point = Point.ORIGIN;\n    size: Dimension = Dimension.EMPTY;\n    selected: boolean = false;\n    alignment: Point = Point.ORIGIN;\n\n    get bounds(): Bounds {\n        return {\n            x: this.position.x,\n            y: this.position.y,\n            width: this.size.width,\n            height: this.size.height\n        };\n    }\n\n    set bounds(newBounds: Bounds) {\n        this.position = {\n            x: newBounds.x,\n            y: newBounds.y\n        };\n        this.size = {\n            width: newBounds.width,\n            height: newBounds.height\n        };\n    }\n\n}\n\n/** @deprecated Use `ShapedPreRenderedElementImpl` instead. */\nexport const ShapedPreRenderedElement = ShapedPreRenderedElementImpl;\n\n/**\n * A `foreignObject` element to be transferred to the DOM within the SVG.\n *\n * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of\n * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not\n * support rendering the `foreignObject` content.\n *\n * If no dimensions are specified in the schema element, this element will obtain the dimension of\n * its parent to fill the entire available room. Thus, this element requires specified bounds itself\n * or bounds to be available for its parent.\n */\nexport class ForeignObjectElementImpl extends ShapedPreRenderedElementImpl {\n    namespace: string;\n    override get bounds(): Bounds {\n        if (Dimension.isValid(this.size)) {\n            return {\n                x: this.position.x,\n                y: this.position.y,\n                width: this.size.width,\n                height: this.size.height\n            };\n        } else if (isBoundsAware(this.parent)) {\n            return {\n                x: this.position.x,\n                y: this.position.y,\n                width: this.parent.bounds.width,\n                height: this.parent.bounds.height\n            };\n        }\n        return Bounds.EMPTY;\n    }\n}\n\n/** @deprecated Use `ForeignObjectElementImpl` instead. */\nexport const ForeignObjectElement = ForeignObjectElementImpl;\n\n/**\n * Serializable schema for ForeignObjectElement.\n *\n * @deprecated Use `ForeignObjectElement` from `sprotty-protocol` instead.\n */\nexport interface ForeignObjectElementSchema extends ShapedPreRenderedElementSchema {\n    /** The namespace to be assigned to the elements inside of the `foreignObject`. */\n    namespace: string\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/** @jsx svg */\nimport { svg }\u00A0from './jsx';\nimport { injectable } from \"inversify\";\nimport virtualize from \"./virtualize\";\nimport { VNode } from \"snabbdom\";\nimport { IView, RenderingContext } from \"../base/views/view\";\nimport { setNamespace, setAttr } from \"../base/views/vnode-utils\";\nimport { ShapeView } from \"../features/bounds/views\";\nimport { ForeignObjectElementImpl, PreRenderedElementImpl, ShapedPreRenderedElementImpl } from \"./model\";\n\n@injectable()\nexport class PreRenderedView extends ShapeView {\n    render(model: Readonly<PreRenderedElementImpl>, context: RenderingContext): VNode | undefined {\n        if (model instanceof ShapedPreRenderedElementImpl && !this.isVisible(model, context)) {\n            return undefined;\n        }\n        const node = virtualize(model.code);\n        if (node === null) return undefined;\n        this.correctNamespace(node);\n        return node;\n    }\n\n    protected correctNamespace(node: VNode) {\n        if (node.sel === 'svg' || node.sel === 'g')\n            setNamespace(node, 'http://www.w3.org/2000/svg');\n    }\n}\n\n/**\n * An SVG `foreignObject` view with a namespace specified by the provided `ForeignObjectElement`.\n * Note that `foreignObject` may not be supported by all browsers or SVG viewers.\n */\n@injectable()\nexport class ForeignObjectView implements IView {\n    render(model: ForeignObjectElementImpl, context: RenderingContext): VNode | undefined{\n        const foreignObjectContents = virtualize(model.code);\n        if (foreignObjectContents === null) return undefined;\n        const node = <g>\n            <foreignObject requiredFeatures='http://www.w3.org/TR/SVG11/feature#Extensibility'\n                height={model.bounds.height} width={model.bounds.width} x={0} y={0}>\n                {foreignObjectContents}\n            </foreignObject>\n            {context.renderChildren(model)}\n        </g>;\n        setAttr(node, 'class', model.type);\n        setNamespace(foreignObjectContents, model.namespace);\n        return node;\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n /** @jsx html */\nimport { html }\u00A0from './jsx';\n\nimport { injectable } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { IView, RenderingContext } from '../base/views/view';\nimport { setClass } from '../base/views/vnode-utils';\nimport { HtmlRootImpl } from './model';\n\n/**\n * View for `HtmlRoot` elements. Typically this is used in hover popup boxes.\n */\n@injectable()\nexport class HtmlRootView implements IView {\n    render(model: HtmlRootImpl, context: RenderingContext): VNode {\n        const root = <div>\n            { context.renderChildren(model) }\n        </div>;\n        for (const c of model.classes) {\n            setClass(root, c, true);\n        }\n        return root;\n    }\n}\n", "/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2021 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { saveAs } from 'file-saver';\nimport { inject, injectable } from 'inversify';\nimport { OpenAction, ActionMessage as ProtocolActionMessage, isActionMessage as isProtocolActionMessage } from 'sprotty-protocol';\nimport {\n    Action, CollapseExpandAction, CollapseExpandAllAction, ComputedBoundsAction, RequestModelAction,\n    RequestPopupModelAction, SetModelAction, UpdateModelAction\n} from 'sprotty-protocol/lib/actions';\nimport { SModelRoot as SModelRootSchema } from 'sprotty-protocol/lib/model';\nimport { hasOwnProperty } from 'sprotty-protocol/lib/utils/object';\nimport { ActionHandlerRegistry } from '../base/actions/action-handler';\nimport { ICommand } from '../base/commands/command';\nimport { SetModelCommand } from '../base/features/set-model';\nimport { TYPES } from '../base/types';\nimport { RequestBoundsCommand } from '../features/bounds/bounds-manipulation';\nimport { ExportSvgAction } from '../features/export/svg-exporter';\nimport { UpdateModelCommand } from '../features/update/update-model';\nimport { ILogger } from '../utils/logging';\nimport { ComputedBoundsApplicator, ModelSource } from './model-source';\n\n/**\n * Sent by the external server when to signal a state change.\n */\nexport class ServerStatusAction {\n    static KIND = 'serverStatus';\n    kind = ServerStatusAction.KIND;\n    severity: string;\n    message: string;\n}\n\nconst receivedFromServerProperty = '__receivedFromServer';\n\n/**\n * A ModelSource that communicates with an external model provider, e.g.\n * a model editor.\n *\n * This class defines which actions are sent to and received from the\n * external model source.\n */\n@injectable()\nexport abstract class DiagramServerProxy extends ModelSource {\n\n    @inject(TYPES.ILogger) protected logger: ILogger;\n    @inject(ComputedBoundsApplicator) protected readonly computedBoundsApplicator: ComputedBoundsApplicator;\n\n    clientId: string;\n\n    protected currentRoot: SModelRootSchema = {\n        type: 'NONE',\n        id: 'ROOT'\n    };\n\n    protected lastSubmittedModelType: string;\n\n    override get model(): SModelRootSchema {\n        return this.currentRoot;\n    }\n\n    override initialize(registry: ActionHandlerRegistry): void {\n        super.initialize(registry);\n\n        // Register actions to be sent to the remote server\n        registry.register(ComputedBoundsAction.KIND, this);\n        registry.register(RequestBoundsCommand.KIND, this);\n        registry.register(RequestPopupModelAction.KIND, this);\n        registry.register(CollapseExpandAction.KIND, this);\n        registry.register(CollapseExpandAllAction.KIND, this);\n        registry.register(OpenAction.KIND, this);\n        registry.register(ServerStatusAction.KIND, this);\n\n        if (!this.clientId) {\n            this.clientId = this.viewerOptions.baseDiv;\n        }\n    }\n\n    handle(action: Action): void | ICommand | Action {\n        const forwardToServer = this.handleLocally(action);\n        if (forwardToServer) {\n            this.forwardToServer(action);\n        }\n    }\n\n    protected forwardToServer(action: Action): void {\n        const message: ProtocolActionMessage = {\n            clientId: this.clientId,\n            action: action\n        };\n        this.logger.log(this, 'sending', message);\n        this.sendMessage(message);\n    }\n\n    /**\n     * Send a message to the remote diagram server.\n     */\n    protected abstract sendMessage(message: ProtocolActionMessage): void;\n\n    /**\n     * Called when a message is received from the remote diagram server.\n     */\n    protected messageReceived(data: any): void {\n        const object = typeof(data) === 'string' ? JSON.parse(data) : data;\n        if (isProtocolActionMessage(object) && object.action) {\n            if (!object.clientId || object.clientId === this.clientId) {\n                (object.action as any)[receivedFromServerProperty] = true;\n                this.logger.log(this, 'receiving', object);\n                this.actionDispatcher.dispatch(object.action).then(() => {\n                    this.storeNewModel(object.action);\n                });\n            }\n        } else {\n            this.logger.error(this, 'received data is not an action message', object);\n        }\n    }\n\n    /**\n     * Check whether the given action should be handled locally. Returns true if the action should\n     * still be sent to the server, and false if it's only handled locally.\n     */\n    protected handleLocally(action: Action): boolean {\n        this.storeNewModel(action);\n        switch (action.kind) {\n            case ComputedBoundsAction.KIND:\n                return this.handleComputedBounds(action as ComputedBoundsAction);\n            case RequestModelAction.KIND:\n                return this.handleRequestModel(action as RequestModelAction);\n            case RequestBoundsCommand.KIND:\n                return false;\n            case ExportSvgAction.KIND:\n                return this.handleExportSvgAction(action as ExportSvgAction);\n            case ServerStatusAction.KIND:\n                return this.handleServerStateAction(action as ServerStatusAction);\n        }\n        return !(action as any)[receivedFromServerProperty];\n    }\n\n    /**\n     * Put the new model contained in the given action into the model storage, if there is any.\n     */\n    protected storeNewModel(action: Action): void {\n        if (action.kind === SetModelCommand.KIND\n            || action.kind === UpdateModelCommand.KIND\n            || action.kind === RequestBoundsCommand.KIND) {\n            const newRoot = (action as any).newRoot;\n            if (newRoot) {\n                this.currentRoot = newRoot as SModelRootSchema;\n                if (action.kind === SetModelCommand.KIND || action.kind === UpdateModelCommand.KIND) {\n                    this.lastSubmittedModelType = newRoot.type;\n                }\n            }\n        }\n    }\n\n    protected handleRequestModel(action: RequestModelAction): boolean {\n        const newOptions = {\n            needsClientLayout: this.viewerOptions.needsClientLayout,\n            needsServerLayout: this.viewerOptions.needsServerLayout,\n            ...action.options\n        };\n        const newAction = {\n            ...action,\n            options: newOptions\n        };\n        this.forwardToServer(newAction);\n        return false;\n    }\n\n    /**\n     * If the server requires to compute a layout, the computed bounds are forwarded. Otherwise they\n     * are applied to the current model locally and a model update is triggered.\n     */\n    protected handleComputedBounds(action: ComputedBoundsAction): boolean {\n        if (this.viewerOptions.needsServerLayout) {\n            return true;\n        } else {\n            const root = this.currentRoot;\n            this.computedBoundsApplicator.apply(root, action);\n            if (root.type === this.lastSubmittedModelType) {\n                this.actionDispatcher.dispatch(UpdateModelAction.create(root));\n            } else {\n                this.actionDispatcher.dispatch(SetModelAction.create(root));\n            }\n            this.lastSubmittedModelType = root.type;\n            return false;\n        }\n    }\n\n    protected handleExportSvgAction(action: ExportSvgAction): boolean {\n        const blob = new Blob([action.svg], { type: 'text/plain;charset=utf-8' });\n        saveAs(blob, 'diagram.svg');\n        return false;\n    }\n\n    protected handleServerStateAction(action: ServerStatusAction): boolean {\n        return false;\n    }\n\n    commitModel(newRoot: SModelRootSchema): Promise<SModelRootSchema> | SModelRootSchema {\n        const previousRoot = this.currentRoot;\n        this.currentRoot = newRoot;\n        return previousRoot;\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use `DiagramServerProxy` instead.\n */\nexport const DiagramServer = DiagramServerProxy;\n\n/**\n * Wrapper for actions when transferring them between client and server via a DiagramServer.\n *\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface ActionMessage {\n    clientId: string\n    action: Action\n}\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport function isActionMessage(object: unknown): object is ActionMessage {\n    return hasOwnProperty(object, 'action');\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { saveAs } from 'file-saver';\nimport { inject, injectable, optional } from 'inversify';\nimport {\n    Action, ComputedBoundsAction, RequestBoundsAction, RequestModelAction, RequestPopupModelAction,\n    SetModelAction, SetPopupModelAction, UpdateModelAction\n} from 'sprotty-protocol/lib/actions';\nimport { SModelElement as SModelElementSchema, SModelRoot as SModelRootSchema, Viewport} from 'sprotty-protocol/lib/model';\nimport { IModelLayoutEngine as ProtocolIModelLayoutEngine, GetViewportAction, ViewportResult, GetSelectionAction, SelectionResult } from 'sprotty-protocol';\nimport { Bounds } from 'sprotty-protocol/lib/utils/geometry';\nimport { SModelIndex, findElement } from 'sprotty-protocol/lib/utils/model-utils';\nimport { ILogger } from '../utils/logging';\nimport { FluentIterable } from '../utils/iterable';\nimport { TYPES } from '../base/types';\nimport { ActionHandlerRegistry } from '../base/actions/action-handler';\nimport { EMPTY_ROOT } from '../base/model/smodel-factory';\nimport { ExportSvgAction } from '../features/export/svg-exporter';\nimport { applyMatches, Match } from '../features/update/model-matching';\nimport { ModelSource, ComputedBoundsApplicator } from './model-source';\n\nexport interface IPopupModelProvider {\n    getPopupModel(request: RequestPopupModelAction, element?: SModelElementSchema): SModelRootSchema | undefined;\n}\n\n/**\n * A model source that allows to set and modify the model through function calls.\n * This class can be used as a facade over the action-based API of sprotty. It handles\n * actions for bounds calculation and model updates.\n */\n@injectable()\nexport class LocalModelSource extends ModelSource {\n\n    @inject(TYPES.ILogger) protected readonly logger: ILogger;\n    @inject(ComputedBoundsApplicator) protected readonly computedBoundsApplicator: ComputedBoundsApplicator;\n    @inject(TYPES.IPopupModelProvider)@optional() protected popupModelProvider?: IPopupModelProvider;\n    @inject(TYPES.IModelLayoutEngine)@optional() protected layoutEngine?: ProtocolIModelLayoutEngine;\n\n    protected currentRoot: SModelRootSchema = EMPTY_ROOT;\n\n    /**\n     * The `type` property of the model root is used to determine whether a model update\n     * is a change of the previous model or a totally new one.\n     */\n    protected lastSubmittedModelType: string;\n\n    override get model(): SModelRootSchema {\n        return this.currentRoot;\n    }\n\n    set model(root: SModelRootSchema) {\n        this.setModel(root);\n    }\n\n    override initialize(registry: ActionHandlerRegistry): void {\n        super.initialize(registry);\n\n        // Register actions to be handled by the `handle` method\n        registry.register(ComputedBoundsAction.KIND, this);\n        registry.register(RequestPopupModelAction.KIND, this);\n    }\n\n    /**\n     * Set the model without incremental update.\n     */\n    setModel(newRoot: SModelRootSchema): Promise<void> {\n        this.currentRoot = newRoot;\n        return this.submitModel(newRoot, false);\n    }\n\n    commitModel(newRoot: SModelRootSchema): Promise<SModelRootSchema> | SModelRootSchema {\n        const previousRoot = this.currentRoot;\n        this.currentRoot = newRoot;\n        return previousRoot;\n    }\n\n    /**\n     * Apply an incremental update to the model with an animation showing the transition to\n     * the new state. If `newRoot` is undefined, the current root is submitted; in that case\n     * it is assumed that it has been modified before.\n     */\n    updateModel(newRoot?: SModelRootSchema): Promise<void> {\n        if (newRoot === undefined) {\n            return this.submitModel(this.currentRoot, true);\n        } else {\n            this.currentRoot = newRoot;\n            return this.submitModel(newRoot, true);\n        }\n    }\n\n    /**\n     * Get the current selection from the model.\n     */\n    async getSelection(): Promise<FluentIterable<SModelElementSchema>> {\n        const res = await this.actionDispatcher.request<SelectionResult>(GetSelectionAction.create());\n        const result: SModelElementSchema[] = [];\n        this.gatherSelectedElements(this.currentRoot, new Set(res.selectedElementsIDs), result);\n        return result;\n    }\n\n    private gatherSelectedElements(element: SModelElementSchema, selected: Set<string>, result: SModelElementSchema[]): void {\n        if (selected.has(element.id)) {\n            result.push(element);\n        }\n        if (element.children) {\n            for (const child of element.children) {\n                this.gatherSelectedElements(child, selected, result);\n            }\n        }\n    }\n\n    /**\n     * Get the current viewport from the model.\n     */\n    async getViewport(): Promise<Viewport & { canvasBounds: Bounds }> {\n        const res = await this.actionDispatcher.request<ViewportResult>(GetViewportAction.create());\n        return {\n            scroll: res.viewport.scroll,\n            zoom: res.viewport.zoom,\n            canvasBounds: res.canvasBounds\n        };\n    }\n\n    /**\n     * If client layout is active, run a `RequestBoundsAction` and wait for the resulting\n     * `ComputedBoundsAction`, otherwise call `doSubmitModel(\u2026)` directly.\n     */\n    protected async submitModel(newRoot: SModelRootSchema, update: boolean | Match[], cause?: Action): Promise<void> {\n        if (this.viewerOptions.needsClientLayout) {\n            const computedBounds = await this.actionDispatcher.request<ComputedBoundsAction>(RequestBoundsAction.create(newRoot));\n            const index = this.computedBoundsApplicator.apply(this.currentRoot, computedBounds);\n            await this.doSubmitModel(newRoot, true, cause, index);\n        } else {\n            await this.doSubmitModel(newRoot, update, cause);\n        }\n    }\n\n    /**\n     * Submit the given model with an `UpdateModelAction` or a `SetModelAction` depending on the\n     * `update` argument. If available, the model layout engine is invoked first.\n     */\n    protected async doSubmitModel(newRoot: SModelRootSchema, update: boolean | Match[],\n            cause?: Action, index?: SModelIndex): Promise<void> {\n        if (this.layoutEngine !== undefined) {\n            try {\n                const layoutResult = this.layoutEngine.layout(newRoot, index);\n                if (layoutResult instanceof Promise)\n                    newRoot = await layoutResult;\n                else if (layoutResult !== undefined)\n                    newRoot = layoutResult;\n            } catch (error) {\n                this.logger.error(this, error.toString(), error.stack);\n            }\n        }\n\n        const lastSubmittedModelType = this.lastSubmittedModelType;\n        this.lastSubmittedModelType = newRoot.type;\n        if (cause && cause.kind === RequestModelAction.KIND && (cause as RequestModelAction).requestId) {\n            const request = cause as RequestModelAction;\n            await this.actionDispatcher.dispatch(SetModelAction.create(newRoot, request.requestId));\n        } else if (update && newRoot.type === lastSubmittedModelType) {\n            const input = Array.isArray(update) ? update : newRoot;\n            await this.actionDispatcher.dispatch(UpdateModelAction.create(input, { animate: true, cause }));\n        } else {\n            await this.actionDispatcher.dispatch(SetModelAction.create(newRoot));\n        }\n    }\n\n    /**\n     * Modify the current model with an array of matches.\n     */\n    applyMatches(matches: Match[]): Promise<void> {\n        const root = this.currentRoot;\n        applyMatches(root, matches);\n        return this.submitModel(root, matches);\n    }\n\n    /**\n     * Modify the current model by adding new elements.\n     */\n    addElements(elements: (SModelElementSchema | { element: SModelElementSchema, parentId: string })[]): Promise<void> {\n        const matches: Match[] = [];\n        for (const e of elements) {\n            const anye: any = e;\n            if (typeof anye.element === 'object' && typeof anye.parentId === 'string') {\n                matches.push({\n                    right: anye.element,\n                    rightParentId: anye.parentId\n                });\n            } else if (typeof anye.id === 'string') {\n                matches.push({\n                    right: anye,\n                    rightParentId: this.currentRoot.id\n                });\n            }\n        }\n        return this.applyMatches(matches);\n    }\n\n    /**\n     * Modify the current model by removing elements.\n     */\n    removeElements(elements: (string | { elementId: string, parentId: string })[]): Promise<void> {\n        const matches: Match[] = [];\n        const index = new SModelIndex();\n        index.add(this.currentRoot);\n        for (const e of elements) {\n            const anye: any = e;\n            if (anye.elementId !== undefined && anye.parentId !== undefined) {\n                const element = index.getById(anye.elementId);\n                if (element !== undefined) {\n                    matches.push({\n                        left: element,\n                        leftParentId: anye.parentId\n                    });\n                }\n            } else {\n                const element = index.getById(anye);\n                if (element !== undefined) {\n                    matches.push({\n                        left: element,\n                        leftParentId: this.currentRoot.id\n                    });\n                }\n            }\n        }\n        return this.applyMatches(matches);\n    }\n\n\n    // ----- Methods for handling incoming actions ----------------------------\n\n    handle(action: Action): void {\n        switch (action.kind) {\n            case RequestModelAction.KIND:\n                this.handleRequestModel(action as RequestModelAction);\n                break;\n            case ComputedBoundsAction.KIND:\n                this.computedBoundsApplicator.apply(this.currentRoot, action as ComputedBoundsAction);\n                break;\n            case RequestPopupModelAction.KIND:\n                this.handleRequestPopupModel(action as RequestPopupModelAction);\n                break;\n            case ExportSvgAction.KIND:\n                this.handleExportSvgAction(action as ExportSvgAction);\n                break;\n        }\n    }\n\n    protected handleRequestModel(action: RequestModelAction): void {\n        this.submitModel(this.currentRoot, false, action);\n    }\n\n    protected handleRequestPopupModel(action: RequestPopupModelAction): void {\n        if (this.popupModelProvider !== undefined) {\n            const element = findElement(this.currentRoot, action.elementId);\n            const popupRoot = this.popupModelProvider.getPopupModel(action, element);\n            if (popupRoot !== undefined) {\n                popupRoot.canvasBounds = action.bounds;\n                this.actionDispatcher.dispatch(SetPopupModelAction.create(popupRoot, action.requestId));\n            }\n        }\n    }\n\n    protected handleExportSvgAction(action: ExportSvgAction): void {\n        const blob = new Blob([action.svg], { type: 'text/plain;charset=utf-8' });\n        saveAs(blob, 'diagram.svg');\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use IPopupModelProvider instead.\n */\nexport type PopupModelFactory = (request: RequestPopupModelAction, element?: SModelElementSchema)\n    => SModelRootSchema | undefined;\n\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface IModelLayoutEngine {\n    layout(model: SModelRootSchema, index?: SModelIndex): SModelRootSchema | Promise<SModelRootSchema>;\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Action, LoggingAction as ProtocolLoggingAction } from 'sprotty-protocol/lib/actions';\nimport { ILogger, LogLevel } from '../utils/logging';\nimport { TYPES } from '../base/types';\nimport { ModelSource } from './model-source';\n\n/**\n * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.\n */\n@injectable()\nexport class ForwardingLogger implements ILogger {\n\n    @inject(TYPES.ModelSourceProvider) protected modelSourceProvider: () => Promise<ModelSource>;\n    @inject(TYPES.LogLevel) public logLevel: LogLevel;\n\n    error(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.error)\n            this.forward(thisArg, message, LogLevel.error, params);\n    }\n\n    warn(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.warn)\n            this.forward(thisArg, message, LogLevel.warn, params);\n    }\n\n    info(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.info)\n            this.forward(thisArg, message, LogLevel.info, params);\n    }\n\n    log(thisArg: any, message: string, ...params: any[]): void {\n        if (this.logLevel >= LogLevel.log) {\n            // We cannot forward 'log' level messages since that would lead to endless loops\n            try {\n                const caller = typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg);\n                console.log.apply(thisArg, [caller + ': ' + message, ...params]);\n            } catch (error) {}\n        }\n    }\n\n    protected forward(thisArg: any, message: string, logLevel: LogLevel, params: any[]) {\n        const date = new Date();\n        const action = ProtocolLoggingAction.create({\n            message,\n            severity: LogLevel[logLevel],\n            time: date.toLocaleTimeString(),\n            caller: typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg),\n            params: params.map(p => JSON.stringify(p))\n        });\n        this.modelSourceProvider().then(modelSource => {\n            try {\n                modelSource.handle(action);\n            } catch (error) {\n                try {\n                    console.log.apply(thisArg, [message, action, error]);\n                } catch (e) {}\n            }\n        });\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use the declaration from `sprotty-protocol` instead.\n */\nexport interface LoggingAction extends Action {\n    kind: typeof LoggingAction.KIND;\n    severity: string\n    time: string\n    caller: string\n    message: string\n    params: string[]\n}\nexport namespace LoggingAction {\n    export const KIND = 'logging';\n\n    export function create(options: { severity: string, time: string, caller: string, message: string, params: string[] }): LoggingAction {\n        return {\n            kind: KIND,\n            ...options\n        };\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from \"inversify\";\nimport { ActionMessage } from \"sprotty-protocol/lib/actions\";\nimport { DiagramServerProxy } from \"./diagram-server\";\n\n/**\n * An external ModelSource that connects to the model provider using a websocket.\n */\n@injectable()\nexport class WebSocketDiagramServerProxy extends DiagramServerProxy {\n\n    protected webSocket?: WebSocket;\n\n    listen(webSocket: WebSocket): void {\n        webSocket.addEventListener('message', event => {\n            this.messageReceived(event.data);\n        });\n        webSocket.addEventListener('error', event => {\n            this.logger.error(this, 'error event received', event);\n        });\n        this.webSocket = webSocket;\n    }\n\n    disconnect() {\n        if (this.webSocket) {\n            this.webSocket.close();\n            this.webSocket = undefined;\n        }\n    }\n\n    protected sendMessage(message: ActionMessage): void {\n        if (this.webSocket) {\n            this.webSocket.send(JSON.stringify(message));\n        } else {\n            throw new Error('WebSocket is not connected');\n        }\n    }\n}\n\n// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)\n\n/**\n * @deprecated Use `WebSocketDiagramServerProxy` instead;\n */\nexport const WebSocketDiagramServer = WebSocketDiagramServerProxy;\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport interface RGBColor {\n    red: number\n    green: number\n    blue: number\n}\n\nexport function rgb(red: number, green: number, blue: number): RGBColor {\n    return {\n        red: red,\n        green: green,\n        blue: blue\n    };\n}\n\nexport function toSVG(c: RGBColor): string {\n    return 'rgb(' + c.red + ',' + c.green + ',' + c.blue + ')';\n}\n\nexport class ColorMap {\n\n    constructor(protected stops: RGBColor[]) {\n    }\n\n    getColor(t: number): RGBColor {\n        t = Math.max(0, Math.min(0.99999999, t));\n        const i = Math.floor(t * this.stops.length);\n        return this.stops[i];\n    }\n}\n", "/********************************************************************************\n * Copyright (c) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n// ------------------ Base ------------------\n\nexport * from './base/actions/action';\nexport * from './base/actions/action-dispatcher';\nexport * from './base/actions/action-handler';\nexport * from './base/actions/diagram-locker';\n\nexport * from './base/animations/animation-frame-syncer';\nexport * from './base/animations/animation';\nexport * from './base/animations/easing';\n\nexport * from './base/commands/command';\nexport * from './base/commands/command-registration';\nexport * from './base/commands/command-stack-options';\nexport * from './base/commands/command-stack';\n\nexport * from './base/features/initialize-canvas';\nexport * from './base/features/set-model';\n\nexport * from './base/model/smodel-extension';\nexport * from './base/model/smodel-factory';\nexport * from './base/model/smodel-utils';\nexport * from './base/model/smodel';\n\nexport * from './base/tool-manager/tool-manager';\nexport * from './base/tool-manager/tool';\n\nexport * from './base/ui-extensions/ui-extension-registry';\nexport * from './base/ui-extensions/ui-extension';\n\nexport * from './base/views/key-tool';\nexport * from './base/views/mouse-tool';\nexport * from './base/views/thunk-view';\nexport * from './base/views/view';\nexport * from './base/views/viewer-cache';\nexport * from './base/views/viewer-options';\nexport * from './base/views/viewer';\nexport * from './base/views/vnode-postprocessor';\nexport * from './base/views/vnode-utils';\n\nexport * from './base/types';\n\nimport defaultModule from './base/di.config';\nexport { defaultModule };\n\n\n// ------------------ Features ------------------\n\nexport * from \"./features/bounds/bounds-manipulation\";\nexport * from \"./features/bounds/hidden-bounds-updater\";\nexport * from \"./features/bounds/layout\";\nexport * from \"./features/bounds/model\";\nexport * from \"./features/bounds/vbox-layout\";\nexport * from \"./features/bounds/hbox-layout\";\nexport * from \"./features/bounds/stack-layout\";\nexport * from \"./features/bounds/views\";\n\nexport * from \"./features/button/button-handler\";\nexport * from \"./features/button/model\";\n\nexport * from \"./features/command-palette/action-providers\";\nexport * from \"./features/command-palette/command-palette\";\n\nexport * from \"./features/context-menu/context-menu-service\";\nexport * from \"./features/context-menu/menu-providers\";\nexport * from \"./features/context-menu/mouse-listener\";\n\nexport * from \"./features/edge-layout/di.config\";\nexport * from \"./features/edge-layout/edge-layout\";\nexport * from \"./features/edge-layout/model\";\n\nexport * from \"./features/edit/create\";\nexport * from \"./features/edit/create-on-drag\";\nexport * from \"./features/edit/di.config\";\nexport * from \"./features/edit/delete\";\nexport * from \"./features/edit/edit-label\";\nexport * from \"./features/edit/edit-label-ui\";\nexport * from \"./features/edit/edit-routing\";\nexport * from \"./features/edit/model\";\nexport * from \"./features/edit/reconnect\";\n\nexport * from \"./features/expand/expand\";\nexport * from \"./features/expand/model\";\nexport * from \"./features/expand/views\";\n\nexport * from \"./features/export/export\";\nexport * from \"./features/export/model\";\nexport * from \"./features/export/svg-exporter\";\n\nexport * from \"./features/fade/fade\";\nexport * from \"./features/fade/model\";\n\nexport * from \"./features/hover/hover\";\nexport * from \"./features/hover/model\";\n\nexport * from \"./features/decoration/model\";\nexport * from \"./features/decoration/views\";\nexport * from \"./features/decoration/decoration-placer\";\n\nexport * from \"./features/edge-intersection/intersection-finder\";\nexport * from \"./features/edge-intersection/sweepline\";\n\nexport * from \"./features/move/model\";\nexport * from \"./features/move/move\";\nexport * from \"./features/move/snap\";\n\nexport * from \"./features/nameable/model\";\n\nexport * from \"./features/open/open\";\nexport * from \"./features/open/model\";\n\nexport * from \"./features/projection/model\";\nexport * from \"./features/projection/views\";\n\nexport * from \"./features/routing/anchor\";\nexport * from \"./features/routing/abstract-edge-router\";\nexport * from \"./features/routing/bezier-anchors\";\nexport * from \"./features/routing/bezier-edge-router\";\nexport * from \"./features/routing/manhattan-anchors\";\nexport * from \"./features/routing/manhattan-edge-router\";\nexport * from \"./features/routing/model\";\nexport * from \"./features/routing/polyline-anchors\";\nexport * from \"./features/routing/polyline-edge-router\";\nexport * from \"./features/routing/routing\";\nexport * from \"./features/routing/views\";\n\nexport * from \"./features/select/model\";\nexport * from \"./features/select/select\";\n\nexport * from \"./features/undo-redo/undo-redo\";\n\nexport * from \"./features/update/model-matching\";\nexport * from \"./features/update/update-model\";\n\nexport * from \"./features/viewport/center-fit\";\nexport * from \"./features/viewport/model\";\nexport * from \"./features/viewport/scroll\";\nexport * from \"./features/viewport/viewport-root\";\nexport * from \"./features/viewport/viewport\";\nexport * from \"./features/viewport/zoom\";\n\nexport * from \"./features/zorder/zorder\";\n\nimport graphModule from \"./graph/di.config\";\n\nimport boundsModule from \"./features/bounds/di.config\";\nimport buttonModule from \"./features/button/di.config\";\nimport commandPaletteModule from \"./features/command-palette/di.config\";\nimport contextMenuModule from \"./features/context-menu/di.config\";\nimport decorationModule from \"./features/decoration/di.config\";\nimport edgeIntersectionModule from \"./features/edge-intersection/di.config\";\nimport edgeLayoutModule from \"./features/edge-layout/di.config\";\nimport expandModule from \"./features/expand/di.config\";\nimport exportModule from \"./features/export/di.config\";\nimport fadeModule from \"./features/fade/di.config\";\nimport hoverModule from \"./features/hover/di.config\";\nimport moveModule from \"./features/move/di.config\";\nimport openModule from \"./features/open/di.config\";\nimport routingModule from \"./features/routing/di.config\";\nimport selectModule from \"./features/select/di.config\";\nimport undoRedoModule from \"./features/undo-redo/di.config\";\nimport updateModule from \"./features/update/di.config\";\nimport viewportModule from \"./features/viewport/di.config\";\nimport zorderModule from './features/zorder/di.config';\n\nexport {\n    graphModule, boundsModule, buttonModule, commandPaletteModule, contextMenuModule, decorationModule,\n    edgeIntersectionModule, edgeLayoutModule, expandModule, exportModule, fadeModule, hoverModule, moveModule,\n    openModule, routingModule, selectModule, undoRedoModule, updateModule, viewportModule, zorderModule\n};\n\n// ------------------ Graph ------------------\n\nexport * from \"./graph/sgraph-factory\";\nexport * from \"./graph/sgraph\";\nexport * from \"./graph/views\";\n\n\n// ------------------ Library ------------------\n\nexport * from \"./lib/modules\";\nexport * from \"./lib/generic-views\";\nexport * from \"./lib/html-views\";\nexport * from \"./lib/jsx\";\nexport * from \"./lib/model\";\nexport * from \"./lib/svg-views\";\n\n\n// ------------------ Model Source ------------------\n\nexport * from \"./model-source/commit-model\";\nexport * from \"./model-source/diagram-server\";\nexport * from \"./model-source/local-model-source\";\nexport * from \"./model-source/logging\";\nexport * from \"./model-source/model-source\";\nexport * from \"./model-source/websocket\";\n\nimport modelSourceModule from \"./model-source/di.config\";\nexport { modelSourceModule };\n\n\n// ------------------ Utilities ------------------\n\nexport * from \"./utils/browser\";\nexport * from \"./utils/codicon\";\nexport * from \"./utils/color\";\nexport * from \"./utils/geometry\";\nexport * from \"./utils/inversify\";\nexport * from \"./utils/json\";\nexport * from \"./utils/logging\";\nexport * from \"./utils/registry\";\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "import 'reflect-metadata'\n\nimport { LocalModelSource, TYPES } from 'sprotty'\nimport createContainer from './di.config'\nimport { graph } from './model-source';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const container = createContainer('sprotty');\n    const modelSource = container.get<LocalModelSource>(TYPES.ModelSource);\n    modelSource.setModel(graph);\n});", "import { Container, ContainerModule } from \"inversify\";\nimport { configureModelElement, configureViewerOptions, ConsoleLogger, edgeIntersectionModule, loadDefaultModules, LocalModelSource, LogLevel, PolylineEdgeView, RectangularNode, SEdge, SGraph, SGraphView, TYPES } from \"sprotty\";\nimport { TaskNodeView } from \"./views\";\n\nexport default (containerId: string) => {\n\n    const ASCETExamleModule = new ContainerModule((bind, unbind, isBound, rebind) => {\n        bind(TYPES.ModelSource).to(LocalModelSource).inSingletonScope();\n        rebind(TYPES.ILogger).to(ConsoleLogger).inSingletonScope();\n        rebind(TYPES.LogLevel).toConstantValue(LogLevel.log);\n        const context = { bind, unbind, isBound, rebind };\n        configureModelElement(context, 'graph', SGraph, SGraphView);\n        configureModelElement(context, 'task', RectangularNode, TaskNodeView);\n        configureModelElement(context, 'edge', SEdge, PolylineEdgeView);\n\n        configureViewerOptions(context, {\n            needsClientLayout: false,\n            baseDiv: containerId\n        });\n\n    });\n\n    const container = new Container();\n    loadDefaultModules(container);\n    container.load(ASCETExamleModule);\n    container.load(edgeIntersectionModule)\n    return container;\n\n}", "/** @jsx svg */\nimport { svg } from 'sprotty/lib/lib/jsx';\nimport { injectable } from 'inversify';\nimport { VNode } from 'snabbdom';\nimport { IView, RenderingContext, SNodeImpl } from 'sprotty';\nimport { SNode } from 'sprotty-protocol';\nimport { TaskNode } from './model';\n\n@injectable()\nexport class TaskNodeView implements IView {\n    render(node: Readonly<SNodeImpl & TaskNode>, context: RenderingContext): VNode {\n        return <g>\n            <rect class-sprotty-node={true} class-task={true}\n                class-running={node.isRunning}\n                class-finished={node.isFinished}\n                width={node.size.width}\n                height={node.size.height}\n            >\n            </rect>\n            <text x={node.size.width / 2} y={node.size.height / 2 + 5}>{node.name}</text>\n        </g>;\n    }\n}", "import { SEdge, SGraph, SNode } from \"sprotty-protocol\";\nimport { TaskNode } from \"./model\";\n\nexport const graph: SGraph = {\n    type: 'graph',\n    id: 'graph',\n    children: [\n        <SNode & TaskNode>{\n            type: 'task',\n            id: 'task01',\n            name: 'First Task',\n            isFinished: true,\n            isRunning: false,\n            position: { x: 0, y: 0 },\n            size: { width: 100, height: 100 }\n        },\n        <SNode & TaskNode>{\n            type: 'task',\n            id: 'task02',\n            name: 'Second Task',\n            isFinished: false,\n            isRunning: true,\n            position: { x: 0, y: 200 },\n            size: { width: 100, height: 100 }\n        },\n        <SNode & TaskNode>{\n            type: 'task',\n            id: 'task03',\n            name: 'Third Task',\n            isFinished: false,\n            isRunning: false,\n            position: { x: 150, y: 0 },\n            size: { width: 100, height: 100 }\n        },\n        <SEdge>{\n            type: 'edge',\n            id: 'edge01',\n            sourceId: 'task01',\n            targetId: 'task02',\n            routerKind: 'manhattan',\n        }\n    ]\n};"],
  "mappings": "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",
  "names": ["RejectAction", "RequestModelAction", "SetModelAction", "UpdateModelAction", "RequestPopupModelAction", "SetPopupModelAction", "SetBoundsAction", "RequestBoundsAction", "ComputedBoundsAction", "LoggingAction", "SelectAction", "SelectAllAction", "GetSelectionAction", "SelectionResult", "CollapseExpandAction", "CollapseExpandAllAction", "OpenAction", "LayoutAction", "CenterAction", "FitToScreenAction", "SetViewportAction", "GetViewportAction", "ViewportResult", "BringToFrontAction", "UndoAction", "RedoAction", "MoveAction", "HoverFeedbackAction", "CreateElementAction", "DeleteElementAction", "ApplyLabelEditAction", "ReconnectAction", "Binding", "MetadataReader", "Context", "Metadata", "Plan", "LazyServiceIdentifer", "QueryableString", "Target", "Request", "FactoryType", "BindingWhenSyntax", "BindingOnSyntax", "BindingWhenOnSyntax", "BindingInSyntax", "BindingInWhenOnSyntax", "BindingToSyntax", "self", "ContainerSnapshot", "Lookup", "ModuleActivationStore", "Container", "module", "ContainerModule", "AsyncContainerModule", "m", "injectable", "interfaces", "Point", "Dimension", "Bounds", "InitializeCanvasBoundsAction", "EnableToolsAction", "EnableDefaultToolsAction", "SetUIExtensionVisibilityAction", "tagName", "parentNode", "fragment", "vnode", "module", "init", "thunk", "jsx", "svg", "configureModelElement", "configureViewerOptions", "LogLevel", "ConsoleLogger", "DeleteElementAction", "Direction", "Side", "CreateElementAction", "EditLabelAction", "ApplyLabelEditAction", "ExportSvgAction", "svg", "CommitModelAction", "SwitchEditModeAction", "ReconnectAction", "RequestExportSvgAction", "HoverFeedbackAction", "global", "TinyQueue", "MoveAction", "AddRemoveBezierSegmentAction", "GetSelectionAction", "SelectionResult", "UndoAction", "RedoAction", "GetViewportAction", "ViewportResult", "BringToFrontAction", "edgeIntersectionModule", "SGraphView", "PolylineEdgeView", "loadDefaultModules", "RectangularNode", "a", "b", "c", "d", "g", "f", "e", "LocalModelSource", "LoggingAction", "Reflect", "hasOwn", "MapIterator", "Map", "Set", "WeakMap", "import_sprotty", "import_inversify"]
}
